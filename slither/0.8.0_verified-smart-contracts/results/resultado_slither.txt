CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BunnyDoodle.sol --json ./slither/0.8.0_verified-smart-contracts/json/BunnyDoodle.sol.json', returncode=56, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/BunnyDoodle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nBunnyDoodle.withdraw() (repositories/verified-smart-contracts/BunnyDoodle.sol#1217-1222) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/BunnyDoodle.sol#1218-1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BunnyDoodle.sol#1139-1158)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/BunnyDoodle.sol#1146)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: retval == IERC721Receiver(to).onERC721Received.selector (repositories/verified-smart-contracts/BunnyDoodle.sol#1147)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BunnyDoodle.sol#1148)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/BunnyDoodle.sol#1149)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BunnyDoodle.sol#1148)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/BunnyDoodle.sol#1155)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in BunnyDoodle.mint(address,uint16) (repositories/verified-smart-contracts/BunnyDoodle.sol#1224-1248):\n\tExternal calls:\n\t- _safeMint(_to,++ supply) (repositories/verified-smart-contracts/BunnyDoodle.sol#1245)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BunnyDoodle.sol#1139-1158)\n\tEvent emitted after the call(s):\n\t- Minted(supply) (repositories/verified-smart-contracts/BunnyDoodle.sol#1246)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#420-430) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#426-428)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#620-640) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#632-635)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#1154-1156)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#620-640) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#479-484) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#492-498) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#511-523) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#531-547) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#591-601) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#609-618) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#555-566) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#574-583) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#448-459) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BunnyDoodle.sol#26-28) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/BunnyDoodle.sol#826-828) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#1064-1076) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#362-373) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#378-392) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#58) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#217) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#293) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#326) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#397) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#645) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#670) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#697) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#1185) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#448-459):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BunnyDoodle.sol#454)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#531-547):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#543-545)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#574-583):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#581)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#609-618):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#616)\nLow level call in BunnyDoodle.withdraw() (repositories/verified-smart-contracts/BunnyDoodle.sol#1217-1222):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/BunnyDoodle.sol#1218-1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BunnyDoodle.sol#925) is not in mixedCase\nParameter BunnyDoodle.changePrice(uint256)._newPrice (repositories/verified-smart-contracts/BunnyDoodle.sol#1209) is not in mixedCase\nParameter BunnyDoodle.mint(address,uint16)._to (repositories/verified-smart-contracts/BunnyDoodle.sol#1224) is not in mixedCase\nParameter BunnyDoodle.mint(address,uint16)._count (repositories/verified-smart-contracts/BunnyDoodle.sol#1224) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nBunnyDoodle.slitherConstructorVariables() (repositories/verified-smart-contracts/BunnyDoodle.sol#1187-1254) uses literals with too many digits:\n\t- price = 59000000000000000 (repositories/verified-smart-contracts/BunnyDoodle.sol#1191)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/BunnyDoodle.sol#268-270)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#276-282)\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#753-765)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BunnyDoodle.sol#788-790)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BunnyDoodle.sol#795-797)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#802-819)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#833-843)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BunnyDoodle.sol#866-875)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#893-905)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#910-916)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BunnyDoodle.sol analyzed (11 contracts with 75 detectors), 56 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CryptoCreamies.sol --json ./slither/0.8.0_verified-smart-contracts/json/CryptoCreamies.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CryptoCreamies.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nCryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nCryptoCreamies.walletOfOwner(address).i (repositories/verified-smart-contracts/CryptoCreamies.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/CryptoCreamies.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCryptoCreamies.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/CryptoCreamies.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/CryptoCreamies.sol#610) (state variable)\nCryptoCreamies.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/CryptoCreamies.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/CryptoCreamies.sol#613) (state variable)\nCryptoCreamies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/CryptoCreamies.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/CryptoCreamies.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoCreamies.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/CryptoCreamies.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoCreamies.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/CryptoCreamies.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nCryptoCreamies.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/CryptoCreamies.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CryptoCreamies.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/CryptoCreamies.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CryptoCreamies.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#485)\nLow level call in CryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357):\n\t- (hs) = address(0x75aE3E33a9074012d926E259A75C64b42d7C4b81).call{value: address(this).balance * 5 / 100}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1347)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/CryptoCreamies.sol#768) is not in mixedCase\nParameter CryptoCreamies.mint(uint256)._mintAmount (repositories/verified-smart-contracts/CryptoCreamies.sol#1263) is not in mixedCase\nParameter CryptoCreamies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1279) is not in mixedCase\nParameter CryptoCreamies.setCost(uint256)._newCost (repositories/verified-smart-contracts/CryptoCreamies.sol#1319) is not in mixedCase\nParameter CryptoCreamies.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/CryptoCreamies.sol#1323) is not in mixedCase\nParameter CryptoCreamies.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/CryptoCreamies.sol#1327) is not in mixedCase\nParameter CryptoCreamies.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/CryptoCreamies.sol#1331) is not in mixedCase\nParameter CryptoCreamies.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/CryptoCreamies.sol#1335) is not in mixedCase\nParameter CryptoCreamies.pause(bool)._state (repositories/verified-smart-contracts/CryptoCreamies.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCryptoCreamies.maxSupply (repositories/verified-smart-contracts/CryptoCreamies.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/CryptoCreamies.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/CryptoCreamies.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- CryptoCreamies.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1292-1312)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#679-684)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/CryptoCreamies.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CryptoCreamies.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- CryptoCreamies.mint(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- CryptoCreamies.walletOfOwner(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#1279-1290)\nreveal() should be declared external:\n\t- CryptoCreamies.reveal() (repositories/verified-smart-contracts/CryptoCreamies.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- CryptoCreamies.setCost(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- CryptoCreamies.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- CryptoCreamies.setBaseExtension(string) (repositories/verified-smart-contracts/CryptoCreamies.sol#1335-1337)\npause(bool) should be declared external:\n\t- CryptoCreamies.pause(bool) (repositories/verified-smart-contracts/CryptoCreamies.sol#1339-1341)\nwithdraw() should be declared external:\n\t- CryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CryptoCreamies.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Relic.sol --json ./slither/0.8.0_verified-smart-contracts/json/Relic.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Relic.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Relic.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Relic.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PixelApeGodClub.sol --json ./slither/0.8.0_verified-smart-contracts/json/PixelApeGodClub.sol.json', returncode=80, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/PixelApeGodClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nPixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1095-1105)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nPixelApeGodClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#166) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PixelApeGodClub.sol#1095)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PixelApeGodClub.sol#1096)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelApeGodClub.sol#1097)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1098)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelApeGodClub.sol#1097)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1102)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#251-261) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#257-259)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#420-440) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#432-435)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#1101-1103)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nPixelApeGodClub.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208-1228) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/PixelApeGodClub.sol#1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#7)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#53)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#123)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#150)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#228)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#448)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#478)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#506)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#537)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#682)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#711)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1136)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#304-306) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#314-320) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#333-339) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#347-358) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#393-395) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#403-412) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#366-368) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#376-385) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#279-284) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#420-440) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PixelApeGodClub.sol#140-142) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/PixelApeGodClub.sol#35-41) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/PixelApeGodClub.sol#43-45) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/PixelApeGodClub.sol#811-813) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1008-1020) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#89-100) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#105-115) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#7) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#53) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#123) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#150) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#228) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#448) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#478) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#506) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#537) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#682) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#711) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1136) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#279-284):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#282)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#347-358):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#356)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#376-385):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#383)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#403-412):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#410)\nLow level call in PixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261):\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PixelApeGodClub.sol#885) is not in mixedCase\nParameter PixelApeGodClub.mint(uint256)._mintAmount (repositories/verified-smart-contracts/PixelApeGodClub.sol#1172) is not in mixedCase\nParameter PixelApeGodClub.mintForAddress(uint256,address)._mintAmount (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179) is not in mixedCase\nParameter PixelApeGodClub.mintForAddress(uint256,address)._receiver (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179) is not in mixedCase\nParameter PixelApeGodClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183) is not in mixedCase\nParameter PixelApeGodClub.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208) is not in mixedCase\nParameter PixelApeGodClub.setRevealed(bool)._state (repositories/verified-smart-contracts/PixelApeGodClub.sol#1230) is not in mixedCase\nParameter PixelApeGodClub.setCost(uint256)._cost (repositories/verified-smart-contracts/PixelApeGodClub.sol#1234) is not in mixedCase\nParameter PixelApeGodClub.setMaxMintAmountPerTx(uint256)._maxMintAmountPerTx (repositories/verified-smart-contracts/PixelApeGodClub.sol#1238) is not in mixedCase\nParameter PixelApeGodClub.setHiddenMetadataUri(string)._hiddenMetadataUri (repositories/verified-smart-contracts/PixelApeGodClub.sol#1242) is not in mixedCase\nParameter PixelApeGodClub.setUriPrefix(string)._uriPrefix (repositories/verified-smart-contracts/PixelApeGodClub.sol#1246) is not in mixedCase\nParameter PixelApeGodClub.setUriSuffix(string)._uriSuffix (repositories/verified-smart-contracts/PixelApeGodClub.sol#1250) is not in mixedCase\nParameter PixelApeGodClub.setPaused(bool)._state (repositories/verified-smart-contracts/PixelApeGodClub.sol#1254) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nPixelApeGodClub.maxSupply (repositories/verified-smart-contracts/PixelApeGodClub.sol#1152) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PixelApeGodClub.sol#199-201)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#207-210)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PixelApeGodClub.sol#785-787)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PixelApeGodClub.sol#792-794)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#799-804)\n\t- PixelApeGodClub.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208-1228)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#818-828)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#842-844)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#856-865)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#870-876)\ntotalSupply() should be declared external:\n\t- PixelApeGodClub.totalSupply() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1168-1170)\nmint(uint256) should be declared external:\n\t- PixelApeGodClub.mint(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1172-1177)\nmintForAddress(uint256,address) should be declared external:\n\t- PixelApeGodClub.mintForAddress(uint256,address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179-1181)\nwalletOfOwner(address) should be declared external:\n\t- PixelApeGodClub.walletOfOwner(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183-1206)\nsetRevealed(bool) should be declared external:\n\t- PixelApeGodClub.setRevealed(bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1230-1232)\nsetCost(uint256) should be declared external:\n\t- PixelApeGodClub.setCost(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1234-1236)\nsetMaxMintAmountPerTx(uint256) should be declared external:\n\t- PixelApeGodClub.setMaxMintAmountPerTx(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1238-1240)\nsetUriPrefix(string) should be declared external:\n\t- PixelApeGodClub.setUriPrefix(string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1246-1248)\nsetUriSuffix(string) should be declared external:\n\t- PixelApeGodClub.setUriSuffix(string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1250-1252)\nsetPaused(bool) should be declared external:\n\t- PixelApeGodClub.setPaused(bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1254-1256)\nwithdraw() should be declared external:\n\t- PixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PixelApeGodClub.sol analyzed (12 contracts with 75 detectors), 80 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SekiraDao.sol --json ./slither/0.8.0_verified-smart-contracts/json/SekiraDao.sol.json', returncode=48, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/SekiraDao.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/SekiraDao.sol#305)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/SekiraDao.sol#295)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#296)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/SekiraDao.sol#309)\nReentrancy in SekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/SekiraDao.sol#270)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tState variables written after the call(s):\n\t- tradingOpen = true (repositories/verified-smart-contracts/SekiraDao.sol#275)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[93m\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (repositories/verified-smart-contracts/SekiraDao.sol#276)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nSekiraDao.allowance(address,address).owner (repositories/verified-smart-contracts/SekiraDao.sol#181) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/SekiraDao.sol#70-72) (function)\nSekiraDao._approve(address,address,uint256).owner (repositories/verified-smart-contracts/SekiraDao.sol#206) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/SekiraDao.sol#70-72) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/SekiraDao.sol#310)\nReentrancy in SekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/SekiraDao.sol#270)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tState variables written after the call(s):\n\t- _maxTxAmount = 12000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#274)\n\t- cooldownEnabled = true (repositories/verified-smart-contracts/SekiraDao.sol#273)\n\t- swapEnabled = true (repositories/verified-smart-contracts/SekiraDao.sol#272)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/SekiraDao.sol#209)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#299)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/SekiraDao.sol#210)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nSekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(cooldown[to] < block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#224)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/SekiraDao.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/SekiraDao.sol#99) is not in mixedCase\nConstant SekiraDao._tTotal (repositories/verified-smart-contracts/SekiraDao.sol#119) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._name (repositories/verified-smart-contracts/SekiraDao.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._symbol (repositories/verified-smart-contracts/SekiraDao.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._decimals (repositories/verified-smart-contracts/SekiraDao.sol#130) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/SekiraDao.sol#305)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/SekiraDao.sol#295)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#296)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/SekiraDao.sol#309)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/SekiraDao.sol#310)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#299)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/SekiraDao.sol#209)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/SekiraDao.sol#210)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable SekiraDao._feeAddrWallet1 (repositories/verified-smart-contracts/SekiraDao.sol#125) is too similar to SekiraDao._feeAddrWallet2 (repositories/verified-smart-contracts/SekiraDao.sol#126)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nSekiraDao.constructor() (repositories/verified-smart-contracts/SekiraDao.sol#145-154) uses literals with too many digits:\n\t- Transfer(address(0x0000000000000000000000000000000000000000),_msgSender(),_tTotal) (repositories/verified-smart-contracts/SekiraDao.sol#153)\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) uses literals with too many digits:\n\t- _maxTxAmount = 12000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#274)\nSekiraDao.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/SekiraDao.sol#110-362) uses literals with too many digits:\n\t- _tTotal = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#119)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/SekiraDao.sol#61) is never used in SekiraDao (repositories/verified-smart-contracts/SekiraDao.sol#110-362)\nSekiraDao._tOwned (repositories/verified-smart-contracts/SekiraDao.sol#113) is never used in SekiraDao (repositories/verified-smart-contracts/SekiraDao.sol#110-362)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/SekiraDao.sol#61) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/SekiraDao.sol#79-82)\nname() should be declared external:\n\t- SekiraDao.name() (repositories/verified-smart-contracts/SekiraDao.sol#156-158)\nsymbol() should be declared external:\n\t- SekiraDao.symbol() (repositories/verified-smart-contracts/SekiraDao.sol#160-162)\ndecimals() should be declared external:\n\t- SekiraDao.decimals() (repositories/verified-smart-contracts/SekiraDao.sol#164-166)\ntotalSupply() should be declared external:\n\t- SekiraDao.totalSupply() (repositories/verified-smart-contracts/SekiraDao.sol#168-170)\ntransfer(address,uint256) should be declared external:\n\t- SekiraDao.transfer(address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#176-179)\nallowance(address,address) should be declared external:\n\t- SekiraDao.allowance(address,address) (repositories/verified-smart-contracts/SekiraDao.sol#181-183)\napprove(address,uint256) should be declared external:\n\t- SekiraDao.approve(address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#185-188)\ntransferFrom(address,address,uint256) should be declared external:\n\t- SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194)\nsetBots(address[]) should be declared external:\n\t- SekiraDao.setBots(address[]) (repositories/verified-smart-contracts/SekiraDao.sol#279-283)\ndelBot(address) should be declared external:\n\t- SekiraDao.delBot(address) (repositories/verified-smart-contracts/SekiraDao.sol#285-287)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/SekiraDao.sol analyzed (7 contracts with 75 detectors), 48 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
