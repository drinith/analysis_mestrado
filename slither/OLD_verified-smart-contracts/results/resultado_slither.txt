CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BunnyDoodle.sol --json ./slither/OLD_verified-smart-contracts/json/BunnyDoodle.sol.json', returncode=56, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/BunnyDoodle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nBunnyDoodle.withdraw() (repositories/verified-smart-contracts/BunnyDoodle.sol#1217-1222) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/BunnyDoodle.sol#1218-1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BunnyDoodle.sol#1139-1158)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/BunnyDoodle.sol#1146)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: retval == IERC721Receiver(to).onERC721Received.selector (repositories/verified-smart-contracts/BunnyDoodle.sol#1147)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BunnyDoodle.sol#1148)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/BunnyDoodle.sol#1149)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BunnyDoodle.sol#1148)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/BunnyDoodle.sol#1155)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in BunnyDoodle.mint(address,uint16) (repositories/verified-smart-contracts/BunnyDoodle.sol#1224-1248):\n\tExternal calls:\n\t- _safeMint(_to,++ supply) (repositories/verified-smart-contracts/BunnyDoodle.sol#1245)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BunnyDoodle.sol#1139-1158)\n\tEvent emitted after the call(s):\n\t- Minted(supply) (repositories/verified-smart-contracts/BunnyDoodle.sol#1246)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#420-430) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#426-428)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#620-640) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#632-635)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#1132-1162) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BunnyDoodle.sol#1154-1156)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#620-640) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#479-484) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#492-498) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#511-523) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#531-547) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#591-601) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#609-618) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BunnyDoodle.sol#555-566) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#574-583) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#448-459) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BunnyDoodle.sol#26-28) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/BunnyDoodle.sol#826-828) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#1064-1076) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#362-373) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#378-392) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#58) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#217) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#293) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#326) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#397) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#645) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#670) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#697) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BunnyDoodle.sol#1185) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#448-459):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BunnyDoodle.sol#454)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#531-547):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#543-545)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#574-583):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#581)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BunnyDoodle.sol#609-618):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BunnyDoodle.sol#616)\nLow level call in BunnyDoodle.withdraw() (repositories/verified-smart-contracts/BunnyDoodle.sol#1217-1222):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/BunnyDoodle.sol#1218-1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BunnyDoodle.sol#925) is not in mixedCase\nParameter BunnyDoodle.changePrice(uint256)._newPrice (repositories/verified-smart-contracts/BunnyDoodle.sol#1209) is not in mixedCase\nParameter BunnyDoodle.mint(address,uint16)._to (repositories/verified-smart-contracts/BunnyDoodle.sol#1224) is not in mixedCase\nParameter BunnyDoodle.mint(address,uint16)._count (repositories/verified-smart-contracts/BunnyDoodle.sol#1224) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nBunnyDoodle.slitherConstructorVariables() (repositories/verified-smart-contracts/BunnyDoodle.sol#1187-1254) uses literals with too many digits:\n\t- price = 59000000000000000 (repositories/verified-smart-contracts/BunnyDoodle.sol#1191)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/BunnyDoodle.sol#268-270)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#276-282)\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/BunnyDoodle.sol#753-765)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BunnyDoodle.sol#788-790)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BunnyDoodle.sol#795-797)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#802-819)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#833-843)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BunnyDoodle.sol#866-875)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#893-905)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BunnyDoodle.sol#910-916)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BunnyDoodle.sol analyzed (11 contracts with 75 detectors), 56 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CryptoCreamies.sol --json ./slither/OLD_verified-smart-contracts/json/CryptoCreamies.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CryptoCreamies.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nCryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nCryptoCreamies.walletOfOwner(address).i (repositories/verified-smart-contracts/CryptoCreamies.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/CryptoCreamies.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCryptoCreamies.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/CryptoCreamies.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/CryptoCreamies.sol#610) (state variable)\nCryptoCreamies.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/CryptoCreamies.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/CryptoCreamies.sol#613) (state variable)\nCryptoCreamies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/CryptoCreamies.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/CryptoCreamies.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoCreamies.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/CryptoCreamies.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoCreamies.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/CryptoCreamies.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoCreamies.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nCryptoCreamies.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/CryptoCreamies.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/CryptoCreamies.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CryptoCreamies.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/CryptoCreamies.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoCreamies.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CryptoCreamies.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoCreamies.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/CryptoCreamies.sol#485)\nLow level call in CryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357):\n\t- (hs) = address(0x75aE3E33a9074012d926E259A75C64b42d7C4b81).call{value: address(this).balance * 5 / 100}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1347)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CryptoCreamies.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/CryptoCreamies.sol#768) is not in mixedCase\nParameter CryptoCreamies.mint(uint256)._mintAmount (repositories/verified-smart-contracts/CryptoCreamies.sol#1263) is not in mixedCase\nParameter CryptoCreamies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoCreamies.sol#1279) is not in mixedCase\nParameter CryptoCreamies.setCost(uint256)._newCost (repositories/verified-smart-contracts/CryptoCreamies.sol#1319) is not in mixedCase\nParameter CryptoCreamies.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/CryptoCreamies.sol#1323) is not in mixedCase\nParameter CryptoCreamies.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/CryptoCreamies.sol#1327) is not in mixedCase\nParameter CryptoCreamies.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/CryptoCreamies.sol#1331) is not in mixedCase\nParameter CryptoCreamies.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/CryptoCreamies.sol#1335) is not in mixedCase\nParameter CryptoCreamies.pause(bool)._state (repositories/verified-smart-contracts/CryptoCreamies.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCryptoCreamies.maxSupply (repositories/verified-smart-contracts/CryptoCreamies.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/CryptoCreamies.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/CryptoCreamies.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- CryptoCreamies.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1292-1312)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#679-684)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/CryptoCreamies.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CryptoCreamies.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- CryptoCreamies.mint(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- CryptoCreamies.walletOfOwner(address) (repositories/verified-smart-contracts/CryptoCreamies.sol#1279-1290)\nreveal() should be declared external:\n\t- CryptoCreamies.reveal() (repositories/verified-smart-contracts/CryptoCreamies.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- CryptoCreamies.setCost(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- CryptoCreamies.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/CryptoCreamies.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- CryptoCreamies.setBaseExtension(string) (repositories/verified-smart-contracts/CryptoCreamies.sol#1335-1337)\npause(bool) should be declared external:\n\t- CryptoCreamies.pause(bool) (repositories/verified-smart-contracts/CryptoCreamies.sol#1339-1341)\nwithdraw() should be declared external:\n\t- CryptoCreamies.withdraw() (repositories/verified-smart-contracts/CryptoCreamies.sol#1343-1357)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CryptoCreamies.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Relic.sol --json ./slither/OLD_verified-smart-contracts/json/Relic.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Relic.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Relic.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Relic.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Relic.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PixelApeGodClub.sol --json ./slither/OLD_verified-smart-contracts/json/PixelApeGodClub.sol.json', returncode=80, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/PixelApeGodClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nPixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1095-1105)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nPixelApeGodClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#166) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PixelApeGodClub.sol#1095)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PixelApeGodClub.sol#1096)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelApeGodClub.sol#1097)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1098)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelApeGodClub.sol#1097)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1102)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#251-261) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#257-259)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#420-440) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#432-435)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1088-1109) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelApeGodClub.sol#1101-1103)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nPixelApeGodClub.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208-1228) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/PixelApeGodClub.sol#1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#7)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#53)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#123)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#150)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#228)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#448)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#478)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#506)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#537)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#682)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#711)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1136)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#304-306) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#314-320) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#333-339) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#347-358) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#393-395) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#403-412) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/PixelApeGodClub.sol#366-368) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#376-385) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#279-284) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#420-440) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PixelApeGodClub.sol#140-142) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/PixelApeGodClub.sol#35-41) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/PixelApeGodClub.sol#43-45) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/PixelApeGodClub.sol#811-813) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1008-1020) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#89-100) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#105-115) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#7) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#53) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#123) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#150) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#228) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#448) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#478) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#506) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#537) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#682) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#711) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/PixelApeGodClub.sol#1136) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#279-284):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#282)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#347-358):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#356)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#376-385):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#383)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#403-412):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/PixelApeGodClub.sol#410)\nLow level call in PixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261):\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PixelApeGodClub.sol#885) is not in mixedCase\nParameter PixelApeGodClub.mint(uint256)._mintAmount (repositories/verified-smart-contracts/PixelApeGodClub.sol#1172) is not in mixedCase\nParameter PixelApeGodClub.mintForAddress(uint256,address)._mintAmount (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179) is not in mixedCase\nParameter PixelApeGodClub.mintForAddress(uint256,address)._receiver (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179) is not in mixedCase\nParameter PixelApeGodClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183) is not in mixedCase\nParameter PixelApeGodClub.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208) is not in mixedCase\nParameter PixelApeGodClub.setRevealed(bool)._state (repositories/verified-smart-contracts/PixelApeGodClub.sol#1230) is not in mixedCase\nParameter PixelApeGodClub.setCost(uint256)._cost (repositories/verified-smart-contracts/PixelApeGodClub.sol#1234) is not in mixedCase\nParameter PixelApeGodClub.setMaxMintAmountPerTx(uint256)._maxMintAmountPerTx (repositories/verified-smart-contracts/PixelApeGodClub.sol#1238) is not in mixedCase\nParameter PixelApeGodClub.setHiddenMetadataUri(string)._hiddenMetadataUri (repositories/verified-smart-contracts/PixelApeGodClub.sol#1242) is not in mixedCase\nParameter PixelApeGodClub.setUriPrefix(string)._uriPrefix (repositories/verified-smart-contracts/PixelApeGodClub.sol#1246) is not in mixedCase\nParameter PixelApeGodClub.setUriSuffix(string)._uriSuffix (repositories/verified-smart-contracts/PixelApeGodClub.sol#1250) is not in mixedCase\nParameter PixelApeGodClub.setPaused(bool)._state (repositories/verified-smart-contracts/PixelApeGodClub.sol#1254) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nPixelApeGodClub.maxSupply (repositories/verified-smart-contracts/PixelApeGodClub.sol#1152) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PixelApeGodClub.sol#199-201)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#207-210)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PixelApeGodClub.sol#785-787)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PixelApeGodClub.sol#792-794)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#799-804)\n\t- PixelApeGodClub.tokenURI(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1208-1228)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#818-828)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#842-844)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#856-865)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#870-876)\ntotalSupply() should be declared external:\n\t- PixelApeGodClub.totalSupply() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1168-1170)\nmint(uint256) should be declared external:\n\t- PixelApeGodClub.mint(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1172-1177)\nmintForAddress(uint256,address) should be declared external:\n\t- PixelApeGodClub.mintForAddress(uint256,address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1179-1181)\nwalletOfOwner(address) should be declared external:\n\t- PixelApeGodClub.walletOfOwner(address) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1183-1206)\nsetRevealed(bool) should be declared external:\n\t- PixelApeGodClub.setRevealed(bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1230-1232)\nsetCost(uint256) should be declared external:\n\t- PixelApeGodClub.setCost(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1234-1236)\nsetMaxMintAmountPerTx(uint256) should be declared external:\n\t- PixelApeGodClub.setMaxMintAmountPerTx(uint256) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1238-1240)\nsetUriPrefix(string) should be declared external:\n\t- PixelApeGodClub.setUriPrefix(string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1246-1248)\nsetUriSuffix(string) should be declared external:\n\t- PixelApeGodClub.setUriSuffix(string) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1250-1252)\nsetPaused(bool) should be declared external:\n\t- PixelApeGodClub.setPaused(bool) (repositories/verified-smart-contracts/PixelApeGodClub.sol#1254-1256)\nwithdraw() should be declared external:\n\t- PixelApeGodClub.withdraw() (repositories/verified-smart-contracts/PixelApeGodClub.sol#1258-1261)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PixelApeGodClub.sol analyzed (12 contracts with 75 detectors), 80 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SekiraDao.sol --json ./slither/OLD_verified-smart-contracts/json/SekiraDao.sol.json', returncode=48, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/SekiraDao.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/SekiraDao.sol#305)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/SekiraDao.sol#295)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#296)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/SekiraDao.sol#309)\nReentrancy in SekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/SekiraDao.sol#270)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tState variables written after the call(s):\n\t- tradingOpen = true (repositories/verified-smart-contracts/SekiraDao.sol#275)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[93m\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (repositories/verified-smart-contracts/SekiraDao.sol#276)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nSekiraDao.allowance(address,address).owner (repositories/verified-smart-contracts/SekiraDao.sol#181) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/SekiraDao.sol#70-72) (function)\nSekiraDao._approve(address,address,uint256).owner (repositories/verified-smart-contracts/SekiraDao.sol#206) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/SekiraDao.sol#70-72) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/SekiraDao.sol#310)\nReentrancy in SekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/SekiraDao.sol#270)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#271)\n\tState variables written after the call(s):\n\t- _maxTxAmount = 12000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#274)\n\t- cooldownEnabled = true (repositories/verified-smart-contracts/SekiraDao.sol#273)\n\t- swapEnabled = true (repositories/verified-smart-contracts/SekiraDao.sol#272)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/SekiraDao.sol#209)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/SekiraDao.sol#235)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#299)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#251-257)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/SekiraDao.sol#210)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nSekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(cooldown[to] < block.timestamp) (repositories/verified-smart-contracts/SekiraDao.sol#224)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/SekiraDao.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/SekiraDao.sol#99) is not in mixedCase\nConstant SekiraDao._tTotal (repositories/verified-smart-contracts/SekiraDao.sol#119) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._name (repositories/verified-smart-contracts/SekiraDao.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._symbol (repositories/verified-smart-contracts/SekiraDao.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant SekiraDao._decimals (repositories/verified-smart-contracts/SekiraDao.sol#130) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in SekiraDao._transfer(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#213-244):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/SekiraDao.sol#238)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/SekiraDao.sol#305)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/SekiraDao.sol#295)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#296)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/SekiraDao.sol#309)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/SekiraDao.sol#310)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/SekiraDao.sol#299)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/SekiraDao.sol#243)\nReentrancy in SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/SekiraDao.sol#191)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#261)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/SekiraDao.sol#262)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/SekiraDao.sol#209)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/SekiraDao.sol#210)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/SekiraDao.sol#192)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable SekiraDao._feeAddrWallet1 (repositories/verified-smart-contracts/SekiraDao.sol#125) is too similar to SekiraDao._feeAddrWallet2 (repositories/verified-smart-contracts/SekiraDao.sol#126)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#329)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294)\nVariable SekiraDao._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#294) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nVariable SekiraDao._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#346) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nVariable SekiraDao._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#331) is too similar to SekiraDao._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/SekiraDao.sol#338)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nSekiraDao.constructor() (repositories/verified-smart-contracts/SekiraDao.sol#145-154) uses literals with too many digits:\n\t- Transfer(address(0x0000000000000000000000000000000000000000),_msgSender(),_tTotal) (repositories/verified-smart-contracts/SekiraDao.sol#153)\nSekiraDao.openTrading() (repositories/verified-smart-contracts/SekiraDao.sol#265-277) uses literals with too many digits:\n\t- _maxTxAmount = 12000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#274)\nSekiraDao.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/SekiraDao.sol#110-362) uses literals with too many digits:\n\t- _tTotal = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/SekiraDao.sol#119)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/SekiraDao.sol#61) is never used in SekiraDao (repositories/verified-smart-contracts/SekiraDao.sol#110-362)\nSekiraDao._tOwned (repositories/verified-smart-contracts/SekiraDao.sol#113) is never used in SekiraDao (repositories/verified-smart-contracts/SekiraDao.sol#110-362)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/SekiraDao.sol#61) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/SekiraDao.sol#79-82)\nname() should be declared external:\n\t- SekiraDao.name() (repositories/verified-smart-contracts/SekiraDao.sol#156-158)\nsymbol() should be declared external:\n\t- SekiraDao.symbol() (repositories/verified-smart-contracts/SekiraDao.sol#160-162)\ndecimals() should be declared external:\n\t- SekiraDao.decimals() (repositories/verified-smart-contracts/SekiraDao.sol#164-166)\ntotalSupply() should be declared external:\n\t- SekiraDao.totalSupply() (repositories/verified-smart-contracts/SekiraDao.sol#168-170)\ntransfer(address,uint256) should be declared external:\n\t- SekiraDao.transfer(address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#176-179)\nallowance(address,address) should be declared external:\n\t- SekiraDao.allowance(address,address) (repositories/verified-smart-contracts/SekiraDao.sol#181-183)\napprove(address,uint256) should be declared external:\n\t- SekiraDao.approve(address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#185-188)\ntransferFrom(address,address,uint256) should be declared external:\n\t- SekiraDao.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SekiraDao.sol#190-194)\nsetBots(address[]) should be declared external:\n\t- SekiraDao.setBots(address[]) (repositories/verified-smart-contracts/SekiraDao.sol#279-283)\ndelBot(address) should be declared external:\n\t- SekiraDao.delBot(address) (repositories/verified-smart-contracts/SekiraDao.sol#285-287)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/SekiraDao.sol analyzed (7 contracts with 75 detectors), 48 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Beanterra.sol --json ./slither/OLD_verified-smart-contracts/json/Beanterra.sol.json', returncode=88, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/Beanterra.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Beanterra.sol:\nWarning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> repositories/verified-smart-contracts/Beanterra.sol:1256:24:\n     |\n1256 |   function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view \n     |                        ^^^^^^^^^^^^^^^^\n\n\n\x1b[91m\nBeanterra._withdraw(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#1304-1307) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = _addr.call{value: _amt}() (repositories/verified-smart-contracts/Beanterra.sol#1305)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nReentrancy in Beanterra.mint(uint8,uint8,bytes) (repositories/verified-smart-contracts/Beanterra.sol#1174-1204):\n\tExternal calls:\n\t- _safeMint(msg.sender,nextId + i) (repositories/verified-smart-contracts/Beanterra.sol#1201)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/Beanterra.sol#820-830)\n\tState variables written after the call(s):\n\t- nextId += mint_num (repositories/verified-smart-contracts/Beanterra.sol#1203)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Beanterra.sol#813-834) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/Beanterra.sol#820-830)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nBeanterra.constructor(string,string,string,string,uint256,address,address,uint256)._name (repositories/verified-smart-contracts/Beanterra.sol#1148) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/Beanterra.sol#514) (state variable)\nBeanterra.constructor(string,string,string,string,uint256,address,address,uint256)._symbol (repositories/verified-smart-contracts/Beanterra.sol#1149) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/Beanterra.sol#516) (state variable)\nBeanterra.tokensOfOwner(address,uint256,uint256)._owner (repositories/verified-smart-contracts/Beanterra.sol#1216) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/Beanterra.sol#870) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nBeanterra.mint(uint8,uint8,bytes) (repositories/verified-smart-contracts/Beanterra.sol#1174-1204) should emit an event for: \n\t- currentSupply += mint_num (repositories/verified-smart-contracts/Beanterra.sol#1199) \n\t- nextId += mint_num (repositories/verified-smart-contracts/Beanterra.sol#1203) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nBeanterra.constructor(string,string,string,string,uint256,address,address,uint256)._signer (repositories/verified-smart-contracts/Beanterra.sol#1153) lacks a zero-check on :\n\t\t- signer = _signer (repositories/verified-smart-contracts/Beanterra.sol#1160)\nBeanterra.constructor(string,string,string,string,uint256,address,address,uint256)._royaltyAddr (repositories/verified-smart-contracts/Beanterra.sol#1154) lacks a zero-check on :\n\t\t- royaltyAddr = _royaltyAddr (repositories/verified-smart-contracts/Beanterra.sol#1161)\nBeanterra.setRoyalty(address,uint256)._royaltyAddr (repositories/verified-smart-contracts/Beanterra.sol#1268) lacks a zero-check on :\n\t\t- royaltyAddr = _royaltyAddr (repositories/verified-smart-contracts/Beanterra.sol#1269)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/Beanterra.sol#820)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Beanterra.sol#813-834) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/Beanterra.sol#821)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Beanterra.sol#822)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Beanterra.sol#813-834) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/Beanterra.sol#823)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Beanterra.sol#822)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Beanterra.sol#813-834) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/Beanterra.sol#827)\nVariable 'ECDSA.tryRecover(bytes32,bytes).r (repositories/verified-smart-contracts/Beanterra.sol#969)' in ECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/Beanterra.sol#964-993) potentially used before declaration: r = mload(uint256)(signature + 0x20) (repositories/verified-smart-contracts/Beanterra.sol#986)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/Beanterra.sol#224-233) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#229-231)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#378-397) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#389-392)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Beanterra.sol#813-834) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#826-828)\nECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/Beanterra.sol#964-993) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#974-978)\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#985-988)\nECDSA.tryRecover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/Beanterra.sol#1020-1032) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Beanterra.sol#1027-1030)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/Beanterra.sol#273-275) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#282-288) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/Beanterra.sol#300-306) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Beanterra.sol#313-323) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/Beanterra.sol#354-356) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#363-371) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/Beanterra.sol#330-332) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#339-347) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#250-254) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#378-397) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/Beanterra.sol#415-417) is never used and should be removed\nECDSA.recover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/Beanterra.sol#1038-1046) is never used and should be removed\nECDSA.recover(bytes32,uint8,bytes32,bytes32) (repositories/verified-smart-contracts/Beanterra.sol#1085-1094) is never used and should be removed\nECDSA.toEthSignedMessageHash(bytes32) (repositories/verified-smart-contracts/Beanterra.sol#1103-1107) is never used and should be removed\nECDSA.toTypedDataHash(bytes32,bytes32) (repositories/verified-smart-contracts/Beanterra.sol#1117-1119) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/Beanterra.sol#581-583) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/Beanterra.sol#759-767) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/Beanterra.sol#452-463) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/Beanterra.sol#467-477) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Beanterra.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#250-254):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/Beanterra.sol#252)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Beanterra.sol#313-323):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/Beanterra.sol#321)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#339-347):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/Beanterra.sol#345)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Beanterra.sol#363-371):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/Beanterra.sol#369)\nLow level call in Beanterra._withdraw(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#1304-1307):\n\t- (success) = _addr.call{value: _amt}() (repositories/verified-smart-contracts/Beanterra.sol#1305)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/Beanterra.sol#646) is not in mixedCase\nParameter Beanterra.mint(uint8,uint8,bytes).mint_num (repositories/verified-smart-contracts/Beanterra.sol#1174) is not in mixedCase\nParameter Beanterra.mint(uint8,uint8,bytes).wl_max (repositories/verified-smart-contracts/Beanterra.sol#1174) is not in mixedCase\nParameter Beanterra.checkSig(address,uint8,bytes)._addr (repositories/verified-smart-contracts/Beanterra.sol#1213) is not in mixedCase\nParameter Beanterra.tokensOfOwner(address,uint256,uint256)._owner (repositories/verified-smart-contracts/Beanterra.sol#1216) is not in mixedCase\nParameter Beanterra.royaltyInfo(uint256,uint256)._salePrice (repositories/verified-smart-contracts/Beanterra.sol#1256) is not in mixedCase\nParameter Beanterra.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/Beanterra.sol#1261) is not in mixedCase\nParameter Beanterra.setContractURI(string)._contractURI (repositories/verified-smart-contracts/Beanterra.sol#1264) is not in mixedCase\nParameter Beanterra.setRoyalty(address,uint256)._royaltyAddr (repositories/verified-smart-contracts/Beanterra.sol#1268) is not in mixedCase\nParameter Beanterra.setRoyalty(address,uint256)._royaltyBasis (repositories/verified-smart-contracts/Beanterra.sol#1268) is not in mixedCase\nParameter Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool)._newStage (repositories/verified-smart-contracts/Beanterra.sol#1276) is not in mixedCase\nParameter Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool)._price (repositories/verified-smart-contracts/Beanterra.sol#1276) is not in mixedCase\nParameter Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool)._supplyLimit (repositories/verified-smart-contracts/Beanterra.sol#1276) is not in mixedCase\nParameter Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool)._addrLimit (repositories/verified-smart-contracts/Beanterra.sol#1276) is not in mixedCase\nParameter Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool)._usePrevMintCount (repositories/verified-smart-contracts/Beanterra.sol#1276) is not in mixedCase\nParameter Beanterra.setNextId(uint256)._newNextId (repositories/verified-smart-contracts/Beanterra.sol#1283) is not in mixedCase\nParameter Beanterra.whitelistCreator(address,bool)._creator (repositories/verified-smart-contracts/Beanterra.sol#1287) is not in mixedCase\nParameter Beanterra.whitelistCreator(address,bool)._toAdd (repositories/verified-smart-contracts/Beanterra.sol#1287) is not in mixedCase\nParameter Beanterra.pause(bool)._state (repositories/verified-smart-contracts/Beanterra.sol#1290) is not in mixedCase\nParameter Beanterra.reserveMint(uint256,address)._mintAmount (repositories/verified-smart-contracts/Beanterra.sol#1293) is not in mixedCase\nParameter Beanterra.reserveMint(uint256,address)._to (repositories/verified-smart-contracts/Beanterra.sol#1293) is not in mixedCase\nParameter Beanterra.withdrawFund(address)._to (repositories/verified-smart-contracts/Beanterra.sol#1301) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/Beanterra.sol#559-561)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/Beanterra.sol#565-567)\ntokenURI(uint256) should be declared external:\n\t- Beanterra.tokenURI(uint256) (repositories/verified-smart-contracts/Beanterra.sol#1236-1251)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/Beanterra.sol#571-575)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#587-595)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/Beanterra.sol#606-610)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#620-628)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#632-638)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Beanterra.sol#898-900)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Beanterra.sol#905-908)\nmint(uint8,uint8,bytes) should be declared external:\n\t- Beanterra.mint(uint8,uint8,bytes) (repositories/verified-smart-contracts/Beanterra.sol#1174-1204)\nmintAt(address,uint256) should be declared external:\n\t- Beanterra.mintAt(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#1206-1212)\ncontractURI() should be declared external:\n\t- Beanterra.contractURI() (repositories/verified-smart-contracts/Beanterra.sol#1252-1254)\nsetContractURI(string) should be declared external:\n\t- Beanterra.setContractURI(string) (repositories/verified-smart-contracts/Beanterra.sol#1264-1267)\nsetRoyalty(address,uint256) should be declared external:\n\t- Beanterra.setRoyalty(address,uint256) (repositories/verified-smart-contracts/Beanterra.sol#1268-1271)\nnextStage() should be declared external:\n\t- Beanterra.nextStage() (repositories/verified-smart-contracts/Beanterra.sol#1272-1275)\nsetStageSettings(uint8,uint256,uint256,uint8,bool) should be declared external:\n\t- Beanterra.setStageSettings(uint8,uint256,uint256,uint8,bool) (repositories/verified-smart-contracts/Beanterra.sol#1276-1282)\nsetNextId(uint256) should be declared external:\n\t- Beanterra.setNextId(uint256) (repositories/verified-smart-contracts/Beanterra.sol#1283-1286)\nwhitelistCreator(address,bool) should be declared external:\n\t- Beanterra.whitelistCreator(address,bool) (repositories/verified-smart-contracts/Beanterra.sol#1287-1289)\npause(bool) should be declared external:\n\t- Beanterra.pause(bool) (repositories/verified-smart-contracts/Beanterra.sol#1290-1292)\nreserveMint(uint256,address) should be declared external:\n\t- Beanterra.reserveMint(uint256,address) (repositories/verified-smart-contracts/Beanterra.sol#1293-1299)\nwithdrawFund(address) should be declared external:\n\t- Beanterra.withdrawFund(address) (repositories/verified-smart-contracts/Beanterra.sol#1301-1303)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Beanterra.sol analyzed (12 contracts with 75 detectors), 88 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/WealthyApeSocialClub.sol --json ./slither/OLD_verified-smart-contracts/json/WealthyApeSocialClub.sol.json', returncode=61, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/WealthyApeSocialClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nWealthyApeSocialClub.withdraw(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1176-1180) sends eth to arbitrary user\n\tDangerous calls:\n\t- require(bool)(address(msg.sender).send(amount)) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1179)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#898-919) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#905-915)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nWealthyApeSocialClub.mint(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1119-1136) should emit an event for: \n\t- mintedQty_ += mintQty (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1135) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#905)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#898-919) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#906)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#907)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#898-919) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#908)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#907)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#898-919) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#912)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#47-57) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#53-55)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#216-236) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#228-231)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#898-919) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#911-913)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.4.22<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#2)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#24)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#239)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#262)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#402)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#425)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#450)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#475)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#540)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#942)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1010)\n\t- >=0.4.22<0.9.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1098)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#100-102) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#110-116) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#129-135) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#143-154) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#189-191) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#199-208) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#162-164) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#172-181) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#75-80) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#216-236) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#19-21) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#633-635) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#833-845) is never used and should be removed\nERC721._safeMint(address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#779-781) is never used and should be removed\nERC721._safeMint(address,uint256,bytes) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#787-797) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#511-522) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#527-537) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#24) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#239) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#262) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#402) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#425) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#450) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#475) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#540) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#942) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1010) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.4.22<0.9.0 (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1098) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#75-80):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#78)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#143-154):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#152)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#172-181):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#179)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#199-208):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#206)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#710) is not in mixedCase\nParameter WealthyApeSocialClub.setBaseURI(string).URI (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1150) is not in mixedCase\nParameter WealthyApeSocialClub.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1158) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nWealthyApeSocialClub.price_ (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1106) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#590-593)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#607-609)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#614-616)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#621-626)\n\t- WealthyApeSocialClub.tokenURI(uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1158-1162)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#640-650)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#664-669)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#681-690)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#695-701)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#990-992)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#998-1001)\nsetBaseURI(string) should be declared external:\n\t- WealthyApeSocialClub.setBaseURI(string) (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1150-1152)\nunpause() should be declared external:\n\t- WealthyApeSocialClub.unpause() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1168-1170)\ntotalSupply() should be declared external:\n\t- WealthyApeSocialClub.totalSupply() (repositories/verified-smart-contracts/WealthyApeSocialClub.sol#1172-1174)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/WealthyApeSocialClub.sol analyzed (12 contracts with 75 detectors), 61 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/COOLMEKACATS.sol --json ./slither/OLD_verified-smart-contracts/json/COOLMEKACATS.sol.json', returncode=71, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/COOLMEKACATS.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/COOLMEKACATS.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/COOLMEKACATS.sol\n\n\n\x1b[91m\nCOOLMEKACATS.withdraw() (repositories/verified-smart-contracts/COOLMEKACATS.sol#1430-1433) sends eth to arbitrary user\n\tDangerous calls:\n\t- address(msg.sender).transfer(balance) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1432)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nCOOLMEKACATS.reserveMint(uint256).i (repositories/verified-smart-contracts/COOLMEKACATS.sol#1383) is a local variable never initialized\nCOOLMEKACATS.mint(uint256).i (repositories/verified-smart-contracts/COOLMEKACATS.sol#1360) is a local variable never initialized\nCOOLMEKACATS.burnNFTs(uint256[]).i (repositories/verified-smart-contracts/COOLMEKACATS.sol#1396) is a local variable never initialized\nCOOLMEKACATS.mint(uint256).i_scope_0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1370) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1072-1093) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1079-1089)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCOOLMEKACATS.claimed(address).owner (repositories/verified-smart-contracts/COOLMEKACATS.sol#1409) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/COOLMEKACATS.sol#133-135) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/COOLMEKACATS.sol#1079)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1072-1093) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/COOLMEKACATS.sol#1080)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/COOLMEKACATS.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1072-1093) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1082)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/COOLMEKACATS.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1072-1093) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1086)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/COOLMEKACATS.sol#204-214) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/COOLMEKACATS.sol#210-212)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#373-393) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/COOLMEKACATS.sol#385-388)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1072-1093) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/COOLMEKACATS.sol#1085-1087)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.7\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#76)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#103)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#181)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#401)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#431)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#459)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#490)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#635)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#666)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#695)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1121)\n\t- ^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1149)\n\t- ^0.8.7 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1312)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#257-259) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#267-273) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#286-292) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#300-311) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#346-348) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#356-365) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/COOLMEKACATS.sol#319-321) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#329-338) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#232-237) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#373-393) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/COOLMEKACATS.sol#93-95) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/COOLMEKACATS.sol#795-797) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#42-53) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#58-68) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#76) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#103) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#181) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#401) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#431) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#459) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#490) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#635) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#666) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#695) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1121) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1149) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.7 (repositories/verified-smart-contracts/COOLMEKACATS.sol#1312) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#232-237):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/COOLMEKACATS.sol#235)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#300-311):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/COOLMEKACATS.sol#309)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#329-338):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/COOLMEKACATS.sol#336)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/COOLMEKACATS.sol#356-365):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/COOLMEKACATS.sol#363)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/COOLMEKACATS.sol#869) is not in mixedCase\nParameter COOLMEKACATS.burn(uint256)._tokenId (repositories/verified-smart-contracts/COOLMEKACATS.sol#1389) is not in mixedCase\nParameter COOLMEKACATS.burnNFTs(uint256[])._tokenIds (repositories/verified-smart-contracts/COOLMEKACATS.sol#1395) is not in mixedCase\nVariable COOLMEKACATS._baseTokenURI (repositories/verified-smart-contracts/COOLMEKACATS.sol#1323) is not in mixedCase\nVariable COOLMEKACATS.PRICE (repositories/verified-smart-contracts/COOLMEKACATS.sol#1326) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCOOLMEKACATS.PRICE (repositories/verified-smart-contracts/COOLMEKACATS.sol#1326) should be constant\nCOOLMEKACATS.maxMint (repositories/verified-smart-contracts/COOLMEKACATS.sol#1325) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/COOLMEKACATS.sol#152-154)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/COOLMEKACATS.sol#160-163)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/COOLMEKACATS.sol#769-771)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/COOLMEKACATS.sol#776-778)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#783-788)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#802-812)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/COOLMEKACATS.sol#826-828)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#840-849)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#854-860)\nburn(uint256) should be declared external:\n\t- COOLMEKACATS.burn(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1389-1393)\n\t- ERC721Burnable.burn(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1137-1141)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1181-1184)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1196-1199)\nreserveMint(uint256) should be declared external:\n\t- COOLMEKACATS.reserveMint(uint256) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1379-1387)\nburnNFTs(uint256[]) should be declared external:\n\t- COOLMEKACATS.burnNFTs(uint256[]) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1395-1399)\nisActive() should be declared external:\n\t- COOLMEKACATS.isActive() (repositories/verified-smart-contracts/COOLMEKACATS.sol#1406-1408)\nsaleActive(bool) should be declared external:\n\t- COOLMEKACATS.saleActive(bool) (repositories/verified-smart-contracts/COOLMEKACATS.sol#1426-1428)\nwithdraw() should be declared external:\n\t- COOLMEKACATS.withdraw() (repositories/verified-smart-contracts/COOLMEKACATS.sol#1430-1433)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/COOLMEKACATS.sol analyzed (14 contracts with 75 detectors), 71 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/YextHolidayAI2021.sol --json ./slither/OLD_verified-smart-contracts/json/YextHolidayAI2021.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/YextHolidayAI2021.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/YextHolidayAI2021.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/YextHolidayAI2021.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/YextHolidayAI2021.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/YextHolidayAI2021.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/YextHolidayAI2021.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/AbandonedKidKongz.sol --json ./slither/OLD_verified-smart-contracts/json/AbandonedKidKongz.sol.json', returncode=62, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/AbandonedKidKongz.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[93m\nReentrancy in AbandonedKidKongz.mint(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1207-1218):\n\tExternal calls:\n\t- IERC721(kk).transferFrom(msg.sender,multisig,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1216)\n\t- _safeMint(_to,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1217)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#889-899)\n\tState variables written after the call(s):\n\t- _safeMint(_to,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1217)\n\t\t- _allTokens.push(tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1048)\n\t\t- _allTokens[tokenIndex] = lastTokenId (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1096)\n\t\t- _allTokens.pop() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1101)\n\t- _safeMint(_to,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1217)\n\t\t- _balances[to] += 1 (repositories/verified-smart-contracts/AbandonedKidKongz.sol#801)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nAbandonedKidKongz.walletOfOwner(address).i (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1227) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#882-903) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#889-899)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nAbandonedKidKongz.constructor(string,string,string)._name (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1193) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/AbandonedKidKongz.sol#536) (state variable)\nAbandonedKidKongz.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1194) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/AbandonedKidKongz.sol#539) (state variable)\nAbandonedKidKongz.walletOfOwner(address)._owner (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1220) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1118) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/AbandonedKidKongz.sol#889)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#882-903) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/AbandonedKidKongz.sol#890)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/AbandonedKidKongz.sol#891)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#882-903) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/AbandonedKidKongz.sol#892)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/AbandonedKidKongz.sol#891)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#882-903) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#896)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in AbandonedKidKongz.mint(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1207-1218):\n\tExternal calls:\n\t- IERC721(kk).transferFrom(msg.sender,multisig,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1216)\n\t- _safeMint(_to,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1217)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#889-899)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#804)\n\t\t- _safeMint(_to,_tokenId) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1217)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#228-238) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/AbandonedKidKongz.sol#234-236)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#397-417) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/AbandonedKidKongz.sol#409-412)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#882-903) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/AbandonedKidKongz.sol#895-897)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#281-283) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#291-297) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#310-316) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#324-335) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#370-372) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#380-389) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#343-345) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#353-362) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#256-261) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#397-417) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#435-437) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#617-619) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#817-829) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#474-485) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#490-500) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/AbandonedKidKongz.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#256-261):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#259)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#324-335):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#333)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#353-362):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#360)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#380-389):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#387)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/AbandonedKidKongz.sol#694) is not in mixedCase\nParameter AbandonedKidKongz.mint(address,uint256)._to (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1207) is not in mixedCase\nParameter AbandonedKidKongz.mint(address,uint256)._tokenId (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1207) is not in mixedCase\nParameter AbandonedKidKongz.walletOfOwner(address)._owner (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1220) is not in mixedCase\nParameter AbandonedKidKongz.setMaxHoldings(uint256)._setMaxHoldings (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1253) is not in mixedCase\nParameter AbandonedKidKongz.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1257) is not in mixedCase\nParameter AbandonedKidKongz.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1261) is not in mixedCase\nParameter AbandonedKidKongz.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1265) is not in mixedCase\nParameter AbandonedKidKongz.pause(bool)._state (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1269) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nAbandonedKidKongz.kk (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1190) should be constant\nAbandonedKidKongz.maxSupply (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1184) should be constant\nAbandonedKidKongz.multisig (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1189) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#591-593)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#598-600)\ntokenURI(uint256) should be declared external:\n\t- AbandonedKidKongz.tokenURI(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1233-1249)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#605-610)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#624-634)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#648-653)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#665-674)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#679-685)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#992-995)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1151-1153)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1159-1162)\nmint(address,uint256) should be declared external:\n\t- AbandonedKidKongz.mint(address,uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1207-1218)\nwalletOfOwner(address) should be declared external:\n\t- AbandonedKidKongz.walletOfOwner(address) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1220-1231)\nsetMaxHoldings(uint256) should be declared external:\n\t- AbandonedKidKongz.setMaxHoldings(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1253-1255)\nsetmaxMintAmount(uint256) should be declared external:\n\t- AbandonedKidKongz.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1257-1259)\nsetBaseExtension(string) should be declared external:\n\t- AbandonedKidKongz.setBaseExtension(string) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1265-1267)\npause(bool) should be declared external:\n\t- AbandonedKidKongz.pause(bool) (repositories/verified-smart-contracts/AbandonedKidKongz.sol#1269-1271)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/AbandonedKidKongz.sol analyzed (13 contracts with 75 detectors), 62 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/L1Escrow.sol --json ./slither/OLD_verified-smart-contracts/json/L1Escrow.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/L1Escrow.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/L1Escrow.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/L1Escrow.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/L1Escrow.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/L1Escrow.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/L1Escrow.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DoggyDao.sol --json ./slither/OLD_verified-smart-contracts/json/DoggyDao.sol.json', returncode=67, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DoggyDao.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DoggyDao.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/DoggyDao.sol\n\n\n\x1b[91m\nDoggyDao.withdraw(address) (repositories/verified-smart-contracts/DoggyDao.sol#1343-1346) sends eth to arbitrary user\n\tDangerous calls:\n\t- address(to).transfer(balance) (repositories/verified-smart-contracts/DoggyDao.sol#1345)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#1072-1093) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoggyDao.sol#1079-1089)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nDoggyDao.withdraw(address).to (repositories/verified-smart-contracts/DoggyDao.sol#1343) lacks a zero-check on :\n\t\t- address(to).transfer(balance) (repositories/verified-smart-contracts/DoggyDao.sol#1345)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/DoggyDao.sol#1079)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#1072-1093) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/DoggyDao.sol#1080)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoggyDao.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#1072-1093) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/DoggyDao.sol#1082)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoggyDao.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#1072-1093) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/DoggyDao.sol#1086)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in DoggyDao.freeMint(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1317-1324):\n\tExternal calls:\n\t- _mint(numOfDoggy,msg.sender) (repositories/verified-smart-contracts/DoggyDao.sol#1322)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoggyDao.sol#1079-1089)\n\tEvent emitted after the call(s):\n\t- TokenMinted(totalSupply()) (repositories/verified-smart-contracts/DoggyDao.sol#1323)\nReentrancy in DoggyDao.mint(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1326-1333):\n\tExternal calls:\n\t- _mint(numOfDoggy,msg.sender) (repositories/verified-smart-contracts/DoggyDao.sol#1331)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoggyDao.sol#1079-1089)\n\tEvent emitted after the call(s):\n\t- TokenMinted(totalSupply()) (repositories/verified-smart-contracts/DoggyDao.sol#1332)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/DoggyDao.sol#204-214) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoggyDao.sol#210-212)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#373-393) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoggyDao.sol#385-388)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#1072-1093) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoggyDao.sol#1085-1087)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.2\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#76)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#103)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#181)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#401)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#431)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#459)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#490)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#635)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#666)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#695)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#1121)\n\t- ^0.8.2 (repositories/verified-smart-contracts/DoggyDao.sol#1284)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#257-259) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#267-273) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#286-292) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoggyDao.sol#300-311) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#346-348) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#356-365) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/DoggyDao.sol#319-321) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#329-338) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#232-237) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#373-393) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/DoggyDao.sol#93-95) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/DoggyDao.sol#795-797) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#992-1004) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#42-53) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#58-68) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#76) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#103) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#181) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#401) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#431) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#459) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#490) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#635) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#666) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#695) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoggyDao.sol#1121) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.2 (repositories/verified-smart-contracts/DoggyDao.sol#1284) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#232-237):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/DoggyDao.sol#235)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoggyDao.sol#300-311):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/DoggyDao.sol#309)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#329-338):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/DoggyDao.sol#336)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoggyDao.sol#356-365):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/DoggyDao.sol#363)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/DoggyDao.sol#869) is not in mixedCase\nParameter DoggyDao.setMintPrice(uint256)._mintPrice (repositories/verified-smart-contracts/DoggyDao.sol#1309) is not in mixedCase\nVariable DoggyDao._isSaleActive (repositories/verified-smart-contracts/DoggyDao.sol#1291) is not in mixedCase\nVariable DoggyDao._isFreeMint (repositories/verified-smart-contracts/DoggyDao.sol#1292) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nDoggyDao.maxMint (repositories/verified-smart-contracts/DoggyDao.sol#1295) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DoggyDao.sol#152-154)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/DoggyDao.sol#160-163)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/DoggyDao.sol#769-771)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/DoggyDao.sol#776-778)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#783-788)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#802-812)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/DoggyDao.sol#826-828)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#840-849)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#854-860)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1153-1156)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1168-1171)\nfilpSaleActive() should be declared external:\n\t- DoggyDao.filpSaleActive() (repositories/verified-smart-contracts/DoggyDao.sol#1301-1303)\nfilpFreeMint() should be declared external:\n\t- DoggyDao.filpFreeMint() (repositories/verified-smart-contracts/DoggyDao.sol#1305-1307)\nsetMintPrice(uint256) should be declared external:\n\t- DoggyDao.setMintPrice(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1309-1311)\nfreeMint(uint256) should be declared external:\n\t- DoggyDao.freeMint(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1317-1324)\nmint(uint256) should be declared external:\n\t- DoggyDao.mint(uint256) (repositories/verified-smart-contracts/DoggyDao.sol#1326-1333)\nwithdraw(address) should be declared external:\n\t- DoggyDao.withdraw(address) (repositories/verified-smart-contracts/DoggyDao.sol#1343-1346)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DoggyDao.sol analyzed (13 contracts with 75 detectors), 67 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BoredPKC.sol --json ./slither/OLD_verified-smart-contracts/json/BoredPKC.sol.json', returncode=77, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/BoredPKC.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nBoredPKC.withdraw() (repositories/verified-smart-contracts/BoredPKC.sol#1412-1414) sends eth to arbitrary user\n\tDangerous calls:\n\t- require(bool)(address(msg.sender).send(address(this).balance)) (repositories/verified-smart-contracts/BoredPKC.sol#1413)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nBoredPKC.walletOfOwner(address).i (repositories/verified-smart-contracts/BoredPKC.sol#1349) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#1073-1094) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BoredPKC.sol#1080-1090)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nBoredPKC.constructor(string,string,string)._name (repositories/verified-smart-contracts/BoredPKC.sol#1307) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/BoredPKC.sol#715) (state variable)\nBoredPKC.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/BoredPKC.sol#1308) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/BoredPKC.sol#718) (state variable)\nBoredPKC.walletOfOwner(address)._owner (repositories/verified-smart-contracts/BoredPKC.sol#1342) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/BoredPKC.sol#120) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/BoredPKC.sol#1080)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#1073-1094) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/BoredPKC.sol#1081)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BoredPKC.sol#1082)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#1073-1094) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/BoredPKC.sol#1083)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BoredPKC.sol#1082)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#1073-1094) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/BoredPKC.sol#1087)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/BoredPKC.sol#205-215) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BoredPKC.sol#211-213)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#374-394) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BoredPKC.sol#386-389)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#1073-1094) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BoredPKC.sol#1086-1088)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nBoredPKC.mint(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#1321-1340) compares to a boolean constant:\n\t-onlyWhiteListed == true (repositories/verified-smart-contracts/BoredPKC.sol#1329)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#258-260) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#268-274) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#287-293) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BoredPKC.sol#301-312) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#347-349) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#357-366) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BoredPKC.sol#320-322) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#330-339) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#233-238) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#374-394) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BoredPKC.sol#94-96) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/BoredPKC.sol#796-798) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#993-1005) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#43-54) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#59-69) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#7) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#77) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#104) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#182) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#402) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#432) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#460) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#491) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#636) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#667) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#696) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#1122) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BoredPKC.sol#1287) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#233-238):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BoredPKC.sol#236)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BoredPKC.sol#301-312):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BoredPKC.sol#310)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#330-339):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BoredPKC.sol#337)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BoredPKC.sol#357-366):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BoredPKC.sol#364)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BoredPKC.sol#870) is not in mixedCase\nParameter BoredPKC.mint(uint256)._mintAmount (repositories/verified-smart-contracts/BoredPKC.sol#1321) is not in mixedCase\nParameter BoredPKC.walletOfOwner(address)._owner (repositories/verified-smart-contracts/BoredPKC.sol#1342) is not in mixedCase\nParameter BoredPKC.setCost(uint256)._newCost (repositories/verified-smart-contracts/BoredPKC.sol#1374) is not in mixedCase\nParameter BoredPKC.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/BoredPKC.sol#1378) is not in mixedCase\nParameter BoredPKC.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/BoredPKC.sol#1382) is not in mixedCase\nParameter BoredPKC.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/BoredPKC.sol#1386) is not in mixedCase\nParameter BoredPKC.pause(bool)._state (repositories/verified-smart-contracts/BoredPKC.sol#1390) is not in mixedCase\nParameter BoredPKC.whitelistUsers(address[])._users (repositories/verified-smart-contracts/BoredPKC.sol#1394) is not in mixedCase\nParameter BoredPKC.isWhiteListed(address)._user (repositories/verified-smart-contracts/BoredPKC.sol#1399) is not in mixedCase\nParameter BoredPKC.presale(bool)._state (repositories/verified-smart-contracts/BoredPKC.sol#1408) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nBoredPKC.maxPerAddress (repositories/verified-smart-contracts/BoredPKC.sol#1299) should be constant\nBoredPKC.maxSupply (repositories/verified-smart-contracts/BoredPKC.sol#1297) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/BoredPKC.sol#153-155)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BoredPKC.sol#161-164)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BoredPKC.sol#770-772)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BoredPKC.sol#777-779)\ntokenURI(uint256) should be declared external:\n\t- BoredPKC.tokenURI(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#1355-1371)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#784-789)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#803-813)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BoredPKC.sol#827-829)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#841-850)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BoredPKC.sol#855-861)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#1169-1172)\nwalletOfOwner(address) should be declared external:\n\t- BoredPKC.walletOfOwner(address) (repositories/verified-smart-contracts/BoredPKC.sol#1342-1353)\nsetCost(uint256) should be declared external:\n\t- BoredPKC.setCost(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#1374-1376)\nsetmaxMintAmount(uint256) should be declared external:\n\t- BoredPKC.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/BoredPKC.sol#1378-1380)\nsetBaseExtension(string) should be declared external:\n\t- BoredPKC.setBaseExtension(string) (repositories/verified-smart-contracts/BoredPKC.sol#1386-1388)\npause(bool) should be declared external:\n\t- BoredPKC.pause(bool) (repositories/verified-smart-contracts/BoredPKC.sol#1390-1392)\nwhitelistUsers(address[]) should be declared external:\n\t- BoredPKC.whitelistUsers(address[]) (repositories/verified-smart-contracts/BoredPKC.sol#1394-1397)\npresale(bool) should be declared external:\n\t- BoredPKC.presale(bool) (repositories/verified-smart-contracts/BoredPKC.sol#1408-1410)\nwithdraw() should be declared external:\n\t- BoredPKC.withdraw() (repositories/verified-smart-contracts/BoredPKC.sol#1412-1414)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BoredPKC.sol analyzed (13 contracts with 75 detectors), 77 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/HUSKYTAMA.sol --json ./slither/OLD_verified-smart-contracts/json/HUSKYTAMA.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/HUSKYTAMA.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/HUSKYTAMA.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/HUSKYTAMA.sol:1:1:\n  |\n1 | {"HUSKYTAMA.sol":{"content":"/** \\r\\ ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/HUSKYTAMA.sol:1:1:\n  |\n1 | {"HUSKYTAMA.sol":{"content":"/** \\r\\ ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/HUSKYTAMA.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/HUSKYTAMA.sol:1:1:\n  |\n1 | {"HUSKYTAMA.sol":{"content":"/** \\r\\ ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DoodleDuckies.sol --json ./slither/OLD_verified-smart-contracts/json/DoodleDuckies.sol.json', returncode=80, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/DoodleDuckies.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nDoodleDuckies.withdraw() (repositories/verified-smart-contracts/DoodleDuckies.sol#1259-1267) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/DoodleDuckies.sol#1264)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#1089-1110) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoodleDuckies.sol#1096-1106)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nDoodleDuckies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/DoodleDuckies.sol#1184) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/DoodleDuckies.sol#167) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/DoodleDuckies.sol#1096)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#1089-1110) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/DoodleDuckies.sol#1097)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoodleDuckies.sol#1098)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#1089-1110) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/DoodleDuckies.sol#1099)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoodleDuckies.sol#1098)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#1089-1110) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/DoodleDuckies.sol#1103)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/DoodleDuckies.sol#252-262) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleDuckies.sol#258-260)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#421-441) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleDuckies.sol#433-436)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#1089-1110) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleDuckies.sol#1102-1104)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDoodleDuckies.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1209-1229) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/DoodleDuckies.sol#1221)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#8)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#54)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#124)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#151)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#229)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#449)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#479)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#507)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#538)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#683)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#712)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#1137)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#305-307) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#315-321) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#334-340) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#348-359) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#394-396) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#404-413) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/DoodleDuckies.sol#367-369) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#377-386) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#280-285) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#421-441) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/DoodleDuckies.sol#141-143) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/DoodleDuckies.sol#36-42) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/DoodleDuckies.sol#44-46) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/DoodleDuckies.sol#812-814) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1009-1021) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#90-101) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#106-116) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#8) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#54) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#124) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#151) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#229) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#449) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#479) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#507) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#538) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#683) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#712) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/DoodleDuckies.sol#1137) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#280-285):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/DoodleDuckies.sol#283)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#348-359):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/DoodleDuckies.sol#357)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#377-386):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/DoodleDuckies.sol#384)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleDuckies.sol#404-413):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/DoodleDuckies.sol#411)\nLow level call in DoodleDuckies.withdraw() (repositories/verified-smart-contracts/DoodleDuckies.sol#1259-1267):\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/DoodleDuckies.sol#1264)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/DoodleDuckies.sol#886) is not in mixedCase\nParameter DoodleDuckies.mint(uint256)._mintAmount (repositories/verified-smart-contracts/DoodleDuckies.sol#1173) is not in mixedCase\nParameter DoodleDuckies.mintForAddress(uint256,address)._mintAmount (repositories/verified-smart-contracts/DoodleDuckies.sol#1180) is not in mixedCase\nParameter DoodleDuckies.mintForAddress(uint256,address)._receiver (repositories/verified-smart-contracts/DoodleDuckies.sol#1180) is not in mixedCase\nParameter DoodleDuckies.walletOfOwner(address)._owner (repositories/verified-smart-contracts/DoodleDuckies.sol#1184) is not in mixedCase\nParameter DoodleDuckies.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/DoodleDuckies.sol#1209) is not in mixedCase\nParameter DoodleDuckies.setRevealed(bool)._state (repositories/verified-smart-contracts/DoodleDuckies.sol#1231) is not in mixedCase\nParameter DoodleDuckies.setCost(uint256)._cost (repositories/verified-smart-contracts/DoodleDuckies.sol#1235) is not in mixedCase\nParameter DoodleDuckies.setMaxMintAmountPerTx(uint256)._maxMintAmountPerTx (repositories/verified-smart-contracts/DoodleDuckies.sol#1239) is not in mixedCase\nParameter DoodleDuckies.setHiddenMetadataUri(string)._hiddenMetadataUri (repositories/verified-smart-contracts/DoodleDuckies.sol#1243) is not in mixedCase\nParameter DoodleDuckies.setUriPrefix(string)._uriPrefix (repositories/verified-smart-contracts/DoodleDuckies.sol#1247) is not in mixedCase\nParameter DoodleDuckies.setUriSuffix(string)._uriSuffix (repositories/verified-smart-contracts/DoodleDuckies.sol#1251) is not in mixedCase\nParameter DoodleDuckies.setPaused(bool)._state (repositories/verified-smart-contracts/DoodleDuckies.sol#1255) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nDoodleDuckies.maxSupply (repositories/verified-smart-contracts/DoodleDuckies.sol#1153) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DoodleDuckies.sol#200-202)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/DoodleDuckies.sol#208-211)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/DoodleDuckies.sol#786-788)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/DoodleDuckies.sol#793-795)\ntokenURI(uint256) should be declared external:\n\t- DoodleDuckies.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1209-1229)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#800-805)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#819-829)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/DoodleDuckies.sol#843-845)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#857-866)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#871-877)\ntotalSupply() should be declared external:\n\t- DoodleDuckies.totalSupply() (repositories/verified-smart-contracts/DoodleDuckies.sol#1169-1171)\nmint(uint256) should be declared external:\n\t- DoodleDuckies.mint(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1173-1178)\nmintForAddress(uint256,address) should be declared external:\n\t- DoodleDuckies.mintForAddress(uint256,address) (repositories/verified-smart-contracts/DoodleDuckies.sol#1180-1182)\nwalletOfOwner(address) should be declared external:\n\t- DoodleDuckies.walletOfOwner(address) (repositories/verified-smart-contracts/DoodleDuckies.sol#1184-1207)\nsetRevealed(bool) should be declared external:\n\t- DoodleDuckies.setRevealed(bool) (repositories/verified-smart-contracts/DoodleDuckies.sol#1231-1233)\nsetCost(uint256) should be declared external:\n\t- DoodleDuckies.setCost(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1235-1237)\nsetMaxMintAmountPerTx(uint256) should be declared external:\n\t- DoodleDuckies.setMaxMintAmountPerTx(uint256) (repositories/verified-smart-contracts/DoodleDuckies.sol#1239-1241)\nsetUriPrefix(string) should be declared external:\n\t- DoodleDuckies.setUriPrefix(string) (repositories/verified-smart-contracts/DoodleDuckies.sol#1247-1249)\nsetUriSuffix(string) should be declared external:\n\t- DoodleDuckies.setUriSuffix(string) (repositories/verified-smart-contracts/DoodleDuckies.sol#1251-1253)\nsetPaused(bool) should be declared external:\n\t- DoodleDuckies.setPaused(bool) (repositories/verified-smart-contracts/DoodleDuckies.sol#1255-1257)\nwithdraw() should be declared external:\n\t- DoodleDuckies.withdraw() (repositories/verified-smart-contracts/DoodleDuckies.sol#1259-1267)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DoodleDuckies.sol analyzed (12 contracts with 75 detectors), 80 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MessageOnABlockchain.sol --json ./slither/OLD_verified-smart-contracts/json/MessageOnABlockchain.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MessageOnABlockchain.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MessageOnABlockchain.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/MessageOnABlockchain.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/MessageOnABlockchain.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/MessageOnABlockchain.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/MessageOnABlockchain.sol:1:1:\n  |\n1 | {"Address.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/RiperAuction.sol --json ./slither/OLD_verified-smart-contracts/json/RiperAuction.sol.json', returncode=21, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/RiperAuction.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\n\x1b[91m\nReentrancy in RiperAuction.endAuction(uint256) (repositories/verified-smart-contracts/RiperAuction.sol#238-248):\n\tExternal calls:\n\t- RiperNFTContract.transferFrom(address(this),msg.sender,tokenId) (repositories/verified-smart-contracts/RiperAuction.sol#242)\n\tExternal calls sending eth:\n\t- address(msg.sender).transfer(auctions[msg.sender].info[tokenId]) (repositories/verified-smart-contracts/RiperAuction.sol#245)\n\tState variables written after the call(s):\n\t- endedAuctions[msg.sender].info[tokenId] = 1 (repositories/verified-smart-contracts/RiperAuction.sol#247)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[92m\nOwnable.transferOwnership(address) (repositories/verified-smart-contracts/RiperAuction.sol#66-69) should emit an event for: \n\t- owner = newOwner (repositories/verified-smart-contracts/RiperAuction.sol#68) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control\x1b[0m\n\x1b[92m\nRiperAuction.setAuctionPeriod(uint256,uint256) (repositories/verified-smart-contracts/RiperAuction.sol#185-188) should emit an event for: \n\t- startTimeAuction = _startTimeAuction (repositories/verified-smart-contracts/RiperAuction.sol#186) \n\t- endTimeAuction = _endTimeAuction (repositories/verified-smart-contracts/RiperAuction.sol#187) \nRiperAuction.setAuctionMinAmount(uint256) (repositories/verified-smart-contracts/RiperAuction.sol#190-192) should emit an event for: \n\t- minAuctionAmount = _minAuctionAmount (repositories/verified-smart-contracts/RiperAuction.sol#191) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nRiperAuction.withdrawAll(address) (repositories/verified-smart-contracts/RiperAuction.sol#216-222) has external calls inside a loop: tokenId = RiperNFTContract.tokenOfOwnerByIndex(address(this),i) (repositories/verified-smart-contracts/RiperAuction.sol#219)\nRiperAuction.withdrawAll(address) (repositories/verified-smart-contracts/RiperAuction.sol#216-222) has external calls inside a loop: RiperNFTContract.transferFrom(address(this),_to,tokenId) (repositories/verified-smart-contracts/RiperAuction.sol#220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop\x1b[0m\n\x1b[92m\nRiperAuction.endAuction(uint256) (repositories/verified-smart-contracts/RiperAuction.sol#238-248) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp >= endTimeAuction,Auction should be ended.) (repositories/verified-smart-contracts/RiperAuction.sol#239)\nRiperAuction.bidAuction(uint256) (repositories/verified-smart-contracts/RiperAuction.sol#250-258) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp >= startTimeAuction,Auction should be started.) (repositories/verified-smart-contracts/RiperAuction.sol#252)\n\t- require(bool,string)(block.timestamp <= endTimeAuction,Auction should be started.) (repositories/verified-smart-contracts/RiperAuction.sol#253)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/RiperAuction.sol#31-34) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/RiperAuction.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nParameter RiperAuction.getWinner(uint256)._tokenId (repositories/verified-smart-contracts/RiperAuction.sol#177) is not in mixedCase\nParameter RiperAuction.setAuctionPeriod(uint256,uint256)._startTimeAuction (repositories/verified-smart-contracts/RiperAuction.sol#185) is not in mixedCase\nParameter RiperAuction.setAuctionPeriod(uint256,uint256)._endTimeAuction (repositories/verified-smart-contracts/RiperAuction.sol#185) is not in mixedCase\nParameter RiperAuction.setAuctionMinAmount(uint256)._minAuctionAmount (repositories/verified-smart-contracts/RiperAuction.sol#190) is not in mixedCase\nParameter RiperAuction.withdraw(uint256,address)._to (repositories/verified-smart-contracts/RiperAuction.sol#202) is not in mixedCase\nParameter RiperAuction.withdrawAll(address)._to (repositories/verified-smart-contracts/RiperAuction.sol#216) is not in mixedCase\nVariable RiperAuction.RiperNFTContract (repositories/verified-smart-contracts/RiperAuction.sol#158) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/RiperAuction.sol#32)" inContext (repositories/verified-smart-contracts/RiperAuction.sol#26-35)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in RiperAuction.endAuction(uint256) (repositories/verified-smart-contracts/RiperAuction.sol#238-248):\n\tExternal calls:\n\t- address(msg.sender).transfer(auctions[msg.sender].info[tokenId]) (repositories/verified-smart-contracts/RiperAuction.sol#245)\n\tState variables written after the call(s):\n\t- endedAuctions[msg.sender].info[tokenId] = 1 (repositories/verified-smart-contracts/RiperAuction.sol#247)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/RiperAuction.sol#66-69)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/RiperAuction.sol analyzed (5 contracts with 75 detectors), 21 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MultiSigV1.sol --json ./slither/OLD_verified-smart-contracts/json/MultiSigV1.sol.json', returncode=87, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MultiSigV1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MultiSigV1.sol:\nWarning: Contract code size is 29332 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/MultiSigV1.sol:1465:1:\n     |\n1465 | contract UpgradeableMultiSignWalletFactory {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nMultiSigWalletWithPermit.executeTransactionInner(address,uint256,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1374-1399) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success,returndata) = destination.call{value: value}(data) (repositories/verified-smart-contracts/MultiSigV1.sol#1382-1384)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC1967Upgrade._upgradeToAndCall(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#476-485) ignores return value by Address.functionDelegateCall(newImplementation,data) (repositories/verified-smart-contracts/MultiSigV1.sol#483)\nERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#492-520) ignores return value by Address.functionDelegateCall(newImplementation,data) (repositories/verified-smart-contracts/MultiSigV1.sol#502)\nERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#492-520) ignores return value by Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation)) (repositories/verified-smart-contracts/MultiSigV1.sol#510-513)\nERC1967Upgrade._upgradeBeaconToAndCall(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#595-605) ignores return value by Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data) (repositories/verified-smart-contracts/MultiSigV1.sol#603)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nModifier TransparentUpgradeableProxy.ifAdmin() (repositories/verified-smart-contracts/MultiSigV1.sol#687-693) does not always execute _; or revertReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier\x1b[0m\n\x1b[92m\nReentrancy in MultiSigWalletWithPermit.executeTransactionInner(address,uint256,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1374-1399):\n\tExternal calls:\n\t- (success,returndata) = destination.call{value: value}(data) (repositories/verified-smart-contracts/MultiSigV1.sol#1382-1384)\n\tState variables written after the call(s):\n\t- transactions[transactionId].executed = true (repositories/verified-smart-contracts/MultiSigV1.sol#1387)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in ERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#492-520):\n\tExternal calls:\n\t- Address.functionDelegateCall(newImplementation,data) (repositories/verified-smart-contracts/MultiSigV1.sol#502)\n\t- Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation)) (repositories/verified-smart-contracts/MultiSigV1.sol#510-513)\n\tEvent emitted after the call(s):\n\t- Upgraded(newImplementation) (repositories/verified-smart-contracts/MultiSigV1.sol#468)\n\t\t- _upgradeTo(newImplementation) (repositories/verified-smart-contracts/MultiSigV1.sol#518)\nReentrancy in TransparentUpgradeableProxy.constructor(address,address,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#675-682):\n\tExternal calls:\n\t- ERC1967Proxy(_logic,_data) (repositories/verified-smart-contracts/MultiSigV1.sol#679)\n\t\t- Address.functionDelegateCall(newImplementation,data) (repositories/verified-smart-contracts/MultiSigV1.sol#483)\n\t\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/MultiSigV1.sol#294)\n\tEvent emitted after the call(s):\n\t- AdminChanged(_getAdmin(),newAdmin) (repositories/verified-smart-contracts/MultiSigV1.sol#555)\n\t\t- _changeAdmin(admin_) (repositories/verified-smart-contracts/MultiSigV1.sol#681)\nReentrancy in UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address) (repositories/verified-smart-contracts/MultiSigV1.sol#1472-1501):\n\tExternal calls:\n\t- proxy = new TransparentUpgradeableProxy(_impl,address(proxyAdmin),) (repositories/verified-smart-contracts/MultiSigV1.sol#1488-1490)\n\t- setup(_owners,_required,_immutable,address(proxy)) (repositories/verified-smart-contracts/MultiSigV1.sol#1492)\n\t\t- walletImpl.setup(_owners,_required,_immutable) (repositories/verified-smart-contracts/MultiSigV1.sol#1512)\n\tEvent emitted after the call(s):\n\t- UpgradeableMultiSignWalletDeployed(address(proxyAdmin),address(proxy),_impl) (repositories/verified-smart-contracts/MultiSigV1.sol#1496-1500)\nReentrancy in MultiSigWalletWithPermit.executeTransactionInner(address,uint256,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1374-1399):\n\tExternal calls:\n\t- (success,returndata) = destination.call{value: value}(data) (repositories/verified-smart-contracts/MultiSigV1.sol#1382-1384)\n\tEvent emitted after the call(s):\n\t- Execution(transactionId) (repositories/verified-smart-contracts/MultiSigV1.sol#1388)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nProxy._delegate(address) (repositories/verified-smart-contracts/MultiSigV1.sol#24-47) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#25-46)\nAddress.isContract(address) (repositories/verified-smart-contracts/MultiSigV1.sol#135-145) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#141-143)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/MultiSigV1.sol#304-324) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#316-319)\nStorageSlot.getAddressSlot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#379-383) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#380-382)\nStorageSlot.getBooleanSlot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#388-392) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#389-391)\nStorageSlot.getBytes32Slot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#397-401) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#398-400)\nStorageSlot.getUint256Slot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#406-410) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#407-409)\nMultiSigWallet.external_call(address,uint256,uint256,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#1047-1068) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#1051-1066)\nMultiSigWalletWithPermit.setup0(bool) (repositories/verified-smart-contracts/MultiSigV1.sol#1286-1308) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#1291-1293)\nMultiSigWalletWithPermit.executeTransactionInner(address,uint256,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1374-1399) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MultiSigV1.sol#1391-1394)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.2\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#94)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#112)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#331)\n\t- ^0.8.2 (repositories/verified-smart-contracts/MultiSigV1.sol#417)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#612)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#646)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#771)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#787)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1405)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1432)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1461)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#188-190) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/MultiSigV1.sol#198-204) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#217-223) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/MultiSigV1.sol#231-242) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#250-252) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/MultiSigV1.sol#260-269) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#163-168) is never used and should be removed\nERC1967Upgrade._getBeacon() (repositories/verified-smart-contracts/MultiSigV1.sol#573-575) is never used and should be removed\nERC1967Upgrade._setBeacon(address) (repositories/verified-smart-contracts/MultiSigV1.sol#580-587) is never used and should be removed\nERC1967Upgrade._upgradeBeaconToAndCall(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#595-605) is never used and should be removed\nERC1967Upgrade._upgradeToAndCallSecure(address,bytes,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#492-520) is never used and should be removed\nProxy._implementation() (repositories/verified-smart-contracts/MultiSigV1.sol#53) is never used and should be removed\nStorageSlot.getBooleanSlot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#388-392) is never used and should be removed\nStorageSlot.getBytes32Slot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#397-401) is never used and should be removed\nStorageSlot.getUint256Slot(bytes32) (repositories/verified-smart-contracts/MultiSigV1.sol#406-410) is never used and should be removed\nTransparentUpgradeableProxy._admin() (repositories/verified-smart-contracts/MultiSigV1.sol#755-757) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#94) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#112) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#331) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.2 (repositories/verified-smart-contracts/MultiSigV1.sol#417) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#612) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#646) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#771) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#787) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1405) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1432) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MultiSigV1.sol#1461) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#163-168):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/MultiSigV1.sol#166)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/MultiSigV1.sol#231-242):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/MultiSigV1.sol#240)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/MultiSigV1.sol#260-269):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/MultiSigV1.sol#267)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/MultiSigV1.sol#287-296):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/MultiSigV1.sol#294)\nLow level call in MultiSigWalletWithPermit.executeTransactionInner(address,uint256,bytes,uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1374-1399):\n\t- (success,returndata) = destination.call{value: value}(data) (repositories/verified-smart-contracts/MultiSigV1.sol#1382-1384)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nTransparentUpgradeableProxy (repositories/verified-smart-contracts/MultiSigV1.sol#670-766) should inherit from IBeacon (repositories/verified-smart-contracts/MultiSigV1.sol#99-106)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance\x1b[0m\n\x1b[92m\nParameter MultiSigWallet.initialize(address[],uint256)._owners (repositories/verified-smart-contracts/MultiSigV1.sol#908) is not in mixedCase\nParameter MultiSigWallet.initialize(address[],uint256)._required (repositories/verified-smart-contracts/MultiSigV1.sol#908) is not in mixedCase\nParameter MultiSigWallet.changeRequirement(uint256)._required (repositories/verified-smart-contracts/MultiSigV1.sol#978) is not in mixedCase\nFunction MultiSigWallet.external_call(address,uint256,uint256,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#1047-1068) is not in mixedCase\nParameter MultiSigWalletWithPermit.changeRequirement(uint256)._required (repositories/verified-smart-contracts/MultiSigV1.sol#1237) is not in mixedCase\nParameter MultiSigWalletWithPermit.setup(address[],uint256,bool)._owners (repositories/verified-smart-contracts/MultiSigV1.sol#1276) is not in mixedCase\nParameter MultiSigWalletWithPermit.setup(address[],uint256,bool)._required (repositories/verified-smart-contracts/MultiSigV1.sol#1277) is not in mixedCase\nParameter MultiSigWalletWithPermit.setup(address[],uint256,bool)._immutable (repositories/verified-smart-contracts/MultiSigV1.sol#1278) is not in mixedCase\nParameter MultiSigWalletWithPermit.setup0(bool)._immutable (repositories/verified-smart-contracts/MultiSigV1.sol#1286) is not in mixedCase\nVariable MultiSigWalletWithPermit.DOMAIN_SEPARATOR (repositories/verified-smart-contracts/MultiSigV1.sol#1310) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address)._owners (repositories/verified-smart-contracts/MultiSigV1.sol#1473) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address)._required (repositories/verified-smart-contracts/MultiSigV1.sol#1474) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address)._immutable (repositories/verified-smart-contracts/MultiSigV1.sol#1475) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address)._impl (repositories/verified-smart-contracts/MultiSigV1.sol#1476) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.setup(address[],uint256,bool,address)._owners (repositories/verified-smart-contracts/MultiSigV1.sol#1504) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.setup(address[],uint256,bool,address)._required (repositories/verified-smart-contracts/MultiSigV1.sol#1505) is not in mixedCase\nParameter UpgradeableMultiSignWalletFactory.setup(address[],uint256,bool,address)._immutable (repositories/verified-smart-contracts/MultiSigV1.sol#1506) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nsubmitTransaction(address,uint256,bytes) should be declared external:\n\t- MultiSigWallet.submitTransaction(address,uint256,bytes) (repositories/verified-smart-contracts/MultiSigV1.sol#992-998)\nrevokeConfirmation(uint256) should be declared external:\n\t- MultiSigWallet.revokeConfirmation(uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1015-1023)\ngetConfirmationCount(uint256) should be declared external:\n\t- MultiSigWallet.getConfirmationCount(uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1120-1128)\ngetTransactionCount(bool,bool) should be declared external:\n\t- MultiSigWallet.getTransactionCount(bool,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#1134-1143)\ngetOwners() should be declared external:\n\t- MultiSigWallet.getOwners() (repositories/verified-smart-contracts/MultiSigV1.sol#1147-1153)\ngetConfirmations(uint256) should be declared external:\n\t- MultiSigWallet.getConfirmations(uint256) (repositories/verified-smart-contracts/MultiSigV1.sol#1158-1174)\ngetTransactionIds(uint256,uint256,bool,bool) should be declared external:\n\t- MultiSigWallet.getTransactionIds(uint256,uint256,bool,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#1182-1200)\nsetup(address[],uint256,bool) should be declared external:\n\t- MultiSigWalletWithPermit.setup(address[],uint256,bool) (repositories/verified-smart-contracts/MultiSigV1.sol#1275-1284)\nexecuteTxWithPermits(address,uint256,bytes,uint256,bytes32[],bytes32[],uint8[]) should be declared external:\n\t- MultiSigWalletWithPermit.executeTxWithPermits(address,uint256,bytes,uint256,bytes32[],bytes32[],uint8[]) (repositories/verified-smart-contracts/MultiSigV1.sol#1323-1372)\neipFeatures() should be declared external:\n\t- MultiSigV1.eipFeatures() (repositories/verified-smart-contracts/MultiSigV1.sol#1449-1451)\nversion() should be declared external:\n\t- MultiSigV1.version() (repositories/verified-smart-contracts/MultiSigV1.sol#1453-1455)\ncreate(address[],uint256,bool,address) should be declared external:\n\t- UpgradeableMultiSignWalletFactory.create(address[],uint256,bool,address) (repositories/verified-smart-contracts/MultiSigV1.sol#1472-1501)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/MultiSigV1.sol analyzed (13 contracts with 75 detectors), 87 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BatchTransfer.sol --json ./slither/OLD_verified-smart-contracts/json/BatchTransfer.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BatchTransfer.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BatchTransfer.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/BatchTransfer.sol:1:1:\n  |\n1 | {"BatchTransfer.sol":{"content":"//  ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/BatchTransfer.sol:1:1:\n  |\n1 | {"BatchTransfer.sol":{"content":"//  ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/BatchTransfer.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/BatchTransfer.sol:1:1:\n  |\n1 | {"BatchTransfer.sol":{"content":"//  ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol --json ./slither/OLD_verified-smart-contracts/json/RoyalRabbitsClubNFT.sol.json', returncode=80, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol\n\n\n\x1b[93m\nContract locking ether found:\n\tContract RoyalRabbitsClubNFT (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1398-1478) has payable functions:\n\t - NativeMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#136-170)\n\tBut does not have a function to withdraw the ether\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1276-1297) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1283-1293)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nERC721Tradable.constructor(string,string,address)._name (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1353) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#918) (state variable)\nERC721Tradable.constructor(string,string,address)._symbol (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1354) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#921) (state variable)\nERC721Tradable.isApprovedForAll(address,address)._owner (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1374) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#767) (state variable)\nRoyalRabbitsClubNFT.constructor(string,string,string,string,uint256,uint256,address,address[])._name (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1410) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#918) (state variable)\nRoyalRabbitsClubNFT.constructor(string,string,string,string,uint256,uint256,address,address[])._symbol (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1411) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#921) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1283)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1276-1297) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1284)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1285)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1276-1297) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1286)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1285)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1276-1297) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1290)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nRoyalRabbitsClubNFT._beforeTokenTransfer(address,address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1472-1476) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_from == address(0) || publicSaleStartTimestamp <= block.timestamp,public sale has not started) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1474-1475)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nEIP712Base.getChainId() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#77-83) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#79-81)\nContextMixin.msgSender() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#218-233) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#222-228)\nAddress.isContract(address) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#264-274) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#270-272)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#433-453) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#445-448)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1276-1297) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1289-1291)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nRoyalRabbitsClubNFT.mintBatch(address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1448-1465) has costly operations inside a loop:\n\t- tokenCount ++ (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1460)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#317-319) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#327-333) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#346-352) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#360-371) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#406-408) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#416-425) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#379-381) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#389-398) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#292-297) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#433-453) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#741-743) is never used and should be removed\nContext._msgSender() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#737-739) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#999-1001) is never used and should be removed\nERC721._beforeTokenTransfer(address,address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1313-1317) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1196-1208) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#865-876) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#881-891) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#108) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#215) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#241) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#461) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#491) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#519) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#695) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#724) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#751) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#829) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#899) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1324) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1394) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in NativeMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#136-170):\n\t- (success,returnData) = address(this).call(abi.encodePacked(functionSignature,userAddress)) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#164-166)\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#292-297):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#295)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#360-371):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#369)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#389-398):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#396)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#416-425):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#423)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1073) is not in mixedCase\nParameter ERC721Tradable.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1369) is not in mixedCase\nParameter ERC721Tradable.isApprovedForAll(address,address)._owner (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1374) is not in mixedCase\nParameter ERC721Tradable.isApprovedForAll(address,address)._operator (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1374) is not in mixedCase\nParameter RoyalRabbitsClubNFT.updateBaseURI(string)._baseTokenURI (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1438) is not in mixedCase\nParameter RoyalRabbitsClubNFT.updateOperator(address,bool)._operatorAddress (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1443) is not in mixedCase\nParameter RoyalRabbitsClubNFT.updateOperator(address,bool)._status (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1443) is not in mixedCase\nParameter RoyalRabbitsClubNFT.mintBatch(address,uint256)._to (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1449) is not in mixedCase\nParameter RoyalRabbitsClubNFT.mintBatch(address,uint256)._amount (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1450) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nVariable RoyalRabbitsClubNFT.constructor(string,string,string,string,uint256,uint256,address,address[])._proxyRegistrAddress (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1416) is too similar to ERC721Tradable.proxyRegistryAddress (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1350)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nexecuteMetaTransaction(address,bytes,bytes32,bytes32,uint8) should be declared external:\n\t- NativeMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#136-170)\ngetNonce(address) should be declared external:\n\t- NativeMetaTransaction.getNonce(address) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#188-190)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#800-802)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#808-811)\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#956-959)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#973-975)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#980-982)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#987-992)\n\t- ERC721Tradable.tokenURI(uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1369-1372)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1006-1016)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1030-1032)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1044-1053)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1058-1064)\ntotalSupply() should be declared external:\n\t- ERC721Tradable.totalSupply() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1362)\n\t- RoyalRabbitsClubNFT.totalSupply() (repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol#1433-1436)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/RoyalRabbitsClubNFT.sol analyzed (19 contracts with 75 detectors), 80 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Omega.sol --json ./slither/OLD_verified-smart-contracts/json/Omega.sol.json', returncode=26, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/Omega.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nOmega.getPendingReward(address) (repositories/verified-smart-contracts/Omega.sol#657-659) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastUpdate[user] >= START (repositories/verified-smart-contracts/Omega.sol#658)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/Omega.sol#50-52) is never used and should be removed\nERC20._burn(address,uint256) (repositories/verified-smart-contracts/Omega.sol#523-538) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#60) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#138) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#223) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#253) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Omega.sol#610) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nVariable Omega.OlympusArtGallery (repositories/verified-smart-contracts/Omega.sol#620) is not in mixedCase\nVariable Omega.START (repositories/verified-smart-contracts/Omega.sol#623) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Omega.sol#109-111)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Omega.sol#117-120)\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/Omega.sol#310-312)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/Omega.sol#318-320)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/Omega.sol#335-337)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/Omega.sol#342-344)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/Omega.sol#349-351)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/Omega.sol#361-364)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/Omega.sol#369-371)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/Omega.sol#380-383)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Omega.sol#398-412)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/Omega.sol#426-429)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/Omega.sol#445-453)\ntoggleReward() should be declared external:\n\t- Omega.toggleReward() (repositories/verified-smart-contracts/Omega.sol#661-663)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Omega.sol analyzed (7 contracts with 75 detectors), 26 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Fur.sol --json ./slither/OLD_verified-smart-contracts/json/Fur.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Fur.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Fur.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/Fur.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Fur.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Fur.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Fur.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Serenity.sol --json ./slither/OLD_verified-smart-contracts/json/Serenity.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Serenity.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Serenity.sol:\n\x1b[91mError: No visibility specified. Did you intend to add "public"?\x1b[0m\n   --> ./repositories/verified-smart-contracts/Serenity.sol:307:5:\n    |\n307 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\x1b[91mError: Member "chainid" not found or not visible after argument-dependent lookup in block.\x1b[0m\n   --> ./repositories/verified-smart-contracts/Serenity.sol:311:13:\n    |\n311 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: No visibility specified. Did you intend to add "public"?\n   --> ./repositories/verified-smart-contracts/Serenity.sol:307:5:\n    |\n307 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Member "chainid" not found or not visible after argument-dependent lookup in block.\n   --> ./repositories/verified-smart-contracts/Serenity.sol:311:13:\n    |\n311 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Serenity.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: No visibility specified. Did you intend to add "public"?\n   --> ./repositories/verified-smart-contracts/Serenity.sol:307:5:\n    |\n307 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Member "chainid" not found or not visible after argument-dependent lookup in block.\n   --> ./repositories/verified-smart-contracts/Serenity.sol:311:13:\n    |\n311 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/EnchantedValleyMintPass.sol --json ./slither/OLD_verified-smart-contracts/json/EnchantedValleyMintPass.sol.json', returncode=59, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/EnchantedValleyMintPass.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/EnchantedValleyMintPass.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/EnchantedValleyMintPass.sol\n\n\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#503-524) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#510-520)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nEnchantedValleyMintPass.constructor(address,address,address)._bigH (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#794) lacks a zero-check on :\n\t\t- bigH = _bigH (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#798)\nEnchantedValleyMintPass.constructor(address,address,address)._stargazer (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#795) lacks a zero-check on :\n\t\t- stargazer = _stargazer (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#799)\nEnchantedValleyMintPass.constructor(address,address,address)._treasury (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#796) lacks a zero-check on :\n\t\t- treasury = _treasury (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#800)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#510)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#503-524) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#511)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#512)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#503-524) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#513)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#512)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#503-524) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#517)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#83-93) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#89-91)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#175-195) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#187-190)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#503-524) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#516-518)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nEnchantedValleyMintPass.safeMint(uint256,bool) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#846-872) compares to a boolean constant:\n\t-require(bool,string)(stopSales == false,Sales are now stopped) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#848)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#104-106) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#109-115) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#118-124) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#127-138) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#158-160) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#163-172) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#141-143) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#146-155) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#96-101) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#175-195) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#203-205) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#718-724) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#726-728) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#337-339) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#461-473) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#235-246) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#249-259) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#212-232) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version>=0.8.7<0.9.0 (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#1) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#96-101):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#99)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#127-138):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#136)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#146-155):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#153)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#163-172):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#170)\nLow level call in EnchantedValleyMintPass.safeMint(uint256,bool) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#846-872):\n\t- (sentBigH) = bigH.call{value: five_points}() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#862)\n\t- (sentStargazer) = stargazer.call{value: five_points}() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#864)\n\t- (sentTreasury) = treasury.call{value: remainder}() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#868)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#400) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#319-321)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#324-326)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#329-334)\n\t- EnchantedValleyMintPass.tokenURI(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#803-807)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#342-352)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#362-367)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#375-384)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#387-393)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#564-567)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#575-578)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#753-755)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#758-761)\ncontractURI() should be declared external:\n\t- EnchantedValleyMintPass.contractURI() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#813-815)\nsetCurrentTokenURI(string) should be declared external:\n\t- EnchantedValleyMintPass.setCurrentTokenURI(string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#817-819)\nsetCurrentContractURI(string) should be declared external:\n\t- EnchantedValleyMintPass.setCurrentContractURI(string) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#821-823)\nsetPrice(uint256) should be declared external:\n\t- EnchantedValleyMintPass.setPrice(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#825-827)\nsetLimit(uint256) should be declared external:\n\t- EnchantedValleyMintPass.setLimit(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#829-831)\nsetMaxSupply(uint256) should be declared external:\n\t- EnchantedValleyMintPass.setMaxSupply(uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#833-835)\nadminMint(address,uint256) should be declared external:\n\t- EnchantedValleyMintPass.adminMint(address,uint256) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#837-844)\nsafeMint(uint256,bool) should be declared external:\n\t- EnchantedValleyMintPass.safeMint(uint256,bool) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#846-872)\nsetStopSales(bool) should be declared external:\n\t- EnchantedValleyMintPass.setStopSales(bool) (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#874-876)\npause() should be declared external:\n\t- EnchantedValleyMintPass.pause() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#878-880)\nunpause() should be declared external:\n\t- EnchantedValleyMintPass.unpause() (repositories/verified-smart-contracts/EnchantedValleyMintPass.sol#882-884)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/EnchantedValleyMintPass.sol analyzed (15 contracts with 75 detectors), 59 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/HodlerChads(1).sol --json ./slither/OLD_verified-smart-contracts/json/HodlerChads(1).sol.json', returncode=2, stdout='', stderr='/bin/sh: 1: Syntax error: "(" unexpected\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/HodlerChads.sol --json ./slither/OLD_verified-smart-contracts/json/HodlerChads.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/HodlerChads.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/HodlerChads.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/HodlerChads.sol:4:1:\n  |\n4 | pragma solidity 0.8.6;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/HodlerChads.sol:4:1:\n  |\n4 | pragma solidity 0.8.6;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/HodlerChads.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/HodlerChads.sol:4:1:\n  |\n4 | pragma solidity 0.8.6;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SHIBJI.sol --json ./slither/OLD_verified-smart-contracts/json/SHIBJI.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/SHIBJI.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/SHIBJI.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/SHIBJI.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/SHIBJI.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/SHIBJI.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/SHIBJI.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PhotoSapiens.sol --json ./slither/OLD_verified-smart-contracts/json/PhotoSapiens.sol.json', returncode=71, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PhotoSapiens.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#955-976) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PhotoSapiens.sol#962-972)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nPhotoSapiens.setAdmin(address) (repositories/verified-smart-contracts/PhotoSapiens.sol#1447-1450) should emit an event for: \n\t- _adminAddress = newAdminAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1449) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control\x1b[0m\n\x1b[92m\nPhotoSapiens.setWhitelistTime(uint32) (repositories/verified-smart-contracts/PhotoSapiens.sol#1453-1455) should emit an event for: \n\t- _whitelistTime = (newWhitelistTime * 3600) (repositories/verified-smart-contracts/PhotoSapiens.sol#1454) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nPhotoSapiens.constructor(uint32,uint32,address,address,address,address).adminAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1381) lacks a zero-check on :\n\t\t- _adminAddress = adminAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1388)\nPhotoSapiens.constructor(uint32,uint32,address,address,address,address).treasuryAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1382) lacks a zero-check on :\n\t\t- _treasuryAddress = treasuryAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1389)\nPhotoSapiens.constructor(uint32,uint32,address,address,address,address).whitelistSignerAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1383) lacks a zero-check on :\n\t\t- _whitelistSignerAddress = whitelistSignerAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1390)\nPhotoSapiens.constructor(uint32,uint32,address,address,address,address).backendSignerAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1384) lacks a zero-check on :\n\t\t- _backendSignerAddress = backendSignerAddress (repositories/verified-smart-contracts/PhotoSapiens.sol#1391)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PhotoSapiens.sol#962)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#955-976) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PhotoSapiens.sol#963)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PhotoSapiens.sol#964)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#955-976) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PhotoSapiens.sol#965)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PhotoSapiens.sol#964)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#955-976) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PhotoSapiens.sol#969)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nPhotoSapiens.mint(address,bytes32,PhotoSapiens.ECDSASignature,PhotoSapiens.ECDSASignature) (repositories/verified-smart-contracts/PhotoSapiens.sol#1394-1414) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_launchDate <= block.timestamp,pre-launch) (repositories/verified-smart-contracts/PhotoSapiens.sol#1402)\n\t- block.timestamp <= _launchDate + _whitelistTime (repositories/verified-smart-contracts/PhotoSapiens.sol#1404)\nPhotoSapiens._transfer(address,address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#1416-1423) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_launchDate + _whitelistTime < block.timestamp,cannot transfer during whitelist period) (repositories/verified-smart-contracts/PhotoSapiens.sol#1421)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PhotoSapiens.sol#257-267) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PhotoSapiens.sol#263-265)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#426-446) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PhotoSapiens.sol#438-441)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#955-976) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PhotoSapiens.sol#968-970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.10\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#33)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#177)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#453)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#479)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#548)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#578)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1003)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1033)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1197)\n\t- ^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1272)\n\t- ^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1352)\n\t- ^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1472)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#310-312) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#320-326) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#339-345) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#353-364) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#399-401) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#409-418) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/PhotoSapiens.sol#372-374) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#382-391) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#285-290) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#426-446) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PhotoSapiens.sol#470-472) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/PhotoSapiens.sol#678-680) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#875-887) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#515-526) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#531-541) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#490-510) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#177) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#453) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#479) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#548) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#578) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1003) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1033) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PhotoSapiens.sol#1197) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1272) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1352) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.10 (repositories/verified-smart-contracts/PhotoSapiens.sol#1472) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#285-290):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PhotoSapiens.sol#288)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#353-364):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/PhotoSapiens.sol#362)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#382-391):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/PhotoSapiens.sol#389)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PhotoSapiens.sol#409-418):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/PhotoSapiens.sol#416)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PhotoSapiens.sol#752) is not in mixedCase\nConstant IPFSTool.sha256MultiHash (repositories/verified-smart-contracts/PhotoSapiens.sol#1275) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant PhotoSapiens._price (repositories/verified-smart-contracts/PhotoSapiens.sol#1364) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable Migrations.last_completed_migration (repositories/verified-smart-contracts/PhotoSapiens.sol#1476) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "i (repositories/verified-smart-contracts/PhotoSapiens.sol#1340)" inIPFSTool (repositories/verified-smart-contracts/PhotoSapiens.sol#1274-1348)\nRedundant expression "i (repositories/verified-smart-contracts/PhotoSapiens.sol#1343)" inIPFSTool (repositories/verified-smart-contracts/PhotoSapiens.sol#1274-1348)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PhotoSapiens.sol#652-654)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PhotoSapiens.sol#659-661)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#666-671)\n\t- PhotoSapiens.tokenURI(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#1430-1435)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#685-695)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PhotoSapiens.sol#709-711)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#723-732)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#737-743)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#1065-1068)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#1080-1083)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PhotoSapiens.sol#1246-1248)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PhotoSapiens.sol#1254-1257)\nipfsToString(bytes32) should be declared external:\n\t- IPFSTool.ipfsToString(bytes32) (repositories/verified-smart-contracts/PhotoSapiens.sol#1279-1281)\nsetCompleted(uint256) should be declared external:\n\t- Migrations.setCompleted(uint256) (repositories/verified-smart-contracts/PhotoSapiens.sol#1483-1485)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PhotoSapiens.sol analyzed (15 contracts with 75 detectors), 71 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DOMAINMONEY.sol --json ./slither/OLD_verified-smart-contracts/json/DOMAINMONEY.sol.json', returncode=64, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/DOMAINMONEY.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in DOMAINMONEY._transfer(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#333-395):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#365)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/DOMAINMONEY.sol#402-408)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#368)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/DOMAINMONEY.sol#476)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#466)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#467)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#480)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[92m\nDOMAINMONEY.allowance(address,address).owner (repositories/verified-smart-contracts/DOMAINMONEY.sol#259) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/DOMAINMONEY.sol#67-69) (function)\nDOMAINMONEY._approve(address,address,uint256).owner (repositories/verified-smart-contracts/DOMAINMONEY.sol#323) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/DOMAINMONEY.sol#67-69) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in DOMAINMONEY._transfer(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#333-395):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#365)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/DOMAINMONEY.sol#402-408)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#368)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _previousredisFee = _redisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#310)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _previoustaxFee = _taxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#311)\n\t- _redisFee = _redisFeeOnBuy (repositories/verified-smart-contracts/DOMAINMONEY.sol#382)\n\t- _redisFee = _redisFeeOnSell (repositories/verified-smart-contracts/DOMAINMONEY.sol#388)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _redisFee = _previousredisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#318)\n\t\t- _redisFee = 0 (repositories/verified-smart-contracts/DOMAINMONEY.sol#313)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#481)\n\t- _taxFee = _taxFeeOnBuy (repositories/verified-smart-contracts/DOMAINMONEY.sol#383)\n\t- _taxFee = _taxFeeOnSell (repositories/verified-smart-contracts/DOMAINMONEY.sol#389)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _taxFee = _previoustaxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#319)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/DOMAINMONEY.sol#314)\nReentrancy in DOMAINMONEY.constructor() (repositories/verified-smart-contracts/DOMAINMONEY.sol#213-228):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/DOMAINMONEY.sol#219-220)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/DOMAINMONEY.sol#222)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/DOMAINMONEY.sol#223)\n\t- _isExcludedFromFee[_developmentAddress] = true (repositories/verified-smart-contracts/DOMAINMONEY.sol#224)\n\t- _isExcludedFromFee[_marketingAddress] = true (repositories/verified-smart-contracts/DOMAINMONEY.sol#225)\nReentrancy in DOMAINMONEY.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#277-292):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#282)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/DOMAINMONEY.sol#402-408)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#282)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#283-290)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/DOMAINMONEY.sol#329)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in DOMAINMONEY._transfer(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#333-395):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#365)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/DOMAINMONEY.sol#402-408)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#368)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#470)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\nReentrancy in DOMAINMONEY.constructor() (repositories/verified-smart-contracts/DOMAINMONEY.sol#213-228):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/DOMAINMONEY.sol#219-220)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/DOMAINMONEY.sol#227)\nReentrancy in DOMAINMONEY.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#277-292):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#282)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/DOMAINMONEY.sol#402-408)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#282)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#330)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#283-290)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nDOMAINMONEY._redisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#189) is set pre-construction with a non-constant function or state variable:\n\t- _redisFeeOnSell\nDOMAINMONEY._taxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#190) is set pre-construction with a non-constant function or state variable:\n\t- _taxFeeOnSell\nDOMAINMONEY._previousredisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#192) is set pre-construction with a non-constant function or state variable:\n\t- _redisFee\nDOMAINMONEY._previoustaxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#193) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.9 (repositories/verified-smart-contracts/DOMAINMONEY.sol#20) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/DOMAINMONEY.sol#151) is not in mixedCase\nParameter DOMAINMONEY.setTrading(bool)._tradingOpen (repositories/verified-smart-contracts/DOMAINMONEY.sol#416) is not in mixedCase\nParameter DOMAINMONEY.toggleSwap(bool)._swapEnabled (repositories/verified-smart-contracts/DOMAINMONEY.sol#571) is not in mixedCase\nConstant DOMAINMONEY._name (repositories/verified-smart-contracts/DOMAINMONEY.sol#174) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant DOMAINMONEY._symbol (repositories/verified-smart-contracts/DOMAINMONEY.sol#175) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant DOMAINMONEY._decimals (repositories/verified-smart-contracts/DOMAINMONEY.sol#176) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant DOMAINMONEY._tTotal (repositories/verified-smart-contracts/DOMAINMONEY.sol#183) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable DOMAINMONEY._buyMap (repositories/verified-smart-contracts/DOMAINMONEY.sol#195) is not in mixedCase\nVariable DOMAINMONEY._maxTxAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#204) is not in mixedCase\nVariable DOMAINMONEY._maxWalletSize (repositories/verified-smart-contracts/DOMAINMONEY.sol#204) is not in mixedCase\nVariable DOMAINMONEY._swapTokensAtAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#204) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in DOMAINMONEY._transfer(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#333-395):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/DOMAINMONEY.sol#368)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _previousredisFee = _redisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#310)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _previoustaxFee = _taxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#311)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/DOMAINMONEY.sol#476)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#466)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#467)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#480)\n\t- _redisFee = _redisFeeOnBuy (repositories/verified-smart-contracts/DOMAINMONEY.sol#382)\n\t- _redisFee = _redisFeeOnSell (repositories/verified-smart-contracts/DOMAINMONEY.sol#388)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _redisFee = _previousredisFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#318)\n\t\t- _redisFee = 0 (repositories/verified-smart-contracts/DOMAINMONEY.sol#313)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#481)\n\t- _taxFee = _taxFeeOnBuy (repositories/verified-smart-contracts/DOMAINMONEY.sol#383)\n\t- _taxFee = _taxFeeOnSell (repositories/verified-smart-contracts/DOMAINMONEY.sol#389)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\n\t\t- _taxFee = _previoustaxFee (repositories/verified-smart-contracts/DOMAINMONEY.sol#319)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/DOMAINMONEY.sol#314)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#470)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/DOMAINMONEY.sol#394)\nReentrancy in DOMAINMONEY.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#277-292):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#282)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#412)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#413)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#283-290)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/DOMAINMONEY.sol#329)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/DOMAINMONEY.sol#330)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/DOMAINMONEY.sol#283-290)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable DOMAINMONEY._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#501) is too similar to DOMAINMONEY._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#462)\nVariable DOMAINMONEY._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#460) is too similar to DOMAINMONEY._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#521)\nVariable DOMAINMONEY._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#542) is too similar to DOMAINMONEY._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#521)\nVariable DOMAINMONEY._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#542) is too similar to DOMAINMONEY._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#462)\nVariable DOMAINMONEY._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#501) is too similar to DOMAINMONEY._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#521)\nVariable DOMAINMONEY._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#460) is too similar to DOMAINMONEY._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#462)\nVariable DOMAINMONEY._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#501) is too similar to DOMAINMONEY._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#498)\nVariable DOMAINMONEY._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#542) is too similar to DOMAINMONEY._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#498)\nVariable DOMAINMONEY._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#460) is too similar to DOMAINMONEY._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/DOMAINMONEY.sol#498)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nDOMAINMONEY.slitherConstructorVariables() (repositories/verified-smart-contracts/DOMAINMONEY.sol#170-591) uses literals with too many digits:\n\t- _maxTxAmount = 10000000 * 10 ** 9 (repositories/verified-smart-contracts/DOMAINMONEY.sol#204)\nDOMAINMONEY.slitherConstructorVariables() (repositories/verified-smart-contracts/DOMAINMONEY.sol#170-591) uses literals with too many digits:\n\t- _maxWalletSize = 15000000 * 10 ** 9 (repositories/verified-smart-contracts/DOMAINMONEY.sol#204)\nDOMAINMONEY.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/DOMAINMONEY.sol#170-591) uses literals with too many digits:\n\t- _tTotal = 1000000000 * 10 ** 9 (repositories/verified-smart-contracts/DOMAINMONEY.sol#183)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/DOMAINMONEY.sol#55) is never used in DOMAINMONEY (repositories/verified-smart-contracts/DOMAINMONEY.sol#170-591)\nDOMAINMONEY._tOwned (repositories/verified-smart-contracts/DOMAINMONEY.sol#179) is never used in DOMAINMONEY (repositories/verified-smart-contracts/DOMAINMONEY.sol#170-591)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nDOMAINMONEY._developmentAddress (repositories/verified-smart-contracts/DOMAINMONEY.sol#195) should be constant\nDOMAINMONEY._marketingAddress (repositories/verified-smart-contracts/DOMAINMONEY.sol#195) should be constant\nOwnable._previousOwner (repositories/verified-smart-contracts/DOMAINMONEY.sol#55) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DOMAINMONEY.sol#76-79)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/DOMAINMONEY.sol#81-85)\nname() should be declared external:\n\t- DOMAINMONEY.name() (repositories/verified-smart-contracts/DOMAINMONEY.sol#230-232)\nsymbol() should be declared external:\n\t- DOMAINMONEY.symbol() (repositories/verified-smart-contracts/DOMAINMONEY.sol#234-236)\ndecimals() should be declared external:\n\t- DOMAINMONEY.decimals() (repositories/verified-smart-contracts/DOMAINMONEY.sol#238-240)\ntotalSupply() should be declared external:\n\t- DOMAINMONEY.totalSupply() (repositories/verified-smart-contracts/DOMAINMONEY.sol#242-244)\ntransfer(address,uint256) should be declared external:\n\t- DOMAINMONEY.transfer(address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#250-257)\nallowance(address,address) should be declared external:\n\t- DOMAINMONEY.allowance(address,address) (repositories/verified-smart-contracts/DOMAINMONEY.sol#259-266)\napprove(address,uint256) should be declared external:\n\t- DOMAINMONEY.approve(address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#268-275)\ntransferFrom(address,address,uint256) should be declared external:\n\t- DOMAINMONEY.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#277-292)\nsetTrading(bool) should be declared external:\n\t- DOMAINMONEY.setTrading(bool) (repositories/verified-smart-contracts/DOMAINMONEY.sol#416-418)\nblockBots(address[]) should be declared external:\n\t- DOMAINMONEY.blockBots(address[]) (repositories/verified-smart-contracts/DOMAINMONEY.sol#432-436)\nunblockBot(address) should be declared external:\n\t- DOMAINMONEY.unblockBot(address) (repositories/verified-smart-contracts/DOMAINMONEY.sol#438-440)\nsetFee(uint256,uint256,uint256,uint256) should be declared external:\n\t- DOMAINMONEY.setFee(uint256,uint256,uint256,uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#558-563)\nsetMinSwapTokensThreshold(uint256) should be declared external:\n\t- DOMAINMONEY.setMinSwapTokensThreshold(uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#566-568)\ntoggleSwap(bool) should be declared external:\n\t- DOMAINMONEY.toggleSwap(bool) (repositories/verified-smart-contracts/DOMAINMONEY.sol#571-573)\nsetMaxTxnAmount(uint256) should be declared external:\n\t- DOMAINMONEY.setMaxTxnAmount(uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#576-578)\nsetMaxWalletSize(uint256) should be declared external:\n\t- DOMAINMONEY.setMaxWalletSize(uint256) (repositories/verified-smart-contracts/DOMAINMONEY.sol#580-582)\nexcludeMultipleAccountsFromFees(address[],bool) should be declared external:\n\t- DOMAINMONEY.excludeMultipleAccountsFromFees(address[],bool) (repositories/verified-smart-contracts/DOMAINMONEY.sol#584-588)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DOMAINMONEY.sol analyzed (7 contracts with 75 detectors), 64 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Moonsters.sol --json ./slither/OLD_verified-smart-contracts/json/Moonsters.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/Moonsters.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nMoonsters.withdraw() (repositories/verified-smart-contracts/Moonsters.sol#1343-1357) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/Moonsters.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nMoonsters.walletOfOwner(address).i (repositories/verified-smart-contracts/Moonsters.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Moonsters.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/Moonsters.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nMoonsters.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/Moonsters.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/Moonsters.sol#610) (state variable)\nMoonsters.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/Moonsters.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/Moonsters.sol#613) (state variable)\nMoonsters.walletOfOwner(address)._owner (repositories/verified-smart-contracts/Moonsters.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/Moonsters.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/Moonsters.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Moonsters.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/Moonsters.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Moonsters.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Moonsters.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/Moonsters.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Moonsters.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Moonsters.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/Moonsters.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/Moonsters.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Moonsters.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Moonsters.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Moonsters.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Moonsters.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nMoonsters.tokenURI(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/Moonsters.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/Moonsters.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/Moonsters.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/Moonsters.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Moonsters.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/Moonsters.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/Moonsters.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/Moonsters.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/Moonsters.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/Moonsters.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/Moonsters.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/Moonsters.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/Moonsters.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Moonsters.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/Moonsters.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/Moonsters.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/Moonsters.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Moonsters.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/Moonsters.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/Moonsters.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Moonsters.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/Moonsters.sol#485)\nLow level call in Moonsters.withdraw() (repositories/verified-smart-contracts/Moonsters.sol#1343-1357):\n\t- (hs) = address(0xd501940Abf34B7541e405C46C5E1747280317877).call{value: address(this).balance * 10 / 100}() (repositories/verified-smart-contracts/Moonsters.sol#1347)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/Moonsters.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/Moonsters.sol#768) is not in mixedCase\nParameter Moonsters.mint(uint256)._mintAmount (repositories/verified-smart-contracts/Moonsters.sol#1263) is not in mixedCase\nParameter Moonsters.walletOfOwner(address)._owner (repositories/verified-smart-contracts/Moonsters.sol#1279) is not in mixedCase\nParameter Moonsters.setCost(uint256)._newCost (repositories/verified-smart-contracts/Moonsters.sol#1319) is not in mixedCase\nParameter Moonsters.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/Moonsters.sol#1323) is not in mixedCase\nParameter Moonsters.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/Moonsters.sol#1327) is not in mixedCase\nParameter Moonsters.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/Moonsters.sol#1331) is not in mixedCase\nParameter Moonsters.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/Moonsters.sol#1335) is not in mixedCase\nParameter Moonsters.pause(bool)._state (repositories/verified-smart-contracts/Moonsters.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nMoonsters.maxSupply (repositories/verified-smart-contracts/Moonsters.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/Moonsters.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/Moonsters.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/Moonsters.sol#679-684)\n\t- Moonsters.tokenURI(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1292-1312)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/Moonsters.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/Moonsters.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Moonsters.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/Moonsters.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Moonsters.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Moonsters.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- Moonsters.mint(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- Moonsters.walletOfOwner(address) (repositories/verified-smart-contracts/Moonsters.sol#1279-1290)\nreveal() should be declared external:\n\t- Moonsters.reveal() (repositories/verified-smart-contracts/Moonsters.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- Moonsters.setCost(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- Moonsters.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/Moonsters.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- Moonsters.setBaseExtension(string) (repositories/verified-smart-contracts/Moonsters.sol#1335-1337)\npause(bool) should be declared external:\n\t- Moonsters.pause(bool) (repositories/verified-smart-contracts/Moonsters.sol#1339-1341)\nwithdraw() should be declared external:\n\t- Moonsters.withdraw() (repositories/verified-smart-contracts/Moonsters.sol#1343-1357)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Moonsters.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/ELONSTIGER.sol --json ./slither/OLD_verified-smart-contracts/json/ELONSTIGER.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/ELONSTIGER.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/ELONSTIGER.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/ELONSTIGER.sol:3:1:\n  |\n3 | pragma solidity 0.8.9;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/ELONSTIGER.sol:3:1:\n  |\n3 | pragma solidity 0.8.9;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/ELONSTIGER.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/ELONSTIGER.sol:3:1:\n  |\n3 | pragma solidity 0.8.9;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PreCommit.sol --json ./slither/OLD_verified-smart-contracts/json/PreCommit.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PreCommit.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PreCommit.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\x1b[0m\n --> ./repositories/verified-smart-contracts/PreCommit.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\n --> ./repositories/verified-smart-contracts/PreCommit.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PreCommit.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\n --> ./repositories/verified-smart-contracts/PreCommit.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CoolSClub.sol --json ./slither/OLD_verified-smart-contracts/json/CoolSClub.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CoolSClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nCoolSClub.withdraw() (repositories/verified-smart-contracts/CoolSClub.sol#1343-1357) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CoolSClub.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nCoolSClub.walletOfOwner(address).i (repositories/verified-smart-contracts/CoolSClub.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/CoolSClub.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCoolSClub.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/CoolSClub.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/CoolSClub.sol#610) (state variable)\nCoolSClub.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/CoolSClub.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/CoolSClub.sol#613) (state variable)\nCoolSClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CoolSClub.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/CoolSClub.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/CoolSClub.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/CoolSClub.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CoolSClub.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/CoolSClub.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CoolSClub.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/CoolSClub.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CoolSClub.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CoolSClub.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CoolSClub.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CoolSClub.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nCoolSClub.tokenURI(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/CoolSClub.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/CoolSClub.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CoolSClub.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/CoolSClub.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CoolSClub.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/CoolSClub.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CoolSClub.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/CoolSClub.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CoolSClub.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CoolSClub.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/CoolSClub.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/CoolSClub.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CoolSClub.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/CoolSClub.sol#485)\nLow level call in CoolSClub.withdraw() (repositories/verified-smart-contracts/CoolSClub.sol#1343-1357):\n\t- (hs) = address(0x943590A42C27D08e3744202c4Ae5eD55c2dE240D).call{value: address(this).balance * 5 / 100}() (repositories/verified-smart-contracts/CoolSClub.sol#1347)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/CoolSClub.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/CoolSClub.sol#768) is not in mixedCase\nParameter CoolSClub.mint(uint256)._mintAmount (repositories/verified-smart-contracts/CoolSClub.sol#1263) is not in mixedCase\nParameter CoolSClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CoolSClub.sol#1279) is not in mixedCase\nParameter CoolSClub.setCost(uint256)._newCost (repositories/verified-smart-contracts/CoolSClub.sol#1319) is not in mixedCase\nParameter CoolSClub.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/CoolSClub.sol#1323) is not in mixedCase\nParameter CoolSClub.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/CoolSClub.sol#1327) is not in mixedCase\nParameter CoolSClub.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/CoolSClub.sol#1331) is not in mixedCase\nParameter CoolSClub.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/CoolSClub.sol#1335) is not in mixedCase\nParameter CoolSClub.pause(bool)._state (repositories/verified-smart-contracts/CoolSClub.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCoolSClub.maxSupply (repositories/verified-smart-contracts/CoolSClub.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/CoolSClub.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/CoolSClub.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- CoolSClub.tokenURI(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1292-1312)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#679-684)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/CoolSClub.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/CoolSClub.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CoolSClub.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CoolSClub.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- CoolSClub.mint(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- CoolSClub.walletOfOwner(address) (repositories/verified-smart-contracts/CoolSClub.sol#1279-1290)\nreveal() should be declared external:\n\t- CoolSClub.reveal() (repositories/verified-smart-contracts/CoolSClub.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- CoolSClub.setCost(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- CoolSClub.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/CoolSClub.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- CoolSClub.setBaseExtension(string) (repositories/verified-smart-contracts/CoolSClub.sol#1335-1337)\npause(bool) should be declared external:\n\t- CoolSClub.pause(bool) (repositories/verified-smart-contracts/CoolSClub.sol#1339-1341)\nwithdraw() should be declared external:\n\t- CoolSClub.withdraw() (repositories/verified-smart-contracts/CoolSClub.sol#1343-1357)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CoolSClub.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/HansamaInu.sol --json ./slither/OLD_verified-smart-contracts/json/HansamaInu.sol.json', returncode=78, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/HansamaInu.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/HansamaInu.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/HansamaInu.sol\n\n\n\x1b[91m\nReentrancy in HANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230):\n\tExternal calls:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\tExternal calls sending eth:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\tState variables written after the call(s):\n\t- swapping = false (repositories/verified-smart-contracts/HansamaInu.sol#1190)\nReentrancy in HANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230):\n\tExternal calls:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\t- autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1194)\n\t\t- pair.sync() (repositories/verified-smart-contracts/HansamaInu.sol#1337)\n\tExternal calls sending eth:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\tState variables written after the call(s):\n\t- autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1194)\n\t\t- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (repositories/verified-smart-contracts/HansamaInu.sol#382)\n\t\t- _balances[recipient] = _balances[recipient].add(amount) (repositories/verified-smart-contracts/HansamaInu.sol#383)\n\t- super._transfer(from,address(this),fees) (repositories/verified-smart-contracts/HansamaInu.sol#1223)\n\t\t- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (repositories/verified-smart-contracts/HansamaInu.sol#382)\n\t\t- _balances[recipient] = _balances[recipient].add(amount) (repositories/verified-smart-contracts/HansamaInu.sol#383)\n\t- super._transfer(from,to,amount) (repositories/verified-smart-contracts/HansamaInu.sol#1229)\n\t\t- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (repositories/verified-smart-contracts/HansamaInu.sol#382)\n\t\t- _balances[recipient] = _balances[recipient].add(amount) (repositories/verified-smart-contracts/HansamaInu.sol#383)\n\t- tokensForDev += fees * sellDevFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1211)\n\t- tokensForDev += fees * buyDevFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1218)\n\t- tokensForLiquidity += fees * sellLiquidityFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1210)\n\t- tokensForLiquidity += fees * buyLiquidityFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1217)\n\t- tokensForMarketing += fees * sellMarketingFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1212)\n\t- tokensForMarketing += fees * buyMarketingFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1219)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[93m\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-fees = amount.mul(sellTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1209)\n\t-tokensForLiquidity += fees * sellLiquidityFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1210)\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-tokensForDev += fees * sellDevFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1211)\n\t-fees = amount.mul(buyTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1216)\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-fees = amount.mul(buyTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1216)\n\t-tokensForLiquidity += fees * buyLiquidityFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1217)\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-tokensForMarketing += fees * sellMarketingFee / sellTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1212)\n\t-fees = amount.mul(buyTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1216)\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-fees = amount.mul(buyTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1216)\n\t-tokensForDev += fees * buyDevFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1218)\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) performs a multiplication on the result of a division:\n\t-fees = amount.mul(buyTotalFees).div(100) (repositories/verified-smart-contracts/HansamaInu.sol#1216)\n\t-tokensForMarketing += fees * buyMarketingFee / buyTotalFees (repositories/verified-smart-contracts/HansamaInu.sol#1219)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) uses a dangerous strict equality:\n\t- _holderFirstBuyTimestamp[to] == 0 (repositories/verified-smart-contracts/HansamaInu.sol#1163)\nHANSAMAINU.swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1269-1310) uses a dangerous strict equality:\n\t- contractBalance == 0 || totalTokensToSwap == 0 (repositories/verified-smart-contracts/HansamaInu.sol#1274)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities\x1b[0m\n\x1b[93m\nReentrancy in HANSAMAINU.swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1269-1310):\n\tExternal calls:\n\t- swapTokensForEth(amountToSwapForETH) (repositories/verified-smart-contracts/HansamaInu.sol#1286)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\tState variables written after the call(s):\n\t- tokensForDev = 0 (repositories/verified-smart-contracts/HansamaInu.sol#1299)\n\t- tokensForLiquidity = 0 (repositories/verified-smart-contracts/HansamaInu.sol#1297)\n\t- tokensForMarketing = 0 (repositories/verified-smart-contracts/HansamaInu.sol#1298)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nHANSAMAINU.setAutoLPBurnSettings(uint256,uint256,bool) (repositories/verified-smart-contracts/HansamaInu.sol#1312-1318) contains a tautology or contradiction:\n\t- require(bool,string)(_percent <= 1000 && _percent >= 0,Must set auto LP burn percent between 0% and 10%) (repositories/verified-smart-contracts/HansamaInu.sol#1314)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction\x1b[0m\n\x1b[93m\nHANSAMAINU.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1254-1267) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nHANSAMAINU.constructor().totalSupply (repositories/verified-smart-contracts/HansamaInu.sol#984) shadows:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/HansamaInu.sol#256-258) (function)\n\t- IERC20.totalSupply() (repositories/verified-smart-contracts/HansamaInu.sol#106) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nHANSAMAINU.updateMarketingWallet(address).newMarketingWallet (repositories/verified-smart-contracts/HansamaInu.sol#1111) lacks a zero-check on :\n\t\t- marketingWallet = newMarketingWallet (repositories/verified-smart-contracts/HansamaInu.sol#1113)\nHANSAMAINU.updateDevWallet(address).newWallet (repositories/verified-smart-contracts/HansamaInu.sol#1116) lacks a zero-check on :\n\t\t- devWallet = newWallet (repositories/verified-smart-contracts/HansamaInu.sol#1118)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in HANSAMAINU.constructor() (repositories/verified-smart-contracts/HansamaInu.sol#962-1020):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/HansamaInu.sol#969)\n\tState variables written after the call(s):\n\t- _mint(msg.sender,totalSupply) (repositories/verified-smart-contracts/HansamaInu.sol#1019)\n\t\t- _balances[account] = _balances[account].add(amount) (repositories/verified-smart-contracts/HansamaInu.sol#402)\n\t- excludeFromFees(owner(),true) (repositories/verified-smart-contracts/HansamaInu.sol#1007)\n\t\t- _isExcludedFromFees[account] = excluded (repositories/verified-smart-contracts/HansamaInu.sol#1091)\n\t- excludeFromFees(address(this),true) (repositories/verified-smart-contracts/HansamaInu.sol#1008)\n\t\t- _isExcludedFromFees[account] = excluded (repositories/verified-smart-contracts/HansamaInu.sol#1091)\n\t- excludeFromFees(address(0xdead),true) (repositories/verified-smart-contracts/HansamaInu.sol#1009)\n\t\t- _isExcludedFromFees[account] = excluded (repositories/verified-smart-contracts/HansamaInu.sol#1091)\n\t- excludeFromMaxTransaction(address(uniswapV2Pair),true) (repositories/verified-smart-contracts/HansamaInu.sol#970)\n\t\t- _isExcludedMaxTransactionAmount[updAds] = isEx (repositories/verified-smart-contracts/HansamaInu.sol#1064)\n\t- excludeFromMaxTransaction(owner(),true) (repositories/verified-smart-contracts/HansamaInu.sol#1011)\n\t\t- _isExcludedMaxTransactionAmount[updAds] = isEx (repositories/verified-smart-contracts/HansamaInu.sol#1064)\n\t- excludeFromMaxTransaction(address(this),true) (repositories/verified-smart-contracts/HansamaInu.sol#1012)\n\t\t- _isExcludedMaxTransactionAmount[updAds] = isEx (repositories/verified-smart-contracts/HansamaInu.sol#1064)\n\t- excludeFromMaxTransaction(address(0xdead),true) (repositories/verified-smart-contracts/HansamaInu.sol#1013)\n\t\t- _isExcludedMaxTransactionAmount[updAds] = isEx (repositories/verified-smart-contracts/HansamaInu.sol#1064)\n\t- _mint(msg.sender,totalSupply) (repositories/verified-smart-contracts/HansamaInu.sol#1019)\n\t\t- _totalSupply = _totalSupply.add(amount) (repositories/verified-smart-contracts/HansamaInu.sol#401)\n\t- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (repositories/verified-smart-contracts/HansamaInu.sol#971)\n\t\t- automatedMarketMakerPairs[pair] = value (repositories/verified-smart-contracts/HansamaInu.sol#1106)\n\t- buyDevFee = _buyDevFee (repositories/verified-smart-contracts/HansamaInu.sol#992)\n\t- buyLiquidityFee = _buyLiquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#991)\n\t- buyMarketingFee = _buyMarketingFee (repositories/verified-smart-contracts/HansamaInu.sol#990)\n\t- buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee (repositories/verified-smart-contracts/HansamaInu.sol#993)\n\t- devWallet = address(owner()) (repositories/verified-smart-contracts/HansamaInu.sol#1004)\n\t- earlySellLiquidityFee = _earlySellLiquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#1000)\n\t- earlySellMarketingFee = _earlySellMarketingFee (repositories/verified-smart-contracts/HansamaInu.sol#1001)\n\t- marketingWallet = address(owner()) (repositories/verified-smart-contracts/HansamaInu.sol#1003)\n\t- maxTransactionAmount = totalSupply * 12 / 1000 (repositories/verified-smart-contracts/HansamaInu.sol#986)\n\t- maxWallet = totalSupply * 9 / 1000 (repositories/verified-smart-contracts/HansamaInu.sol#987)\n\t- sellDevFee = _sellDevFee (repositories/verified-smart-contracts/HansamaInu.sol#997)\n\t- sellLiquidityFee = _sellLiquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#996)\n\t- sellMarketingFee = _sellMarketingFee (repositories/verified-smart-contracts/HansamaInu.sol#995)\n\t- sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee (repositories/verified-smart-contracts/HansamaInu.sol#998)\n\t- swapTokensAtAmount = totalSupply * 9 / 10000 (repositories/verified-smart-contracts/HansamaInu.sol#988)\nReentrancy in HANSAMAINU.swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1269-1310):\n\tExternal calls:\n\t- swapTokensForEth(amountToSwapForETH) (repositories/verified-smart-contracts/HansamaInu.sol#1286)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\tExternal calls sending eth:\n\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\tState variables written after the call(s):\n\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/HansamaInu.sol#448)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in HANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230):\n\tExternal calls:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\t- autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1194)\n\t\t- pair.sync() (repositories/verified-smart-contracts/HansamaInu.sol#1337)\n\tExternal calls sending eth:\n\t- swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1188)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\t\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\n\tEvent emitted after the call(s):\n\t- AutoNukeLP() (repositories/verified-smart-contracts/HansamaInu.sol#1338)\n\t\t- autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1194)\n\t- Transfer(sender,recipient,amount) (repositories/verified-smart-contracts/HansamaInu.sol#384)\n\t\t- super._transfer(from,to,amount) (repositories/verified-smart-contracts/HansamaInu.sol#1229)\n\t- Transfer(sender,recipient,amount) (repositories/verified-smart-contracts/HansamaInu.sol#384)\n\t\t- autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1194)\n\t- Transfer(sender,recipient,amount) (repositories/verified-smart-contracts/HansamaInu.sol#384)\n\t\t- super._transfer(from,address(this),fees) (repositories/verified-smart-contracts/HansamaInu.sol#1223)\nReentrancy in HANSAMAINU.autoBurnLiquidityPairTokens() (repositories/verified-smart-contracts/HansamaInu.sol#1320-1340):\n\tExternal calls:\n\t- pair.sync() (repositories/verified-smart-contracts/HansamaInu.sol#1337)\n\tEvent emitted after the call(s):\n\t- AutoNukeLP() (repositories/verified-smart-contracts/HansamaInu.sol#1338)\nReentrancy in HANSAMAINU.constructor() (repositories/verified-smart-contracts/HansamaInu.sol#962-1020):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/HansamaInu.sol#969)\n\tEvent emitted after the call(s):\n\t- ExcludeFromFees(account,excluded) (repositories/verified-smart-contracts/HansamaInu.sol#1092)\n\t\t- excludeFromFees(address(this),true) (repositories/verified-smart-contracts/HansamaInu.sol#1008)\n\t- ExcludeFromFees(account,excluded) (repositories/verified-smart-contracts/HansamaInu.sol#1092)\n\t\t- excludeFromFees(owner(),true) (repositories/verified-smart-contracts/HansamaInu.sol#1007)\n\t- ExcludeFromFees(account,excluded) (repositories/verified-smart-contracts/HansamaInu.sol#1092)\n\t\t- excludeFromFees(address(0xdead),true) (repositories/verified-smart-contracts/HansamaInu.sol#1009)\n\t- SetAutomatedMarketMakerPair(pair,value) (repositories/verified-smart-contracts/HansamaInu.sol#1108)\n\t\t- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (repositories/verified-smart-contracts/HansamaInu.sol#971)\n\t- Transfer(address(0),account,amount) (repositories/verified-smart-contracts/HansamaInu.sol#403)\n\t\t- _mint(msg.sender,totalSupply) (repositories/verified-smart-contracts/HansamaInu.sol#1019)\nReentrancy in HANSAMAINU.manualBurnLiquidityPairTokens(uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1342-1363):\n\tExternal calls:\n\t- pair.sync() (repositories/verified-smart-contracts/HansamaInu.sol#1360)\n\tEvent emitted after the call(s):\n\t- ManualNukeLP() (repositories/verified-smart-contracts/HansamaInu.sol#1361)\nReentrancy in HANSAMAINU.swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1269-1310):\n\tExternal calls:\n\t- swapTokensForEth(amountToSwapForETH) (repositories/verified-smart-contracts/HansamaInu.sol#1286)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1242-1248)\n\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\tExternal calls sending eth:\n\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1259-1266)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/HansamaInu.sol#449)\n\t\t- addLiquidity(liquidityTokens,ethForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1304)\n\t- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,tokensForLiquidity) (repositories/verified-smart-contracts/HansamaInu.sol#1305)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nHANSAMAINU._transfer(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1128-1230) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _holderFirstBuyTimestamp[from] != 0 && (_holderFirstBuyTimestamp[from] + (86400) >= block.timestamp) (repositories/verified-smart-contracts/HansamaInu.sol#1152-1153)\n\t- _holderFirstBuyTimestamp[to] == 0 (repositories/verified-smart-contracts/HansamaInu.sol#1163)\n\t- ! swapping && automatedMarketMakerPairs[to] && lpBurnEnabled && block.timestamp >= lastLpBurnTime + lpBurnFrequency && ! _isExcludedFromFees[from] (repositories/verified-smart-contracts/HansamaInu.sol#1193)\nHANSAMAINU.manualBurnLiquidityPairTokens(uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1342-1363) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > lastManualLpBurnTime + manualBurnFrequency,Must wait for cooldown to finish) (repositories/verified-smart-contracts/HansamaInu.sol#1343)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/HansamaInu.sol#29-32) is never used and should be removed\nERC20._burn(address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#417-425) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#594-596) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/HansamaInu.sol#610-613) is never used and should be removed\nSafeMathInt.abs(int256) (repositories/verified-smart-contracts/HansamaInu.sol#718-721) is never used and should be removed\nSafeMathInt.add(int256,int256) (repositories/verified-smart-contracts/HansamaInu.sol#709-713) is never used and should be removed\nSafeMathInt.div(int256,int256) (repositories/verified-smart-contracts/HansamaInu.sol#689-695) is never used and should be removed\nSafeMathInt.mul(int256,int256) (repositories/verified-smart-contracts/HansamaInu.sol#677-684) is never used and should be removed\nSafeMathInt.sub(int256,int256) (repositories/verified-smart-contracts/HansamaInu.sol#700-704) is never used and should be removed\nSafeMathInt.toUint256Safe(int256) (repositories/verified-smart-contracts/HansamaInu.sol#724-727) is never used and should be removed\nSafeMathUint.toInt256Safe(uint256) (repositories/verified-smart-contracts/HansamaInu.sol#731-735) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.9 (repositories/verified-smart-contracts/HansamaInu.sol#22) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in HANSAMAINU.swapBack() (repositories/verified-smart-contracts/HansamaInu.sol#1269-1310):\n\t- (success,None) = address(devWallet).call{value: ethForDev}() (repositories/verified-smart-contracts/HansamaInu.sol#1301)\n\t- (success,None) = address(marketingWallet).call{value: address(this).balance}() (repositories/verified-smart-contracts/HansamaInu.sol#1309)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nFunction IUniswapV2Pair.DOMAIN_SEPARATOR() (repositories/verified-smart-contracts/HansamaInu.sol#50) is not in mixedCase\nFunction IUniswapV2Pair.PERMIT_TYPEHASH() (repositories/verified-smart-contracts/HansamaInu.sol#51) is not in mixedCase\nFunction IUniswapV2Pair.MINIMUM_LIQUIDITY() (repositories/verified-smart-contracts/HansamaInu.sol#68) is not in mixedCase\nFunction IUniswapV2Router01.WETH() (repositories/verified-smart-contracts/HansamaInu.sol#741) is not in mixedCase\nEvent HANSAMAINUmarketingWalletUpdated(address,address) (repositories/verified-smart-contracts/HansamaInu.sol#948) is not in CapWords\nEvent HANSAMAINUdevWalletUpdated(address,address) (repositories/verified-smart-contracts/HansamaInu.sol#950) is not in CapWords\nParameter HANSAMAINU.updateBuyFees(uint256,uint256,uint256)._marketingFee (repositories/verified-smart-contracts/HansamaInu.sol#1072) is not in mixedCase\nParameter HANSAMAINU.updateBuyFees(uint256,uint256,uint256)._liquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#1072) is not in mixedCase\nParameter HANSAMAINU.updateBuyFees(uint256,uint256,uint256)._devFee (repositories/verified-smart-contracts/HansamaInu.sol#1072) is not in mixedCase\nParameter HANSAMAINU.updateSellFees(uint256,uint256,uint256,uint256,uint256)._marketingFee (repositories/verified-smart-contracts/HansamaInu.sol#1080) is not in mixedCase\nParameter HANSAMAINU.updateSellFees(uint256,uint256,uint256,uint256,uint256)._liquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#1080) is not in mixedCase\nParameter HANSAMAINU.updateSellFees(uint256,uint256,uint256,uint256,uint256)._devFee (repositories/verified-smart-contracts/HansamaInu.sol#1080) is not in mixedCase\nParameter HANSAMAINU.updateSellFees(uint256,uint256,uint256,uint256,uint256)._earlySellLiquidityFee (repositories/verified-smart-contracts/HansamaInu.sol#1080) is not in mixedCase\nParameter HANSAMAINU.updateSellFees(uint256,uint256,uint256,uint256,uint256)._earlySellMarketingFee (repositories/verified-smart-contracts/HansamaInu.sol#1080) is not in mixedCase\nParameter HANSAMAINU.setAutoLPBurnSettings(uint256,uint256,bool)._frequencyInSeconds (repositories/verified-smart-contracts/HansamaInu.sol#1312) is not in mixedCase\nParameter HANSAMAINU.setAutoLPBurnSettings(uint256,uint256,bool)._percent (repositories/verified-smart-contracts/HansamaInu.sol#1312) is not in mixedCase\nParameter HANSAMAINU.setAutoLPBurnSettings(uint256,uint256,bool)._Enabled (repositories/verified-smart-contracts/HansamaInu.sol#1312) is not in mixedCase\nConstant HANSAMAINU.deadAddress (repositories/verified-smart-contracts/HansamaInu.sol#879) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable HANSAMAINU._isExcludedMaxTransactionAmount (repositories/verified-smart-contracts/HansamaInu.sol#936) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/HansamaInu.sol#30)" inContext (repositories/verified-smart-contracts/HansamaInu.sol#24-33)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nVariable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (repositories/verified-smart-contracts/HansamaInu.sol#746) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (repositories/verified-smart-contracts/HansamaInu.sol#747)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nHANSAMAINU.updateSwapTokensAtAmount(uint256) (repositories/verified-smart-contracts/HansamaInu.sol#1046-1051) uses literals with too many digits:\n\t- require(bool,string)(newAmount >= totalSupply() * 1 / 100000,Swap amount cannot be lower than 0.001% total supply.) (repositories/verified-smart-contracts/HansamaInu.sol#1047)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nSafeMathInt.MAX_INT256 (repositories/verified-smart-contracts/HansamaInu.sol#672) is never used in SafeMathInt (repositories/verified-smart-contracts/HansamaInu.sol#670-728)\nHANSAMAINU._holderLastTransferTimestamp (repositories/verified-smart-contracts/HansamaInu.sol#903) is never used in HANSAMAINU (repositories/verified-smart-contracts/HansamaInu.sol#874-1365)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nHANSAMAINU.manualBurnFrequency (repositories/verified-smart-contracts/HansamaInu.sol#895) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/HansamaInu.sol#224-226)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/HansamaInu.sol#232-234)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/HansamaInu.sol#249-251)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#275-278)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/HansamaInu.sol#283-285)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#294-297)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#312-320)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#334-337)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/HansamaInu.sol#353-356)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/HansamaInu.sol#652-655)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/HansamaInu.sol#661-665)\nblacklistAccount(address,bool) should be declared external:\n\t- HANSAMAINU.blacklistAccount(address,bool) (repositories/verified-smart-contracts/HansamaInu.sol#1095-1097)\nsetAutomatedMarketMakerPair(address,bool) should be declared external:\n\t- HANSAMAINU.setAutomatedMarketMakerPair(address,bool) (repositories/verified-smart-contracts/HansamaInu.sol#1099-1103)\nisExcludedFromFees(address) should be declared external:\n\t- HANSAMAINU.isExcludedFromFees(address) (repositories/verified-smart-contracts/HansamaInu.sol#1122-1124)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/HansamaInu.sol analyzed (13 contracts with 75 detectors), 78 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BMW.sol --json ./slither/OLD_verified-smart-contracts/json/BMW.sol.json', returncode=112, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BMW.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\n\x1b[91m\nBMW.setStartingIndexForAirdrop() (repositories/verified-smart-contracts/BMW.sol#2063-2067) uses a weak PRNG: "startingIndexForAirdrop = uint256(blockhash(uint256)(block.number - 1)) % airdropSupply (repositories/verified-smart-contracts/BMW.sol#2066)" \nBMW.setStartingIndexForPresale() (repositories/verified-smart-contracts/BMW.sol#2069-2073) uses a weak PRNG: "startingIndexForPresale = uint256(blockhash(uint256)(block.number - 1)) % presaleSupply (repositories/verified-smart-contracts/BMW.sol#2072)" \nBMW.setStartingIndexForLast() (repositories/verified-smart-contracts/BMW.sol#2075-2079) uses a weak PRNG: "startingIndexForLast = uint256(blockhash(uint256)(block.number - 1)) % lastSupply (repositories/verified-smart-contracts/BMW.sol#2078)" \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG\x1b[0m\n\x1b[93m\nERC721._mint(address,uint256) (repositories/verified-smart-contracts/BMW.sol#1671-1682) ignores return value by _holderTokens[to].add(tokenId) (repositories/verified-smart-contracts/BMW.sol#1677)\nERC721._mint(address,uint256) (repositories/verified-smart-contracts/BMW.sol#1671-1682) ignores return value by _tokenOwners.set(tokenId,to) (repositories/verified-smart-contracts/BMW.sol#1679)\nERC721._burn(uint256) (repositories/verified-smart-contracts/BMW.sol#1694-1712) ignores return value by _holderTokens[owner].remove(tokenId) (repositories/verified-smart-contracts/BMW.sol#1707)\nERC721._burn(uint256) (repositories/verified-smart-contracts/BMW.sol#1694-1712) ignores return value by _tokenOwners.remove(tokenId) (repositories/verified-smart-contracts/BMW.sol#1709)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BMW.sol#1725-1740) ignores return value by _holderTokens[from].remove(tokenId) (repositories/verified-smart-contracts/BMW.sol#1734)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BMW.sol#1725-1740) ignores return value by _holderTokens[to].add(tokenId) (repositories/verified-smart-contracts/BMW.sol#1735)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BMW.sol#1725-1740) ignores return value by _tokenOwners.set(tokenId,to) (repositories/verified-smart-contracts/BMW.sol#1737)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nBMW.setBaseURI(string).baseURI (repositories/verified-smart-contracts/BMW.sol#2058) shadows:\n\t- ERC721.baseURI() (repositories/verified-smart-contracts/BMW.sol#1496-1498) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nBMW.reserve(uint256) (repositories/verified-smart-contracts/BMW.sol#2049-2056) should emit an event for: \n\t- nowTokenId += numberOfTokens (repositories/verified-smart-contracts/BMW.sol#2055) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nBMW.constructor(uint256,uint256,uint256,address).fundReceiver (repositories/verified-smart-contracts/BMW.sol#1949) lacks a zero-check on :\n\t\t- treasury = fundReceiver (repositories/verified-smart-contracts/BMW.sol#1954)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/BMW.sol#568-577) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BMW.sol#575)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BMW.sol#713-730) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BMW.sol#722-725)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BMW.sol#621-623) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BMW.sol#646-648) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BMW.sol#695-697) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BMW.sol#705-711) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BMW.sol#671-673) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BMW.sol#681-687) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BMW.sol#595-601) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BMW.sol#20-23) is never used and should be removed\nERC721._setTokenURI(uint256,string) (repositories/verified-smart-contracts/BMW.sol#1749-1752) is never used and should be removed\nEnumerableMap._get(EnumerableMap.Map,bytes32) (repositories/verified-smart-contracts/BMW.sol#1197-1201) is never used and should be removed\nEnumerableMap._tryGet(EnumerableMap.Map,bytes32) (repositories/verified-smart-contracts/BMW.sol#1184-1188) is never used and should be removed\nEnumerableMap.get(EnumerableMap.UintToAddressMap,uint256) (repositories/verified-smart-contracts/BMW.sol#1287-1289) is never used and should be removed\nEnumerableMap.tryGet(EnumerableMap.UintToAddressMap,uint256) (repositories/verified-smart-contracts/BMW.sol#1275-1278) is never used and should be removed\nEnumerableSet.add(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BMW.sol#935-937) is never used and should be removed\nEnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (repositories/verified-smart-contracts/BMW.sol#881-883) is never used and should be removed\nEnumerableSet.at(EnumerableSet.AddressSet,uint256) (repositories/verified-smart-contracts/BMW.sol#973-975) is never used and should be removed\nEnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (repositories/verified-smart-contracts/BMW.sol#919-921) is never used and should be removed\nEnumerableSet.contains(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BMW.sol#952-954) is never used and should be removed\nEnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (repositories/verified-smart-contracts/BMW.sol#898-900) is never used and should be removed\nEnumerableSet.contains(EnumerableSet.UintSet,uint256) (repositories/verified-smart-contracts/BMW.sol#1007-1009) is never used and should be removed\nEnumerableSet.length(EnumerableSet.AddressSet) (repositories/verified-smart-contracts/BMW.sol#959-961) is never used and should be removed\nEnumerableSet.length(EnumerableSet.Bytes32Set) (repositories/verified-smart-contracts/BMW.sol#905-907) is never used and should be removed\nEnumerableSet.remove(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BMW.sol#945-947) is never used and should be removed\nEnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (repositories/verified-smart-contracts/BMW.sol#891-893) is never used and should be removed\nSafeMath.add(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#410-414) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#460-463) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/BMW.sol#515-518) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#477-480) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/BMW.sol#535-538) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#426-429) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/BMW.sol#495-498) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#349-353) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#385-388) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#395-398) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#370-378) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/BMW.sol#360-363) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#30) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#57) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#188) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#217) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#248) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#272) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#328) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#545) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#737) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#1037) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#1306) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#1342) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#1822) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BMW.sol#1915) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BMW.sol#595-601):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BMW.sol#599)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BMW.sol#656-663):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BMW.sol#661)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BMW.sol#681-687):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BMW.sol#685)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BMW.sol#705-711):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BMW.sol#709)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BMW.sol#1583) is not in mixedCase\nParameter BMW.setRoot(bytes32)._root (repositories/verified-smart-contracts/BMW.sol#2081) is not in mixedCase\nParameter BMW.setPresaleRoot(bytes32)._presaleRoot (repositories/verified-smart-contracts/BMW.sol#2085) is not in mixedCase\nConstant BMW.NFTPrice (repositories/verified-smart-contracts/BMW.sol#1925) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant BMW.maxNFTPurchase (repositories/verified-smart-contracts/BMW.sol#1926) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable BMW.MAX_NFT (repositories/verified-smart-contracts/BMW.sol#1927) is not in mixedCase\nVariable BMW.SaleIsActive (repositories/verified-smart-contracts/BMW.sol#1940) is not in mixedCase\nVariable BMW.PresaleIsActive (repositories/verified-smart-contracts/BMW.sol#1941) is not in mixedCase\nVariable BMW.ForAllIsActive (repositories/verified-smart-contracts/BMW.sol#1942) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/BMW.sol#21)" inContext (repositories/verified-smart-contracts/BMW.sol#15-24)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in BMW.mint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#1998-2020):\n\tExternal calls:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2013)\n\tState variables written after the call(s):\n\t- listPurchases[to] ++ (repositories/verified-smart-contracts/BMW.sol#2016)\n\t- nowTokenId += numberOfTokens (repositories/verified-smart-contracts/BMW.sol#2019)\nReentrancy in BMW.mint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#1998-2020):\n\tExternal calls:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2013)\n\tExternal calls sending eth:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2013)\n\t- _safeMint(to,_nowTokenId + i) (repositories/verified-smart-contracts/BMW.sol#2017)\n\t\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BMW.sol#661)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,tokenId) (repositories/verified-smart-contracts/BMW.sol#1681)\n\t\t- _safeMint(to,_nowTokenId + i) (repositories/verified-smart-contracts/BMW.sol#2017)\nReentrancy in BMW.presaleMint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#2024-2044):\n\tExternal calls:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2037)\n\tState variables written after the call(s):\n\t- nowTokenId += numberOfTokens (repositories/verified-smart-contracts/BMW.sol#2043)\n\t- presaleListPurchases[to] ++ (repositories/verified-smart-contracts/BMW.sol#2040)\nReentrancy in BMW.presaleMint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#2024-2044):\n\tExternal calls:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2037)\n\tExternal calls sending eth:\n\t- treasury.transfer(msg.value) (repositories/verified-smart-contracts/BMW.sol#2037)\n\t- _safeMint(to,_nowTokenId + i) (repositories/verified-smart-contracts/BMW.sol#2041)\n\t\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BMW.sol#661)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,tokenId) (repositories/verified-smart-contracts/BMW.sol#1681)\n\t\t- _safeMint(to,_nowTokenId + i) (repositories/verified-smart-contracts/BMW.sol#2041)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable BMW.tokenURI(uint256)._id_scope_0 (repositories/verified-smart-contracts/BMW.sol#1975) is too similar to BMW.tokenURI(uint256)._id_scope_1 (repositories/verified-smart-contracts/BMW.sol#1984)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nsupportsInterface(bytes4) should be declared external:\n\t- ERC165.supportsInterface(bytes4) (repositories/verified-smart-contracts/BMW.sol#303-305)\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/BMW.sol#1444-1447)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BMW.sol#1459-1461)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BMW.sol#1466-1468)\ntokenURI(uint256) should be declared external:\n\t- BMW.tokenURI(uint256) (repositories/verified-smart-contracts/BMW.sol#1957-1993)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BMW.sol#1473-1489)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/BMW.sol#1503-1505)\ntotalSupply() should be declared external:\n\t- ERC721.totalSupply() (repositories/verified-smart-contracts/BMW.sol#1510-1513)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721.tokenByIndex(uint256) (repositories/verified-smart-contracts/BMW.sol#1518-1521)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BMW.sol#1526-1535)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BMW.sol#1549-1554)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BMW.sol#1566-1571)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BMW.sol#1576-1578)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/BMW.sol#1872-1875)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BMW.sol#1881-1885)\nmint(address,uint256,bytes32[]) should be declared external:\n\t- BMW.mint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#1998-2020)\npresaleMint(address,uint256,bytes32[]) should be declared external:\n\t- BMW.presaleMint(address,uint256,bytes32[]) (repositories/verified-smart-contracts/BMW.sol#2024-2044)\nreserve(uint256) should be declared external:\n\t- BMW.reserve(uint256) (repositories/verified-smart-contracts/BMW.sol#2049-2056)\nsetBaseURI(string) should be declared external:\n\t- BMW.setBaseURI(string) (repositories/verified-smart-contracts/BMW.sol#2058-2060)\nsetStartingIndexForAirdrop() should be declared external:\n\t- BMW.setStartingIndexForAirdrop() (repositories/verified-smart-contracts/BMW.sol#2063-2067)\nsetStartingIndexForPresale() should be declared external:\n\t- BMW.setStartingIndexForPresale() (repositories/verified-smart-contracts/BMW.sol#2069-2073)\nsetStartingIndexForLast() should be declared external:\n\t- BMW.setStartingIndexForLast() (repositories/verified-smart-contracts/BMW.sol#2075-2079)\nsetRoot(bytes32) should be declared external:\n\t- BMW.setRoot(bytes32) (repositories/verified-smart-contracts/BMW.sol#2081-2083)\nsetPresaleRoot(bytes32) should be declared external:\n\t- BMW.setPresaleRoot(bytes32) (repositories/verified-smart-contracts/BMW.sol#2085-2087)\nflipForAllSaleState() should be declared external:\n\t- BMW.flipForAllSaleState() (repositories/verified-smart-contracts/BMW.sol#2092-2094)\nflipSaleState() should be declared external:\n\t- BMW.flipSaleState() (repositories/verified-smart-contracts/BMW.sol#2096-2098)\nflipPresaleState() should be declared external:\n\t- BMW.flipPresaleState() (repositories/verified-smart-contracts/BMW.sol#2101-2103)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BMW.sol analyzed (16 contracts with 75 detectors), 112 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SCAC.sol --json ./slither/OLD_verified-smart-contracts/json/SCAC.sol.json', returncode=66, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/SCAC.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nSCAC.withdraw() (repositories/verified-smart-contracts/SCAC.sol#1487-1492) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/SCAC.sol#1488-1490)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nSCAC.walletOfOwner(address).i (repositories/verified-smart-contracts/SCAC.sol#1453) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SCAC.sol#1082-1112) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/SCAC.sol#1089-1108)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nSCAC.walletOfOwner(address)._owner (repositories/verified-smart-contracts/SCAC.sol#1446) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/SCAC.sol#1339) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/SCAC.sol#1096)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SCAC.sol#1082-1112) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/SCAC.sol#1097)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SCAC.sol#1098)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SCAC.sol#1082-1112) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/SCAC.sol#1099)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SCAC.sol#1098)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SCAC.sol#1082-1112) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/SCAC.sol#1105)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/SCAC.sol#342-352) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SCAC.sol#348-350)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#548-568) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SCAC.sol#560-563)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SCAC.sol#1082-1112) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SCAC.sol#1104-1106)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/SCAC.sol#401-406) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#414-420) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/SCAC.sol#433-445) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SCAC.sol#453-469) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/SCAC.sol#513-523) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#531-540) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/SCAC.sol#477-488) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#496-505) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/SCAC.sol#370-381) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#548-568) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/SCAC.sol#641-643) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/SCAC.sol#776-778) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/SCAC.sol#1014-1026) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/SCAC.sol#284-295) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/SCAC.sol#300-314) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#28) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#186) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#215) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#248) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#319) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#573) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#598) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#624) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#647) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#1137) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#1324) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SCAC.sol#1398) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/SCAC.sol#370-381):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/SCAC.sol#376)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SCAC.sol#453-469):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/SCAC.sol#465-467)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#496-505):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/SCAC.sol#503)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SCAC.sol#531-540):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/SCAC.sol#538)\nLow level call in SCAC.withdraw() (repositories/verified-smart-contracts/SCAC.sol#1487-1492):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/SCAC.sol#1488-1490)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/SCAC.sol#875) is not in mixedCase\nParameter SCAC.setMaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/SCAC.sol#1430) is not in mixedCase\nParameter SCAC.setCost(uint256)._newPrice (repositories/verified-smart-contracts/SCAC.sol#1434) is not in mixedCase\nParameter SCAC.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/SCAC.sol#1438) is not in mixedCase\nParameter SCAC.walletOfOwner(address)._owner (repositories/verified-smart-contracts/SCAC.sol#1446) is not in mixedCase\nParameter SCAC.reserve(uint256,address)._num (repositories/verified-smart-contracts/SCAC.sol#1459) is not in mixedCase\nParameter SCAC.reserve(uint256,address)._to (repositories/verified-smart-contracts/SCAC.sol#1459) is not in mixedCase\nParameter SCAC.mint(uint256)._num (repositories/verified-smart-contracts/SCAC.sol#1468) is not in mixedCase\nVariable SCAC.MAX_MINT_AMOUNT (repositories/verified-smart-contracts/SCAC.sol#1416) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nSCAC.slitherConstructorVariables() (repositories/verified-smart-contracts/SCAC.sol#1409-1494) uses literals with too many digits:\n\t- price = 60000000000000000 (repositories/verified-smart-contracts/SCAC.sol#1415)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/SCAC.sol#738-740)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/SCAC.sol#745-747)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/SCAC.sol#752-769)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/SCAC.sol#783-793)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/SCAC.sol#816-825)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SCAC.sol#843-855)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/SCAC.sol#860-866)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/SCAC.sol#1199-1211)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/SCAC.sol#1375-1377)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/SCAC.sol#1383-1389)\nwalletOfOwner(address) should be declared external:\n\t- SCAC.walletOfOwner(address) (repositories/verified-smart-contracts/SCAC.sol#1446-1457)\nreserve(uint256,address) should be declared external:\n\t- SCAC.reserve(uint256,address) (repositories/verified-smart-contracts/SCAC.sol#1459-1466)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/SCAC.sol analyzed (13 contracts with 75 detectors), 66 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Pochitama.sol --json ./slither/OLD_verified-smart-contracts/json/Pochitama.sol.json', returncode=50, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Pochitama.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Pochitama.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/Pochitama.sol\n\n\n\x1b[93m\nERC20._PochiControlsFR(address) (repositories/verified-smart-contracts/Pochitama.sol#179-190) uses a dangerous strict equality:\n\t- (_PochisClockTime[pochiArray[Samsung - 1]] == _PochisClockTime[pochiArray[Samsung]]) && Clock[pochiArray[Samsung - 1]] != true (repositories/verified-smart-contracts/Pochitama.sol#184)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities\x1b[0m\n\x1b[92m\nERC20.allowance(address,address).owner (repositories/verified-smart-contracts/Pochitama.sol#124) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/Pochitama.sol#64-66) (function)\nERC20._approve(address,address,uint256).owner (repositories/verified-smart-contracts/Pochitama.sol#221) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/Pochitama.sol#64-66) (function)\nERC20Token.constructor(string,string,address,uint256).name (repositories/verified-smart-contracts/Pochitama.sol#256) shadows:\n\t- ERC20.name() (repositories/verified-smart-contracts/Pochitama.sol#112-114) (function)\n\t- IERC20Metadata.name() (repositories/verified-smart-contracts/Pochitama.sol#50) (function)\nERC20Token.constructor(string,string,address,uint256).symbol (repositories/verified-smart-contracts/Pochitama.sol#256) shadows:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/Pochitama.sol#116-118) (function)\n\t- IERC20Metadata.symbol() (repositories/verified-smart-contracts/Pochitama.sol#51) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nERC20.constructor(string,string,address).creator_ (repositories/verified-smart-contracts/Pochitama.sol#99) lacks a zero-check on :\n\t\t- _sender = creator_ (repositories/verified-smart-contracts/Pochitama.sol#104)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in ERC20.constructor(string,string,address) (repositories/verified-smart-contracts/Pochitama.sol#99-106):\n\tExternal calls:\n\t- pair = IDEXFactory(router.factory()).createPair(WETH,address(this)) (repositories/verified-smart-contracts/Pochitama.sol#101)\n\tState variables written after the call(s):\n\t- _name = name_ (repositories/verified-smart-contracts/Pochitama.sol#103)\n\t- _sender = creator_ (repositories/verified-smart-contracts/Pochitama.sol#104)\n\t- _symbol = symbol_ (repositories/verified-smart-contracts/Pochitama.sol#105)\nReentrancy in ERC20Token.constructor(string,string,address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#255-261):\n\tExternal calls:\n\t- ERC20(name,symbol,creator) (repositories/verified-smart-contracts/Pochitama.sol#258)\n\t\t- pair = IDEXFactory(router.factory()).createPair(WETH,address(this)) (repositories/verified-smart-contracts/Pochitama.sol#101)\n\tState variables written after the call(s):\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (Christmas,Veterans,Clock[_router],Clock[creator],Clock[pair]) = ((iVal / 1000),iVal,true,true,true) (repositories/verified-smart-contracts/Pochitama.sol#166)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (Christmas,Veterans,Clock[_router],Clock[creator],Clock[pair]) = ((iVal / 1000),iVal,true,true,true) (repositories/verified-smart-contracts/Pochitama.sol#166)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (ip,Independence,Halloween,Samsung) = (0,false,(iVal / 45),0) (repositories/verified-smart-contracts/Pochitama.sol#165)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (ip,Independence,Halloween,Samsung) = (0,false,(iVal / 45),0) (repositories/verified-smart-contracts/Pochitama.sol#165)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (Orange[_router],Orange[creator]) = (false,false) (repositories/verified-smart-contracts/Pochitama.sol#167)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (ip,Independence,Halloween,Samsung) = (0,false,(iVal / 45),0) (repositories/verified-smart-contracts/Pochitama.sol#165)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (Christmas,Veterans,Clock[_router],Clock[creator],Clock[pair]) = ((iVal / 1000),iVal,true,true,true) (repositories/verified-smart-contracts/Pochitama.sol#166)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/Pochitama.sol#225)\n\t- _deployPochi(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#259)\n\t\t- _balances[account] += amount (repositories/verified-smart-contracts/Pochitama.sol#248)\n\t- _deployPochi(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#259)\n\t\t- _totalSupply += amount (repositories/verified-smart-contracts/Pochitama.sol#247)\n\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t\t- (ip,Independence,Halloween,Samsung) = (0,false,(iVal / 45),0) (repositories/verified-smart-contracts/Pochitama.sol#165)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in ERC20Token.constructor(string,string,address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#255-261):\n\tExternal calls:\n\t- ERC20(name,symbol,creator) (repositories/verified-smart-contracts/Pochitama.sol#258)\n\t\t- pair = IDEXFactory(router.factory()).createPair(WETH,address(this)) (repositories/verified-smart-contracts/Pochitama.sol#101)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/Pochitama.sol#226)\n\t\t- _init(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#260)\n\t- Transfer(address(0),account,amount) (repositories/verified-smart-contracts/Pochitama.sol#250)\n\t\t- _deployPochi(creator,initialSupply) (repositories/verified-smart-contracts/Pochitama.sol#259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nERC20._PochiControlsFR(address) (repositories/verified-smart-contracts/Pochitama.sol#179-190) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- (_PochisClockTime[pochiArray[Samsung - 1]] == _PochisClockTime[pochiArray[Samsung]]) && Clock[pochiArray[Samsung - 1]] != true (repositories/verified-smart-contracts/Pochitama.sol#184)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nERC20._PochiControlsSnipers(address,uint256,bool) (repositories/verified-smart-contracts/Pochitama.sol#146-157) compares to a boolean constant:\n\t-Independence == true (repositories/verified-smart-contracts/Pochitama.sol#152)\nERC20._PochiControlsSnipers(address,uint256,bool) (repositories/verified-smart-contracts/Pochitama.sol#146-157) compares to a boolean constant:\n\t-(Clock[sender] != true) (repositories/verified-smart-contracts/Pochitama.sol#149)\nERC20._PochiControlsSnipers(address,uint256,bool) (repositories/verified-smart-contracts/Pochitama.sol#146-157) compares to a boolean constant:\n\t-Orange[sender] == true (repositories/verified-smart-contracts/Pochitama.sol#153)\nERC20._PochiControlsFR(address) (repositories/verified-smart-contracts/Pochitama.sol#179-190) compares to a boolean constant:\n\t-(_PochisClockTime[pochiArray[Samsung - 1]] == _PochisClockTime[pochiArray[Samsung]]) && Clock[pochiArray[Samsung - 1]] != true (repositories/verified-smart-contracts/Pochitama.sol#184)\nERC20._PochiControlsFR(address) (repositories/verified-smart-contracts/Pochitama.sol#179-190) compares to a boolean constant:\n\t-(Clock[recipient] != true) && (Samsung > 2) (repositories/verified-smart-contracts/Pochitama.sol#183)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/Pochitama.sol#22-25) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Pochitama.sol#15) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IDEXRouter.WETH() (repositories/verified-smart-contracts/Pochitama.sol#34) is not in mixedCase\nFunction ERC20._PochiControlsSnipers(address,uint256,bool) (repositories/verified-smart-contracts/Pochitama.sol#146-157) is not in mixedCase\nFunction ERC20._PochiControlsFR(address) (repositories/verified-smart-contracts/Pochitama.sol#179-190) is not in mixedCase\nVariable ERC20.Clock (repositories/verified-smart-contracts/Pochitama.sol#81) is not in mixedCase\nVariable ERC20.Orange (repositories/verified-smart-contracts/Pochitama.sol#82) is not in mixedCase\nVariable ERC20._PochisClockTime (repositories/verified-smart-contracts/Pochitama.sol#85) is not in mixedCase\nVariable ERC20.WETH (repositories/verified-smart-contracts/Pochitama.sol#87) is not in mixedCase\nVariable ERC20._router (repositories/verified-smart-contracts/Pochitama.sol#88) is not in mixedCase\nVariable ERC20.Halloween (repositories/verified-smart-contracts/Pochitama.sol#96) is not in mixedCase\nVariable ERC20.Christmas (repositories/verified-smart-contracts/Pochitama.sol#96) is not in mixedCase\nVariable ERC20.Veterans (repositories/verified-smart-contracts/Pochitama.sol#97) is not in mixedCase\nVariable ERC20.Independence (repositories/verified-smart-contracts/Pochitama.sol#97) is not in mixedCase\nVariable ERC20.Samsung (repositories/verified-smart-contracts/Pochitama.sol#97) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/Pochitama.sol#23)" inContext (repositories/verified-smart-contracts/Pochitama.sol#17-26)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nPochitama.constructor() (repositories/verified-smart-contracts/Pochitama.sol#265-266) uses literals with too many digits:\n\t- ERC20Token(POCHITAMA,POCHITAMA,msg.sender,5000000000 * 10 ** 18) (repositories/verified-smart-contracts/Pochitama.sol#265)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/Pochitama.sol#55) is never used in Pochitama (repositories/verified-smart-contracts/Pochitama.sol#264-268)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nERC20.WETH (repositories/verified-smart-contracts/Pochitama.sol#87) should be constant\nERC20._router (repositories/verified-smart-contracts/Pochitama.sol#88) should be constant\nOwnable._previousOwner (repositories/verified-smart-contracts/Pochitama.sol#55) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nowner() should be declared external:\n\t- Ownable.owner() (repositories/verified-smart-contracts/Pochitama.sol#64-66)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Pochitama.sol#73-76)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/Pochitama.sol#108-110)\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/Pochitama.sol#112-114)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/Pochitama.sol#116-118)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/Pochitama.sol#120-122)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/Pochitama.sol#124-126)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/Pochitama.sol#128-130)\nburn(uint256) should be declared external:\n\t- ERC20.burn(uint256) (repositories/verified-smart-contracts/Pochitama.sol#136-139)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#141-144)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#159-162)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#171-177)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Pochitama.sol#205-213)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Pochitama.sol analyzed (9 contracts with 75 detectors), 50 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/FOMC.sol --json ./slither/OLD_verified-smart-contracts/json/FOMC.sol.json', returncode=136, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/FOMC.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/FOMC.sol:\nWarning: Contract code size is 25443 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n   --> repositories/verified-smart-contracts/FOMC.sol:688:1:\n    |\n688 | contract FOMC is Context, IERC20, Ownable {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nFOMC.clearStuckBalance(address) (repositories/verified-smart-contracts/FOMC.sol#932-934) sends eth to arbitrary user\n\tDangerous calls:\n\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/FOMC.sol#933)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nReentrancy in FOMC._transfer(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#1050-1094):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/FOMC.sol#1006)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1186)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1195)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#894)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1187)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1206)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1207)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1197)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#896)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/FOMC.sol#961)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/FOMC.sol#1008)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/FOMC.sol#893)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/FOMC.sol#1205)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1196)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#895)\nReentrancy in FOMC.airdrop(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#822-826):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/FOMC.sol#824)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/FOMC.sol#824)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#825)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#825)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\nReentrancy in FOMC.airdropInternal(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#828-832):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#830)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#830)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#831)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#831)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[91m\nFOMC.claimOtherTokens(IERC20,address) (repositories/verified-smart-contracts/FOMC.sol#928-930) ignores return value by tokenAddress.transfer(walletaddress,tokenAddress.balanceOf(address(this))) (repositories/verified-smart-contracts/FOMC.sol#929)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nFOMC.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/FOMC.sol#1140-1153) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nFOMC.allowance(address,address).owner (repositories/verified-smart-contracts/FOMC.sol#789) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/FOMC.sol#420-422) (function)\nFOMC._approve(address,address,uint256).owner (repositories/verified-smart-contracts/FOMC.sol#1042) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/FOMC.sol#420-422) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nFOMC.setMarketingWallet(address).walletAddress (repositories/verified-smart-contracts/FOMC.sol#910) lacks a zero-check on :\n\t\t- marketingWallet = walletAddress (repositories/verified-smart-contracts/FOMC.sol#911)\nFOMC.clearStuckBalance(address).walletaddress (repositories/verified-smart-contracts/FOMC.sol#932) lacks a zero-check on :\n\t\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/FOMC.sol#933)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in FOMC._transfer(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#1050-1094):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/FOMC.sol#1030)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/FOMC.sol#1027)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/FOMC.sol#1026)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/FOMC.sol#962)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/FOMC.sol#1029)\nReentrancy in FOMC.constructor() (repositories/verified-smart-contracts/FOMC.sol#745-761):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/FOMC.sol#750-751)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/FOMC.sol#757)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/FOMC.sol#758)\n\t- uniswapV2Router = _uniswapV2Router (repositories/verified-smart-contracts/FOMC.sol#754)\nReentrancy in FOMC.swapAndLiquify(uint256) (repositories/verified-smart-contracts/FOMC.sol#1096-1120):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/FOMC.sol#1109)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/FOMC.sol#1046)\nReentrancy in FOMC.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#798-802):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/FOMC.sol#800)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/FOMC.sol#1046)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in FOMC._transfer(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#1050-1094):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1190)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1200)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1210)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#899)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\nReentrancy in FOMC.constructor() (repositories/verified-smart-contracts/FOMC.sol#745-761):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/FOMC.sol#750-751)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/FOMC.sol#760)\nReentrancy in FOMC.swapAndLiquify(uint256) (repositories/verified-smart-contracts/FOMC.sol#1096-1120):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/FOMC.sol#1109)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/FOMC.sol#1047)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/FOMC.sol#1119)\nReentrancy in FOMC.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#798-802):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1131-1137)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/FOMC.sol#1047)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/FOMC.sol#800)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nOwnable.unlock() (repositories/verified-smart-contracts/FOMC.sol#467-472) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > _lockTime,Contract is locked until 7 days) (repositories/verified-smart-contracts/FOMC.sol#469)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/FOMC.sol#272-281) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/FOMC.sol#279)\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FOMC.sol#365-386) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/FOMC.sol#378-381)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FOMC.sol#365-386) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/FOMC.sol#325-327) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/FOMC.sol#335-337) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/FOMC.sol#350-352) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FOMC.sol#360-363) is never used and should be removed\nAddress.isContract(address) (repositories/verified-smart-contracts/FOMC.sol#272-281) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#299-305) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/FOMC.sol#244-247) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/FOMC.sol#216-218) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/FOMC.sol#232-235) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nFOMC._rTotal (repositories/verified-smart-contracts/FOMC.sol#708) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\nFOMC._previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#717) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\nFOMC._previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#720) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.9 (repositories/verified-smart-contracts/FOMC.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#299-305):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/FOMC.sol#303)\nLow level call in Address._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FOMC.sol#365-386):\n\t- (success,returndata) = target.call{value: weiValue}(data) (repositories/verified-smart-contracts/FOMC.sol#369)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nFOMC (repositories/verified-smart-contracts/FOMC.sol#688-1214) should inherit from IAirdrop (repositories/verified-smart-contracts/FOMC.sol#684-686)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance\x1b[0m\n\x1b[92m\nFunction IUniswapV2Pair.DOMAIN_SEPARATOR() (repositories/verified-smart-contracts/FOMC.sol#509) is not in mixedCase\nFunction IUniswapV2Pair.PERMIT_TYPEHASH() (repositories/verified-smart-contracts/FOMC.sol#510) is not in mixedCase\nFunction IUniswapV2Pair.MINIMUM_LIQUIDITY() (repositories/verified-smart-contracts/FOMC.sol#527) is not in mixedCase\nFunction IUniswapV2Router01.WETH() (repositories/verified-smart-contracts/FOMC.sol#548) is not in mixedCase\nParameter FOMC.setSwapThresholdAmount(uint256).SwapThresholdAmount (repositories/verified-smart-contracts/FOMC.sol#918) is not in mixedCase\nParameter FOMC.setSwapAndLiquifyEnabled(bool)._enabled (repositories/verified-smart-contracts/FOMC.sol#952) is not in mixedCase\nParameter FOMC.calculateTaxFee(uint256)._amount (repositories/verified-smart-contracts/FOMC.sol#1011) is not in mixedCase\nParameter FOMC.calculateLiquidityFee(uint256)._amount (repositories/verified-smart-contracts/FOMC.sol#1017) is not in mixedCase\nVariable FOMC._taxFee (repositories/verified-smart-contracts/FOMC.sol#716) is not in mixedCase\nVariable FOMC._liquidityFee (repositories/verified-smart-contracts/FOMC.sol#719) is not in mixedCase\nVariable FOMC._maxTxAmount (repositories/verified-smart-contracts/FOMC.sol#728) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/FOMC.sol#245)" inContext (repositories/verified-smart-contracts/FOMC.sol#238-248)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in FOMC._transfer(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#1050-1094):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/FOMC.sol#1081)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/FOMC.sol#1030)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/FOMC.sol#1027)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/FOMC.sol#1026)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/FOMC.sol#1006)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1186)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1195)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#894)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1187)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/FOMC.sol#1206)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1207)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1197)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#896)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/FOMC.sol#961)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/FOMC.sol#962)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/FOMC.sol#1008)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/FOMC.sol#893)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/FOMC.sol#1205)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1196)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#895)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/FOMC.sol#1029)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1190)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1200)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#1210)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/FOMC.sol#899)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/FOMC.sol#1093)\nReentrancy in FOMC.airdrop(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#822-826):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/FOMC.sol#824)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/FOMC.sol#824)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#825)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#825)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\nReentrancy in FOMC.airdropInternal(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#828-832):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#830)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#830)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#831)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/FOMC.sol#1035)\n\t- restoreAllFee() (repositories/verified-smart-contracts/FOMC.sol#831)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/FOMC.sol#1034)\nReentrancy in FOMC.swapAndLiquify(uint256) (repositories/verified-smart-contracts/FOMC.sol#1096-1120):\n\tExternal calls:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/FOMC.sol#1046)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/FOMC.sol#1047)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/FOMC.sol#1117)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/FOMC.sol#1119)\nReentrancy in FOMC.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#798-802):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/FOMC.sol#799)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/FOMC.sol#1145-1152)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/FOMC.sol#1114)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/FOMC.sol#800)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/FOMC.sol#1046)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/FOMC.sol#1047)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/FOMC.sol#800)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (repositories/verified-smart-contracts/FOMC.sol#553) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (repositories/verified-smart-contracts/FOMC.sol#554)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#967) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194)\nVariable FOMC.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#858) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1194) is too similar to FOMC._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#966)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892) is too similar to FOMC._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185)\nVariable FOMC._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1185) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#892)\nVariable FOMC._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#1204) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nVariable FOMC._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/FOMC.sol#982) is too similar to FOMC._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/FOMC.sol#974)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nFOMC.upliftTxAmount() (repositories/verified-smart-contracts/FOMC.sol#914-916) uses literals with too many digits:\n\t- _maxTxAmount = 69000000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/FOMC.sol#915)\nFOMC.setSwapThresholdAmount(uint256) (repositories/verified-smart-contracts/FOMC.sol#918-921) uses literals with too many digits:\n\t- require(bool,string)(SwapThresholdAmount > 69000000,Swap Threshold Amount cannot be less than 69 Million) (repositories/verified-smart-contracts/FOMC.sol#919)\nFOMC.slitherConstructorVariables() (repositories/verified-smart-contracts/FOMC.sol#688-1214) uses literals with too many digits:\n\t- _tTotal = 69000000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/FOMC.sol#707)\nFOMC.slitherConstructorVariables() (repositories/verified-smart-contracts/FOMC.sol#688-1214) uses literals with too many digits:\n\t- _maxTxAmount = 990000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/FOMC.sol#728)\nFOMC.slitherConstructorVariables() (repositories/verified-smart-contracts/FOMC.sol#688-1214) uses literals with too many digits:\n\t- numTokensSellToAddToLiquidity = 690000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/FOMC.sol#729)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nFOMC._decimals (repositories/verified-smart-contracts/FOMC.sol#714) should be constant\nFOMC._name (repositories/verified-smart-contracts/FOMC.sol#712) should be constant\nFOMC._symbol (repositories/verified-smart-contracts/FOMC.sol#713) should be constant\nFOMC._tTotal (repositories/verified-smart-contracts/FOMC.sol#707) should be constant\nFOMC.botscantrade (repositories/verified-smart-contracts/FOMC.sol#702) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/FOMC.sol#439-442)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/FOMC.sol#448-452)\ngeUnlockTime() should be declared external:\n\t- Ownable.geUnlockTime() (repositories/verified-smart-contracts/FOMC.sol#454-456)\nlock(uint256) should be declared external:\n\t- Ownable.lock(uint256) (repositories/verified-smart-contracts/FOMC.sol#459-464)\nunlock() should be declared external:\n\t- Ownable.unlock() (repositories/verified-smart-contracts/FOMC.sol#467-472)\nname() should be declared external:\n\t- FOMC.name() (repositories/verified-smart-contracts/FOMC.sol#763-765)\nsymbol() should be declared external:\n\t- FOMC.symbol() (repositories/verified-smart-contracts/FOMC.sol#767-769)\ndecimals() should be declared external:\n\t- FOMC.decimals() (repositories/verified-smart-contracts/FOMC.sol#771-773)\ntotalSupply() should be declared external:\n\t- FOMC.totalSupply() (repositories/verified-smart-contracts/FOMC.sol#775-777)\ntransfer(address,uint256) should be declared external:\n\t- FOMC.transfer(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#784-787)\nallowance(address,address) should be declared external:\n\t- FOMC.allowance(address,address) (repositories/verified-smart-contracts/FOMC.sol#789-791)\napprove(address,uint256) should be declared external:\n\t- FOMC.approve(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#793-796)\ntransferFrom(address,address,uint256) should be declared external:\n\t- FOMC.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/FOMC.sol#798-802)\nincreaseAllowance(address,uint256) should be declared external:\n\t- FOMC.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#804-807)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- FOMC.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/FOMC.sol#809-812)\nisExcludedFromReward(address) should be declared external:\n\t- FOMC.isExcludedFromReward(address) (repositories/verified-smart-contracts/FOMC.sol#814-816)\ntotalFees() should be declared external:\n\t- FOMC.totalFees() (repositories/verified-smart-contracts/FOMC.sol#818-820)\ndeliver(uint256) should be declared external:\n\t- FOMC.deliver(uint256) (repositories/verified-smart-contracts/FOMC.sol#843-850)\nreflectionFromToken(uint256,bool) should be declared external:\n\t- FOMC.reflectionFromToken(uint256,bool) (repositories/verified-smart-contracts/FOMC.sol#852-861)\nexcludeFromReward(address) should be declared external:\n\t- FOMC.excludeFromReward(address) (repositories/verified-smart-contracts/FOMC.sol#869-877)\nexcludeFromFee(address) should be declared external:\n\t- FOMC.excludeFromFee(address) (repositories/verified-smart-contracts/FOMC.sol#902-904)\nincludeInFee(address) should be declared external:\n\t- FOMC.includeInFee(address) (repositories/verified-smart-contracts/FOMC.sol#906-908)\nsetMarketingWallet(address) should be declared external:\n\t- FOMC.setMarketingWallet(address) (repositories/verified-smart-contracts/FOMC.sol#910-912)\nclaimTokens() should be declared external:\n\t- FOMC.claimTokens() (repositories/verified-smart-contracts/FOMC.sol#923-926)\ngetBotWalletStatus(address) should be declared external:\n\t- FOMC.getBotWalletStatus(address) (repositories/verified-smart-contracts/FOMC.sol#944-946)\nsetSwapAndLiquifyEnabled(bool) should be declared external:\n\t- FOMC.setSwapAndLiquifyEnabled(bool) (repositories/verified-smart-contracts/FOMC.sol#952-955)\nisExcludedFromFee(address) should be declared external:\n\t- FOMC.isExcludedFromFee(address) (repositories/verified-smart-contracts/FOMC.sol#1038-1040)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/FOMC.sol analyzed (11 contracts with 75 detectors), 136 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Hachikka.sol --json ./slither/OLD_verified-smart-contracts/json/Hachikka.sol.json', returncode=136, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Hachikka.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Hachikka.sol:\nWarning: Contract code size is 25443 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n   --> repositories/verified-smart-contracts/Hachikka.sol:693:1:\n    |\n693 | contract Hachikka is Context, IERC20, Ownable {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nHachikka.clearStuckBalance(address) (repositories/verified-smart-contracts/Hachikka.sol#937-939) sends eth to arbitrary user\n\tDangerous calls:\n\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/Hachikka.sol#938)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nReentrancy in Hachikka._transfer(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#1055-1099):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/Hachikka.sol#1011)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1191)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1200)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#899)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1192)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1211)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1202)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1212)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#901)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/Hachikka.sol#966)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/Hachikka.sol#1013)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/Hachikka.sol#1210)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/Hachikka.sol#898)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1201)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#900)\nReentrancy in Hachikka.airdrop(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#827-831):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/Hachikka.sol#829)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/Hachikka.sol#829)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#830)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#830)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\nReentrancy in Hachikka.airdropInternal(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#833-837):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#835)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#835)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#836)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#836)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[91m\nHachikka.claimOtherTokens(IERC20,address) (repositories/verified-smart-contracts/Hachikka.sol#933-935) ignores return value by tokenAddress.transfer(walletaddress,tokenAddress.balanceOf(address(this))) (repositories/verified-smart-contracts/Hachikka.sol#934)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nHachikka.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/Hachikka.sol#1145-1158) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nHachikka.allowance(address,address).owner (repositories/verified-smart-contracts/Hachikka.sol#794) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/Hachikka.sol#425-427) (function)\nHachikka._approve(address,address,uint256).owner (repositories/verified-smart-contracts/Hachikka.sol#1047) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/Hachikka.sol#425-427) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nHachikka.setMarketingWallet(address).walletAddress (repositories/verified-smart-contracts/Hachikka.sol#915) lacks a zero-check on :\n\t\t- marketingWallet = walletAddress (repositories/verified-smart-contracts/Hachikka.sol#916)\nHachikka.clearStuckBalance(address).walletaddress (repositories/verified-smart-contracts/Hachikka.sol#937) lacks a zero-check on :\n\t\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/Hachikka.sol#938)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in Hachikka._transfer(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#1055-1099):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/Hachikka.sol#1035)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1032)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/Hachikka.sol#1031)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/Hachikka.sol#967)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/Hachikka.sol#1034)\nReentrancy in Hachikka.constructor() (repositories/verified-smart-contracts/Hachikka.sol#750-766):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/Hachikka.sol#755-756)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/Hachikka.sol#762)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/Hachikka.sol#763)\n\t- uniswapV2Router = _uniswapV2Router (repositories/verified-smart-contracts/Hachikka.sol#759)\nReentrancy in Hachikka.swapAndLiquify(uint256) (repositories/verified-smart-contracts/Hachikka.sol#1101-1125):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/Hachikka.sol#1114)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/Hachikka.sol#1051)\nReentrancy in Hachikka.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#803-807):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/Hachikka.sol#805)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/Hachikka.sol#1051)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in Hachikka._transfer(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#1055-1099):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1195)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1215)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1205)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#904)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\nReentrancy in Hachikka.constructor() (repositories/verified-smart-contracts/Hachikka.sol#750-766):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/Hachikka.sol#755-756)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/Hachikka.sol#765)\nReentrancy in Hachikka.swapAndLiquify(uint256) (repositories/verified-smart-contracts/Hachikka.sol#1101-1125):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/Hachikka.sol#1114)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/Hachikka.sol#1052)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/Hachikka.sol#1124)\nReentrancy in Hachikka.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#803-807):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1136-1142)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/Hachikka.sol#1052)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/Hachikka.sol#805)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nOwnable.unlock() (repositories/verified-smart-contracts/Hachikka.sol#472-477) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > _lockTime,Contract is locked until 7 days) (repositories/verified-smart-contracts/Hachikka.sol#474)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/Hachikka.sol#277-286) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Hachikka.sol#284)\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Hachikka.sol#370-391) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Hachikka.sol#383-386)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Hachikka.sol#370-391) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/Hachikka.sol#330-332) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/Hachikka.sol#340-342) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/Hachikka.sol#355-357) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Hachikka.sol#365-368) is never used and should be removed\nAddress.isContract(address) (repositories/verified-smart-contracts/Hachikka.sol#277-286) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#304-310) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/Hachikka.sol#249-252) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/Hachikka.sol#221-223) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/Hachikka.sol#237-240) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nHachikka._rTotal (repositories/verified-smart-contracts/Hachikka.sol#713) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\nHachikka._previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#722) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\nHachikka._previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#725) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.9 (repositories/verified-smart-contracts/Hachikka.sol#14) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#304-310):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/Hachikka.sol#308)\nLow level call in Address._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Hachikka.sol#370-391):\n\t- (success,returndata) = target.call{value: weiValue}(data) (repositories/verified-smart-contracts/Hachikka.sol#374)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nHachikka (repositories/verified-smart-contracts/Hachikka.sol#693-1219) should inherit from IAirdrop (repositories/verified-smart-contracts/Hachikka.sol#689-691)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance\x1b[0m\n\x1b[92m\nFunction IUniswapV2Pair.DOMAIN_SEPARATOR() (repositories/verified-smart-contracts/Hachikka.sol#514) is not in mixedCase\nFunction IUniswapV2Pair.PERMIT_TYPEHASH() (repositories/verified-smart-contracts/Hachikka.sol#515) is not in mixedCase\nFunction IUniswapV2Pair.MINIMUM_LIQUIDITY() (repositories/verified-smart-contracts/Hachikka.sol#532) is not in mixedCase\nFunction IUniswapV2Router01.WETH() (repositories/verified-smart-contracts/Hachikka.sol#553) is not in mixedCase\nParameter Hachikka.setSwapThresholdAmount(uint256).SwapThresholdAmount (repositories/verified-smart-contracts/Hachikka.sol#923) is not in mixedCase\nParameter Hachikka.setSwapAndLiquifyEnabled(bool)._enabled (repositories/verified-smart-contracts/Hachikka.sol#957) is not in mixedCase\nParameter Hachikka.calculateTaxFee(uint256)._amount (repositories/verified-smart-contracts/Hachikka.sol#1016) is not in mixedCase\nParameter Hachikka.calculateLiquidityFee(uint256)._amount (repositories/verified-smart-contracts/Hachikka.sol#1022) is not in mixedCase\nVariable Hachikka._taxFee (repositories/verified-smart-contracts/Hachikka.sol#721) is not in mixedCase\nVariable Hachikka._liquidityFee (repositories/verified-smart-contracts/Hachikka.sol#724) is not in mixedCase\nVariable Hachikka._maxTxAmount (repositories/verified-smart-contracts/Hachikka.sol#733) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/Hachikka.sol#250)" inContext (repositories/verified-smart-contracts/Hachikka.sol#243-253)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in Hachikka._transfer(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#1055-1099):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/Hachikka.sol#1086)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/Hachikka.sol#1035)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1032)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/Hachikka.sol#1031)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/Hachikka.sol#1011)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1191)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1200)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#899)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1192)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/Hachikka.sol#1211)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1202)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1212)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#901)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/Hachikka.sol#966)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/Hachikka.sol#967)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/Hachikka.sol#1013)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/Hachikka.sol#1210)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/Hachikka.sol#898)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1201)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#900)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/Hachikka.sol#1034)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1195)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1205)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#1215)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/Hachikka.sol#904)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/Hachikka.sol#1098)\nReentrancy in Hachikka.airdrop(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#827-831):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/Hachikka.sol#829)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/Hachikka.sol#829)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#830)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#830)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\nReentrancy in Hachikka.airdropInternal(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#833-837):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#835)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#835)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#836)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/Hachikka.sol#1040)\n\t- restoreAllFee() (repositories/verified-smart-contracts/Hachikka.sol#836)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/Hachikka.sol#1039)\nReentrancy in Hachikka.swapAndLiquify(uint256) (repositories/verified-smart-contracts/Hachikka.sol#1101-1125):\n\tExternal calls:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/Hachikka.sol#1051)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/Hachikka.sol#1052)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/Hachikka.sol#1122)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/Hachikka.sol#1124)\nReentrancy in Hachikka.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#803-807):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/Hachikka.sol#804)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/Hachikka.sol#1150-1157)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/Hachikka.sol#1119)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/Hachikka.sol#805)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/Hachikka.sol#1051)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/Hachikka.sol#1052)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/Hachikka.sol#805)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (repositories/verified-smart-contracts/Hachikka.sol#558) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (repositories/verified-smart-contracts/Hachikka.sol#559)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190) is too similar to Hachikka._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#979)\nVariable Hachikka._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199)\nVariable Hachikka.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#863) is too similar to Hachikka._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1190)\nVariable Hachikka._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#972) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nVariable Hachikka._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1199) is too similar to Hachikka._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#1209)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#971)\nVariable Hachikka._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#987) is too similar to Hachikka._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/Hachikka.sol#897)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nHachikka.upliftTxAmount() (repositories/verified-smart-contracts/Hachikka.sol#919-921) uses literals with too many digits:\n\t- _maxTxAmount = 69000000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/Hachikka.sol#920)\nHachikka.setSwapThresholdAmount(uint256) (repositories/verified-smart-contracts/Hachikka.sol#923-926) uses literals with too many digits:\n\t- require(bool,string)(SwapThresholdAmount > 69000000,Swap Threshold Amount cannot be less than 69 Million) (repositories/verified-smart-contracts/Hachikka.sol#924)\nHachikka.slitherConstructorVariables() (repositories/verified-smart-contracts/Hachikka.sol#693-1219) uses literals with too many digits:\n\t- _tTotal = 1000000 * 10 ** 9 (repositories/verified-smart-contracts/Hachikka.sol#712)\nHachikka.slitherConstructorVariables() (repositories/verified-smart-contracts/Hachikka.sol#693-1219) uses literals with too many digits:\n\t- _maxTxAmount = 900000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/Hachikka.sol#733)\nHachikka.slitherConstructorVariables() (repositories/verified-smart-contracts/Hachikka.sol#693-1219) uses literals with too many digits:\n\t- numTokensSellToAddToLiquidity = 690000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/Hachikka.sol#734)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nHachikka._decimals (repositories/verified-smart-contracts/Hachikka.sol#719) should be constant\nHachikka._name (repositories/verified-smart-contracts/Hachikka.sol#717) should be constant\nHachikka._symbol (repositories/verified-smart-contracts/Hachikka.sol#718) should be constant\nHachikka._tTotal (repositories/verified-smart-contracts/Hachikka.sol#712) should be constant\nHachikka.botscantrade (repositories/verified-smart-contracts/Hachikka.sol#707) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Hachikka.sol#444-447)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Hachikka.sol#453-457)\ngeUnlockTime() should be declared external:\n\t- Ownable.geUnlockTime() (repositories/verified-smart-contracts/Hachikka.sol#459-461)\nlock(uint256) should be declared external:\n\t- Ownable.lock(uint256) (repositories/verified-smart-contracts/Hachikka.sol#464-469)\nunlock() should be declared external:\n\t- Ownable.unlock() (repositories/verified-smart-contracts/Hachikka.sol#472-477)\nname() should be declared external:\n\t- Hachikka.name() (repositories/verified-smart-contracts/Hachikka.sol#768-770)\nsymbol() should be declared external:\n\t- Hachikka.symbol() (repositories/verified-smart-contracts/Hachikka.sol#772-774)\ndecimals() should be declared external:\n\t- Hachikka.decimals() (repositories/verified-smart-contracts/Hachikka.sol#776-778)\ntotalSupply() should be declared external:\n\t- Hachikka.totalSupply() (repositories/verified-smart-contracts/Hachikka.sol#780-782)\ntransfer(address,uint256) should be declared external:\n\t- Hachikka.transfer(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#789-792)\nallowance(address,address) should be declared external:\n\t- Hachikka.allowance(address,address) (repositories/verified-smart-contracts/Hachikka.sol#794-796)\napprove(address,uint256) should be declared external:\n\t- Hachikka.approve(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#798-801)\ntransferFrom(address,address,uint256) should be declared external:\n\t- Hachikka.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#803-807)\nincreaseAllowance(address,uint256) should be declared external:\n\t- Hachikka.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#809-812)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- Hachikka.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/Hachikka.sol#814-817)\nisExcludedFromReward(address) should be declared external:\n\t- Hachikka.isExcludedFromReward(address) (repositories/verified-smart-contracts/Hachikka.sol#819-821)\ntotalFees() should be declared external:\n\t- Hachikka.totalFees() (repositories/verified-smart-contracts/Hachikka.sol#823-825)\ndeliver(uint256) should be declared external:\n\t- Hachikka.deliver(uint256) (repositories/verified-smart-contracts/Hachikka.sol#848-855)\nreflectionFromToken(uint256,bool) should be declared external:\n\t- Hachikka.reflectionFromToken(uint256,bool) (repositories/verified-smart-contracts/Hachikka.sol#857-866)\nexcludeFromReward(address) should be declared external:\n\t- Hachikka.excludeFromReward(address) (repositories/verified-smart-contracts/Hachikka.sol#874-882)\nexcludeFromFee(address) should be declared external:\n\t- Hachikka.excludeFromFee(address) (repositories/verified-smart-contracts/Hachikka.sol#907-909)\nincludeInFee(address) should be declared external:\n\t- Hachikka.includeInFee(address) (repositories/verified-smart-contracts/Hachikka.sol#911-913)\nsetMarketingWallet(address) should be declared external:\n\t- Hachikka.setMarketingWallet(address) (repositories/verified-smart-contracts/Hachikka.sol#915-917)\nclaimTokens() should be declared external:\n\t- Hachikka.claimTokens() (repositories/verified-smart-contracts/Hachikka.sol#928-931)\ngetBotWalletStatus(address) should be declared external:\n\t- Hachikka.getBotWalletStatus(address) (repositories/verified-smart-contracts/Hachikka.sol#949-951)\nsetSwapAndLiquifyEnabled(bool) should be declared external:\n\t- Hachikka.setSwapAndLiquifyEnabled(bool) (repositories/verified-smart-contracts/Hachikka.sol#957-960)\nisExcludedFromFee(address) should be declared external:\n\t- Hachikka.isExcludedFromFee(address) (repositories/verified-smart-contracts/Hachikka.sol#1043-1045)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Hachikka.sol analyzed (11 contracts with 75 detectors), 136 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MintOne.sol --json ./slither/OLD_verified-smart-contracts/json/MintOne.sol.json', returncode=114, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/MintOne.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nMintOne.withdraw() (repositories/verified-smart-contracts/MintOne.sol#1373-1376) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/MintOne.sol#1374)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721EnumerableLiteC.tokenOfOwnerByIndex(address,uint256).i (repositories/verified-smart-contracts/MintOne.sol#1159) is a local variable never initialized\nERC721EnumerableLiteC.tokenOfOwnerByIndex(address,uint256).count (repositories/verified-smart-contracts/MintOne.sol#1158) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721C._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/MintOne.sol#1088-1109) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/MintOne.sol#1095-1105)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nERC721C.balanceOf(address).owner (repositories/verified-smart-contracts/MintOne.sol#780) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721C.ownerOf(uint256).owner (repositories/verified-smart-contracts/MintOne.sol#790) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721C.approve(address,uint256).owner (repositories/verified-smart-contracts/MintOne.sol#830) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721C.isApprovedForAll(address,address).owner (repositories/verified-smart-contracts/MintOne.sol#863) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721C._isApprovedOrOwner(address,uint256).owner (repositories/verified-smart-contracts/MintOne.sol#955) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721C._burn(uint256).owner (repositories/verified-smart-contracts/MintOne.sol#1026) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nERC721EnumerableLiteC.tokenOfOwnerByIndex(address,uint256).owner (repositories/verified-smart-contracts/MintOne.sol#1155) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/MintOne.sol#647-649) (function)\nBeeNFT.constructor(string,string,string)._name (repositories/verified-smart-contracts/MintOne.sol#1212) shadows:\n\t- ERC721C._name (repositories/verified-smart-contracts/MintOne.sol#738) (state variable)\nBeeNFT.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/MintOne.sol#1213) shadows:\n\t- ERC721C._symbol (repositories/verified-smart-contracts/MintOne.sol#741) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nMintOne.constructor(BeeNFT,address,uint256,uint256,uint256)._beesEscrow (repositories/verified-smart-contracts/MintOne.sol#1305) lacks a zero-check on :\n\t\t- beesEscrow = _beesEscrow (repositories/verified-smart-contracts/MintOne.sol#1311)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nMintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343) has external calls inside a loop: beeNFT.mint(msg.sender,supply + (i * 2)) (repositories/verified-smart-contracts/MintOne.sol#1332)\nMintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343) has external calls inside a loop: beeNFT.mint(beesEscrow,supply + (i * 2 + 1)) (repositories/verified-smart-contracts/MintOne.sol#1333)\nMintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343) has external calls inside a loop: beeNFT.mint(msg.sender,supply + (i_scope_0 * 2)) (repositories/verified-smart-contracts/MintOne.sol#1339)\nMintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343) has external calls inside a loop: beeNFT.mint(beesEscrow,supply + (i_scope_0 * 2 + 1)) (repositories/verified-smart-contracts/MintOne.sol#1340)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop\x1b[0m\n\x1b[92m\nVariable 'ERC721C._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/MintOne.sol#1095)' in ERC721C._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/MintOne.sol#1088-1109) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/MintOne.sol#1096)\nVariable 'ERC721C._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/MintOne.sol#1097)' in ERC721C._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/MintOne.sol#1088-1109) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/MintOne.sol#1098)\nVariable 'ERC721C._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/MintOne.sol#1097)' in ERC721C._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/MintOne.sol#1088-1109) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/MintOne.sol#1102)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nMintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(block.timestamp >= whiteListTime) (repositories/verified-smart-contracts/MintOne.sol#1324)\n\t- block.timestamp <= publicTime (repositories/verified-smart-contracts/MintOne.sol#1326)\n\t- block.timestamp > publicTime (repositories/verified-smart-contracts/MintOne.sol#1335)\n\t- require(bool)(block.timestamp > publicTime) (repositories/verified-smart-contracts/MintOne.sol#1337)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/MintOne.sol#99-109) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MintOne.sol#105-107)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#268-288) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MintOne.sol#280-283)\nERC721C._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/MintOne.sol#1088-1109) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/MintOne.sol#1101-1103)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#76)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#296)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#326)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#354)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#385)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#530)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#561)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#590)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#617)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#696)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#723)\n\t- ^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#1135)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/MintOne.sol#1191)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/MintOne.sol#1281)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/MintOne.sol#152-154) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#162-168) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/MintOne.sol#181-187) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/MintOne.sol#195-206) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/MintOne.sol#241-243) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#251-260) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/MintOne.sol#214-216) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#224-233) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#127-132) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#268-288) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/MintOne.sol#607-609) is never used and should be removed\nERC721C._baseURI() (repositories/verified-smart-contracts/MintOne.sol#823-825) is never used and should be removed\nERC721C._burn(uint256) (repositories/verified-smart-contracts/MintOne.sol#1025-1035) is never used and should be removed\nERC721C._safeMint(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#969-971) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/MintOne.sol#42-53) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/MintOne.sol#58-68) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#76) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#296) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#326) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#354) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#385) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#530) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#561) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#590) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#617) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#696) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#723) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/MintOne.sol#1135) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/MintOne.sol#1191) is too complex\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/MintOne.sol#1281) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#127-132):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/MintOne.sol#130)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/MintOne.sol#195-206):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/MintOne.sol#204)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#224-233):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/MintOne.sol#231)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/MintOne.sol#251-260):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/MintOne.sol#258)\nLow level call in MintOne.withdraw() (repositories/verified-smart-contracts/MintOne.sol#1373-1376):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/MintOne.sol#1374)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nVariable WithSuperOperators._superOperators (repositories/verified-smart-contracts/MintOne.sol#700) is not in mixedCase\nParameter ERC721C.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/MintOne.sol#900) is not in mixedCase\nVariable ERC721C._tokenIds (repositories/verified-smart-contracts/MintOne.sol#745) is not in mixedCase\nVariable ERC721C._owners (repositories/verified-smart-contracts/MintOne.sol#748) is not in mixedCase\nParameter BeeNFT.mint(address,uint256)._to (repositories/verified-smart-contracts/MintOne.sol#1220) is not in mixedCase\nParameter BeeNFT.mint(address,uint256)._mintNumber (repositories/verified-smart-contracts/MintOne.sol#1220) is not in mixedCase\nParameter BeeNFT.setBaseURI(string)._value (repositories/verified-smart-contracts/MintOne.sol#1249) is not in mixedCase\nParameter BeeNFT.setMaxSupply(uint256)._maxSupply (repositories/verified-smart-contracts/MintOne.sol#1253) is not in mixedCase\nParameter BeeNFT.setMinter(address,bool)._minter (repositories/verified-smart-contracts/MintOne.sol#1257) is not in mixedCase\nParameter BeeNFT.setMinter(address,bool)._option (repositories/verified-smart-contracts/MintOne.sol#1257) is not in mixedCase\nParameter BeeNFT.setMisc(uint256[],uint256[])._ids (repositories/verified-smart-contracts/MintOne.sol#1260) is not in mixedCase\nParameter BeeNFT.setMisc(uint256[],uint256[])._values (repositories/verified-smart-contracts/MintOne.sol#1260) is not in mixedCase\nParameter BeeNFT.setQueenRegistry(uint256[],uint256[])._ids (repositories/verified-smart-contracts/MintOne.sol#1266) is not in mixedCase\nParameter BeeNFT.setQueenRegistry(uint256[],uint256[])._values (repositories/verified-smart-contracts/MintOne.sol#1266) is not in mixedCase\nParameter BeeNFT.pause(bool)._state (repositories/verified-smart-contracts/MintOne.sol#1272) is not in mixedCase\nVariable BeeNFT.QueenRegistry (repositories/verified-smart-contracts/MintOne.sol#1207) is not in mixedCase\nParameter MintOne.mint(uint256)._mintAmount (repositories/verified-smart-contracts/MintOne.sol#1317) is not in mixedCase\nParameter MintOne.isWhitelisted(address)._user (repositories/verified-smart-contracts/MintOne.sol#1344) is not in mixedCase\nParameter MintOne.setCost(uint256)._newCost (repositories/verified-smart-contracts/MintOne.sol#1349) is not in mixedCase\nParameter MintOne.setTimes(uint256,uint256)._whitelist (repositories/verified-smart-contracts/MintOne.sol#1352) is not in mixedCase\nParameter MintOne.setTimes(uint256,uint256)._public (repositories/verified-smart-contracts/MintOne.sol#1352) is not in mixedCase\nParameter MintOne.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/MintOne.sol#1357) is not in mixedCase\nParameter MintOne.setmaxSupply(uint256)._supply (repositories/verified-smart-contracts/MintOne.sol#1360) is not in mixedCase\nParameter MintOne.pause(bool)._state (repositories/verified-smart-contracts/MintOne.sol#1363) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/MintOne.sol#666-668)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/MintOne.sol#674-677)\nisSuperOperator(address) should be declared external:\n\t- WithSuperOperators.isSuperOperator(address) (repositories/verified-smart-contracts/MintOne.sol#715-717)\nname() should be declared external:\n\t- ERC721C.name() (repositories/verified-smart-contracts/MintOne.sol#798-800)\nsymbol() should be declared external:\n\t- ERC721C.symbol() (repositories/verified-smart-contracts/MintOne.sol#805-807)\ntokenURI(uint256) should be declared external:\n\t- ERC721C.tokenURI(uint256) (repositories/verified-smart-contracts/MintOne.sol#811-816)\napprove(address,uint256) should be declared external:\n\t- ERC721C.approve(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#829-839)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721C.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/MintOne.sol#853-858)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721C.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/MintOne.sol#871-880)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721C.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/MintOne.sol#885-891)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721EnumerableLiteC.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#1155-1169)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721EnumerableLiteC.tokenByIndex(uint256) (repositories/verified-smart-contracts/MintOne.sol#1181-1184)\nmint(address,uint256) should be declared external:\n\t- BeeNFT.mint(address,uint256) (repositories/verified-smart-contracts/MintOne.sol#1220-1227)\nsetMaxSupply(uint256) should be declared external:\n\t- BeeNFT.setMaxSupply(uint256) (repositories/verified-smart-contracts/MintOne.sol#1253-1255)\nsetMinter(address,bool) should be declared external:\n\t- BeeNFT.setMinter(address,bool) (repositories/verified-smart-contracts/MintOne.sol#1257-1259)\nsetMisc(uint256[],uint256[]) should be declared external:\n\t- BeeNFT.setMisc(uint256[],uint256[]) (repositories/verified-smart-contracts/MintOne.sol#1260-1265)\nsetQueenRegistry(uint256[],uint256[]) should be declared external:\n\t- BeeNFT.setQueenRegistry(uint256[],uint256[]) (repositories/verified-smart-contracts/MintOne.sol#1266-1271)\npause(bool) should be declared external:\n\t- BeeNFT.pause(bool) (repositories/verified-smart-contracts/MintOne.sol#1272-1274)\nmint(uint256) should be declared external:\n\t- MintOne.mint(uint256) (repositories/verified-smart-contracts/MintOne.sol#1317-1343)\nisWhitelisted(address) should be declared external:\n\t- MintOne.isWhitelisted(address) (repositories/verified-smart-contracts/MintOne.sol#1344-1346)\nsetCost(uint256) should be declared external:\n\t- MintOne.setCost(uint256) (repositories/verified-smart-contracts/MintOne.sol#1349-1351)\nsetTimes(uint256,uint256) should be declared external:\n\t- MintOne.setTimes(uint256,uint256) (repositories/verified-smart-contracts/MintOne.sol#1352-1355)\nsetmaxMintAmount(uint256) should be declared external:\n\t- MintOne.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/MintOne.sol#1357-1359)\nsetmaxSupply(uint256) should be declared external:\n\t- MintOne.setmaxSupply(uint256) (repositories/verified-smart-contracts/MintOne.sol#1360-1362)\npause(bool) should be declared external:\n\t- MintOne.pause(bool) (repositories/verified-smart-contracts/MintOne.sol#1363-1365)\nwhitelistUsers(address[],uint256[]) should be declared external:\n\t- MintOne.whitelistUsers(address[],uint256[]) (repositories/verified-smart-contracts/MintOne.sol#1367-1372)\nwithdraw() should be declared external:\n\t- MintOne.withdraw() (repositories/verified-smart-contracts/MintOne.sol#1373-1376)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/MintOne.sol analyzed (15 contracts with 75 detectors), 114 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CompGetDebt.sol --json ./slither/OLD_verified-smart-contracts/json/CompGetDebt.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/CompGetDebt.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/CompGetDebt.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/CompGetDebt.sol:3:1:\n  |\n3 | pragma solidity =0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/CompGetDebt.sol:3:1:\n  |\n3 | pragma solidity =0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/CompGetDebt.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/CompGetDebt.sol:3:1:\n  |\n3 | pragma solidity =0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/GiveInu.sol --json ./slither/OLD_verified-smart-contracts/json/GiveInu.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/GiveInu.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/GiveInu.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n  --> repositories/verified-smart-contracts/GiveInu.sol:39:1:\n   |\n39 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/GiveInu.sol:39:1:\n   |\n39 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/GiveInu.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/GiveInu.sol:39:1:\n   |\n39 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MSZGovernor.sol --json ./slither/OLD_verified-smart-contracts/json/MSZGovernor.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MSZGovernor.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MSZGovernor.sol:\n\x1b[91mError: Data locations of parameters have to be the same when overriding non-external functions, but they differ.\x1b[0m\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1323:5:\n     |\n1323 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\nNote: Overridden function is here:\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1110:5:\n     |\n1110 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Data locations of parameters have to be the same when overriding non-external functions, but they differ.\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1323:5:\n     |\n1323 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\nNote: Overridden function is here:\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1110:5:\n     |\n1110 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\nNone\nError in ./repositories/verified-smart-contracts/MSZGovernor.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Data locations of parameters have to be the same when overriding non-external functions, but they differ.\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1323:5:\n     |\n1323 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\nNote: Overridden function is here:\n    --> repositories/verified-smart-contracts/MSZGovernor.sol:1110:5:\n     |\n1110 |     function hashProposal(\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/XCham.sol --json ./slither/OLD_verified-smart-contracts/json/XCham.sol.json', returncode=53, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/XCham.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/XCham.sol:\nWarning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> repositories/verified-smart-contracts/XCham.sol:960:31:\n    |\n960 |     function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns(bytes4) {\n    |                               ^^^^^^^^^^^^^^^^^\n\nWarning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> repositories/verified-smart-contracts/XCham.sol:960:50:\n    |\n960 |     function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns(bytes4) {\n    |                                                  ^^^^^^^^^^^^^\n\nWarning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> repositories/verified-smart-contracts/XCham.sol:960:65:\n    |\n960 |     function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns(bytes4) {\n    |                                                                 ^^^^^^^^^^^^^^^^\n\nWarning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> repositories/verified-smart-contracts/XCham.sol:960:83:\n    |\n960 |     function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns(bytes4) {\n    |                                                                                   ^^^^^^^^^^^^^^^^^^^^\n\n\n\x1b[91m\nXCham.withdraw() (repositories/verified-smart-contracts/XCham.sol#535-539) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = msg.sender.call{value: sendAmount}() (repositories/verified-smart-contracts/XCham.sol#537)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nXCham._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/XCham.sol#927-948) ignores return value by IERC721Receiver(to).onERC721Received(msg.sender,from,tokenId,_data) (repositories/verified-smart-contracts/XCham.sol#934-944)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nXCham.balanceOf(address).owner (repositories/verified-smart-contracts/XCham.sol#655) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nXCham.ownerOf(uint256).owner (repositories/verified-smart-contracts/XCham.sol#664) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nXCham.approve(address,uint256).owner (repositories/verified-smart-contracts/XCham.sol#673) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nXCham.isApprovedForAll(address,address).owner (repositories/verified-smart-contracts/XCham.sol#705) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nXCham._isApprovedOrOwner(address,uint256).owner (repositories/verified-smart-contracts/XCham.sol#795) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nXCham._burn(uint256).owner (repositories/verified-smart-contracts/XCham.sol#864) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/XCham.sol#377-379) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'XCham._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/XCham.sol#934)' in XCham._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/XCham.sol#927-948) potentially used before declaration: retval == IERC721Receiver(to).onERC721Received.selector (repositories/verified-smart-contracts/XCham.sol#935)\nVariable 'XCham._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/XCham.sol#936)' in XCham._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/XCham.sol#927-948) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/XCham.sol#937)\nVariable 'XCham._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/XCham.sol#936)' in XCham._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/XCham.sol#927-948) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/XCham.sol#941)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/XCham.sol#166-176) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/XCham.sol#172-174)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/XCham.sol#329-349) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/XCham.sol#341-344)\nXCham._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/XCham.sol#927-948) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/XCham.sol#940-942)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/XCham.sol#329-349) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/XCham.sol#219-221) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/XCham.sol#229-235) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/XCham.sol#248-254) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/XCham.sol#262-273) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/XCham.sol#308-310) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/XCham.sol#318-327) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/XCham.sol#281-283) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/XCham.sol#291-300) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/XCham.sol#194-199) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/XCham.sol#357-359) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/XCham.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/XCham.sol#194-199):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/XCham.sol#197)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/XCham.sol#262-273):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/XCham.sol#271)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/XCham.sol#291-300):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/XCham.sol#298)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/XCham.sol#318-327):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/XCham.sol#325)\nLow level call in XCham.withdraw() (repositories/verified-smart-contracts/XCham.sol#535-539):\n\t- (success) = msg.sender.call{value: sendAmount}() (repositories/verified-smart-contracts/XCham.sol#537)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nXCham (repositories/verified-smart-contracts/XCham.sol#464-1017) should inherit from IERC721Metadata (repositories/verified-smart-contracts/XCham.sol#124-133)\nXCham (repositories/verified-smart-contracts/XCham.sol#464-1017) should inherit from IERC721Receiver (repositories/verified-smart-contracts/XCham.sol#135-146)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance\x1b[0m\n\x1b[92m\nParameter XCham.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/XCham.sol#740) is not in mixedCase\nVariable XCham.CC (repositories/verified-smart-contracts/XCham.sol#501) is not in mixedCase\nVariable XCham.APE (repositories/verified-smart-contracts/XCham.sol#502) is not in mixedCase\nVariable XCham.BAYC (repositories/verified-smart-contracts/XCham.sol#503) is not in mixedCase\nVariable XCham.MAYC (repositories/verified-smart-contracts/XCham.sol#504) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/XCham.sol#396-398)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/XCham.sol#404-407)\nsupportsInterface(bytes4) should be declared external:\n\t- XCham.supportsInterface(bytes4) (repositories/verified-smart-contracts/XCham.sol#527-532)\nsetBaseURI(string) should be declared external:\n\t- XCham.setBaseURI(string) (repositories/verified-smart-contracts/XCham.sol#623-625)\nactivateMint() should be declared external:\n\t- XCham.activateMint() (repositories/verified-smart-contracts/XCham.sol#627-629)\ndeactivateMint() should be declared external:\n\t- XCham.deactivateMint() (repositories/verified-smart-contracts/XCham.sol#631-633)\nsetPrice(uint256) should be declared external:\n\t- XCham.setPrice(uint256) (repositories/verified-smart-contracts/XCham.sol#635-637)\nsetDiscountPrice(uint256) should be declared external:\n\t- XCham.setDiscountPrice(uint256) (repositories/verified-smart-contracts/XCham.sol#639-641)\nbalanceOf(address) should be declared external:\n\t- XCham.balanceOf(address) (repositories/verified-smart-contracts/XCham.sol#655-658)\napprove(address,uint256) should be declared external:\n\t- XCham.approve(address,uint256) (repositories/verified-smart-contracts/XCham.sol#672-682)\nsetApprovalForAll(address,bool) should be declared external:\n\t- XCham.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/XCham.sol#695-700)\ntransferFrom(address,address,uint256) should be declared external:\n\t- XCham.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/XCham.sol#712-720)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- XCham.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/XCham.sol#725-731)\ncontractURI() should be declared external:\n\t- XCham.contractURI() (repositories/verified-smart-contracts/XCham.sol#1008-1010)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/XCham.sol analyzed (10 contracts with 75 detectors), 53 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/OracleAggregator.sol --json ./slither/OLD_verified-smart-contracts/json/OracleAggregator.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/OracleAggregator.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/OracleAggregator.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/OracleAggregator.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/OracleAggregator.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/OracleAggregator.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/OracleAggregator.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MarketToken.sol --json ./slither/OLD_verified-smart-contracts/json/MarketToken.sol.json', returncode=24, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/MarketToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nERC20.constructor(string,string,address).owner_ (repositories/verified-smart-contracts/MarketToken.sol#131) lacks a zero-check on :\n\t\t- _owner = owner_ (repositories/verified-smart-contracts/MarketToken.sol#134)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/MarketToken.sol#85-87) is never used and should be removed\nERC20._mint(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#330-340) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/MarketToken.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nVariable ERC20._balances (repositories/verified-smart-contracts/MarketToken.sol#106) is not in mixedCase\nVariable ERC20._allowances (repositories/verified-smart-contracts/MarketToken.sol#108) is not in mixedCase\nVariable ERC20._totalSupply (repositories/verified-smart-contracts/MarketToken.sol#110) is not in mixedCase\nVariable ERC20._owner (repositories/verified-smart-contracts/MarketToken.sol#111) is not in mixedCase\nVariable ERC20._name (repositories/verified-smart-contracts/MarketToken.sol#113) is not in mixedCase\nVariable ERC20._symbol (repositories/verified-smart-contracts/MarketToken.sol#114) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nMarketToken.constructor() (repositories/verified-smart-contracts/MarketToken.sol#445-448) uses literals with too many digits:\n\t- _totalSupply = 21000000 * 10 ** 18 (repositories/verified-smart-contracts/MarketToken.sol#446)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/MarketToken.sol#140-142)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/MarketToken.sol#148-150)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/MarketToken.sol#165-167)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/MarketToken.sol#172-174)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/MarketToken.sol#179-181)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#191-194)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/MarketToken.sol#199-201)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#210-213)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#228-242)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#256-259)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#275-283)\nburn(address,uint256) should be declared external:\n\t- ERC20.burn(address,uint256) (repositories/verified-smart-contracts/MarketToken.sol#354-356)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/MarketToken.sol analyzed (5 contracts with 75 detectors), 24 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Forest.sol --json ./slither/OLD_verified-smart-contracts/json/Forest.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Forest.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Forest.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/Forest.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Forest.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Forest.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Forest.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/WeaponsVault.sol --json ./slither/OLD_verified-smart-contracts/json/WeaponsVault.sol.json', returncode=83, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/WeaponsVault.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nWeaponsVault.withdraw() (repositories/verified-smart-contracts/WeaponsVault.sol#1791-1794) sends eth to arbitrary user\n\tDangerous calls:\n\t- address(msg.sender).transfer(balance) (repositories/verified-smart-contracts/WeaponsVault.sol#1793)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#1034-1055) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/WeaponsVault.sol#1041-1051)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nWeaponsVault.constructor(string,string,string)._name (repositories/verified-smart-contracts/WeaponsVault.sol#1686) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/WeaponsVault.sol#688) (state variable)\nWeaponsVault.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/WeaponsVault.sol#1687) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/WeaponsVault.sol#691) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/WeaponsVault.sol#1041)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#1034-1055) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/WeaponsVault.sol#1042)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WeaponsVault.sol#1043)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#1034-1055) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/WeaponsVault.sol#1044)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WeaponsVault.sol#1043)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#1034-1055) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/WeaponsVault.sol#1048)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/WeaponsVault.sol#374-384) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WeaponsVault.sol#380-382)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#543-563) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WeaponsVault.sol#555-558)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#1034-1055) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WeaponsVault.sol#1047-1049)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#15)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#41)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#196)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#222)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#265)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#351)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#578)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#618)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#644)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#677)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1094)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1260)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1492)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1564)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1595)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1665)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#427-429) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#437-443) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#456-462) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WeaponsVault.sol#470-481) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#516-518) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#526-535) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/WeaponsVault.sol#489-491) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#499-508) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#402-407) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#543-563) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/WeaponsVault.sol#660-662) is never used and should be removed\nSafeMath.add(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1349-1351) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1391-1393) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/WeaponsVault.sol#1447-1456) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1407-1409) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/WeaponsVault.sol#1473-1482) is never used and should be removed\nSafeMath.mul(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1377-1379) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1363-1365) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/WeaponsVault.sol#1424-1433) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1278-1284) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1320-1325) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1332-1337) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1303-1313) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1291-1296) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#301-312) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#317-327) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#15) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#41) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#196) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#222) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#265) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#351) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#578) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#618) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#644) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#677) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1094) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1260) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1492) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1564) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1595) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/WeaponsVault.sol#1665) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#402-407):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/WeaponsVault.sol#405)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WeaponsVault.sol#470-481):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/WeaponsVault.sol#479)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#499-508):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/WeaponsVault.sol#506)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WeaponsVault.sol#526-535):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/WeaponsVault.sol#533)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/WeaponsVault.sol#846) is not in mixedCase\nParameter WeaponsVault.changeSaleState(bool)._state (repositories/verified-smart-contracts/WeaponsVault.sol#1717) is not in mixedCase\nParameter WeaponsVault.mint(uint256)._mintAmount (repositories/verified-smart-contracts/WeaponsVault.sol#1725) is not in mixedCase\nParameter WeaponsVault.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/WeaponsVault.sol#1780) is not in mixedCase\nParameter WeaponsVault.setBaseExtension(string)._newBaseUriExtension (repositories/verified-smart-contracts/WeaponsVault.sol#1786) is not in mixedCase\nConstant WeaponsVault.weaponCost (repositories/verified-smart-contracts/WeaponsVault.sol#1675) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant WeaponsVault.maxSupply (repositories/verified-smart-contracts/WeaponsVault.sol#1677) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant WeaponsVault.maxMintAmount (repositories/verified-smart-contracts/WeaponsVault.sol#1679) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/WeaponsVault.sol#743-745)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/WeaponsVault.sol#750-752)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#757-762)\n\t- WeaponsVault.tokenURI(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1747-1763)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#776-786)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/WeaponsVault.sol#800-805)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#817-826)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#831-837)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1126-1129)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1141-1144)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/WeaponsVault.sol#1539-1541)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/WeaponsVault.sol#1547-1550)\nburn(uint256) should be declared external:\n\t- ERC721Burnable.burn(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1582-1586)\nreserveWeapons() should be declared external:\n\t- WeaponsVault.reserveWeapons() (repositories/verified-smart-contracts/WeaponsVault.sol#1705-1711)\nchangeSaleState(bool) should be declared external:\n\t- WeaponsVault.changeSaleState(bool) (repositories/verified-smart-contracts/WeaponsVault.sol#1717-1719)\nmint(uint256) should be declared external:\n\t- WeaponsVault.mint(uint256) (repositories/verified-smart-contracts/WeaponsVault.sol#1725-1740)\nsetBaseExtension(string) should be declared external:\n\t- WeaponsVault.setBaseExtension(string) (repositories/verified-smart-contracts/WeaponsVault.sol#1786-1788)\nwithdraw() should be declared external:\n\t- WeaponsVault.withdraw() (repositories/verified-smart-contracts/WeaponsVault.sol#1791-1794)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/WeaponsVault.sol analyzed (16 contracts with 75 detectors), 83 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DragonRascal.sol --json ./slither/OLD_verified-smart-contracts/json/DragonRascal.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DragonRascal.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DragonRascal.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/DragonRascal.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/DragonRascal.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/DragonRascal.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/DragonRascal.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DoodleMfers.sol --json ./slither/OLD_verified-smart-contracts/json/DoodleMfers.sol.json', returncode=76, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DoodleMfers.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DoodleMfers.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/DoodleMfers.sol\n\n\n\x1b[91m\nDoodleMfers.withdraw() (repositories/verified-smart-contracts/DoodleMfers.sol#1398-1404) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/DoodleMfers.sol#1401)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nDoodleMfers.walletOfOwner(address).i (repositories/verified-smart-contracts/DoodleMfers.sol#1341) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#1072-1093) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoodleMfers.sol#1079-1089)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nDoodleMfers.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/DoodleMfers.sol#1303) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/DoodleMfers.sol#714) (state variable)\nDoodleMfers.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/DoodleMfers.sol#1304) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/DoodleMfers.sol#717) (state variable)\nDoodleMfers.walletOfOwner(address)._owner (repositories/verified-smart-contracts/DoodleMfers.sol#1334) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/DoodleMfers.sol#119) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/DoodleMfers.sol#1079)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#1072-1093) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/DoodleMfers.sol#1080)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoodleMfers.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#1072-1093) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/DoodleMfers.sol#1082)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoodleMfers.sol#1081)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#1072-1093) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/DoodleMfers.sol#1086)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/DoodleMfers.sol#204-214) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleMfers.sol#210-212)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#373-393) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleMfers.sol#385-388)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#1072-1093) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoodleMfers.sol#1085-1087)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDoodleMfers.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1347-1367) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/DoodleMfers.sol#1359)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'>=0.7.0<0.9.0\', \'^0.8.0\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#76)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#103)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#181)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#401)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#431)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#459)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#490)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#635)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#666)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#695)\n\t- ^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#1121)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/DoodleMfers.sol#1286)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#257-259) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#267-273) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#286-292) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoodleMfers.sol#300-311) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#346-348) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#356-365) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/DoodleMfers.sol#319-321) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#329-338) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#232-237) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#373-393) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/DoodleMfers.sol#93-95) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/DoodleMfers.sol#795-797) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#992-1004) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#42-53) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#58-68) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#76) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#103) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#181) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#401) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#431) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#459) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#490) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#635) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#666) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#695) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoodleMfers.sol#1121) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/DoodleMfers.sol#1286) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#232-237):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/DoodleMfers.sol#235)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoodleMfers.sol#300-311):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/DoodleMfers.sol#309)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#329-338):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/DoodleMfers.sol#336)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoodleMfers.sol#356-365):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/DoodleMfers.sol#363)\nLow level call in DoodleMfers.withdraw() (repositories/verified-smart-contracts/DoodleMfers.sol#1398-1404):\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/DoodleMfers.sol#1401)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/DoodleMfers.sol#869) is not in mixedCase\nParameter DoodleMfers.mint(uint256)._mintAmount (repositories/verified-smart-contracts/DoodleMfers.sol#1318) is not in mixedCase\nParameter DoodleMfers.walletOfOwner(address)._owner (repositories/verified-smart-contracts/DoodleMfers.sol#1334) is not in mixedCase\nParameter DoodleMfers.setCost(uint256)._newCost (repositories/verified-smart-contracts/DoodleMfers.sol#1374) is not in mixedCase\nParameter DoodleMfers.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/DoodleMfers.sol#1378) is not in mixedCase\nParameter DoodleMfers.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/DoodleMfers.sol#1382) is not in mixedCase\nParameter DoodleMfers.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/DoodleMfers.sol#1386) is not in mixedCase\nParameter DoodleMfers.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/DoodleMfers.sol#1390) is not in mixedCase\nParameter DoodleMfers.pause(bool)._state (repositories/verified-smart-contracts/DoodleMfers.sol#1394) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nDoodleMfers.maxSupply (repositories/verified-smart-contracts/DoodleMfers.sol#1296) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DoodleMfers.sol#152-154)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/DoodleMfers.sol#160-163)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/DoodleMfers.sol#769-771)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/DoodleMfers.sol#776-778)\ntokenURI(uint256) should be declared external:\n\t- DoodleMfers.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1347-1367)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#783-788)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#802-812)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/DoodleMfers.sol#826-828)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#840-849)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#854-860)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1168-1171)\nmint(uint256) should be declared external:\n\t- DoodleMfers.mint(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1318-1332)\nwalletOfOwner(address) should be declared external:\n\t- DoodleMfers.walletOfOwner(address) (repositories/verified-smart-contracts/DoodleMfers.sol#1334-1345)\nreveal() should be declared external:\n\t- DoodleMfers.reveal() (repositories/verified-smart-contracts/DoodleMfers.sol#1370-1372)\nsetCost(uint256) should be declared external:\n\t- DoodleMfers.setCost(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1374-1376)\nsetmaxMintAmount(uint256) should be declared external:\n\t- DoodleMfers.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/DoodleMfers.sol#1378-1380)\nsetBaseExtension(string) should be declared external:\n\t- DoodleMfers.setBaseExtension(string) (repositories/verified-smart-contracts/DoodleMfers.sol#1390-1392)\npause(bool) should be declared external:\n\t- DoodleMfers.pause(bool) (repositories/verified-smart-contracts/DoodleMfers.sol#1394-1396)\nwithdraw() should be declared external:\n\t- DoodleMfers.withdraw() (repositories/verified-smart-contracts/DoodleMfers.sol#1398-1404)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DoodleMfers.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/WAGYU.sol --json ./slither/OLD_verified-smart-contracts/json/WAGYU.sol.json', returncode=51, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/WAGYU.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/WAGYU.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/WAGYU.sol\n\n\n\x1b[92m\nWAGYU.allowance(address,address).owner (repositories/verified-smart-contracts/WAGYU.sol#939) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/WAGYU.sol#822-824) (function)\nWAGYU._approve(address,address,uint256).owner (repositories/verified-smart-contracts/WAGYU.sol#1033) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/WAGYU.sol#822-824) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ECDSA.tryRecover(bytes32,bytes).r (repositories/verified-smart-contracts/WAGYU.sol#243)\' in ECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/WAGYU.sol#238-267) potentially used before declaration: r = mload(uint256)(signature + 0x20) (repositories/verified-smart-contracts/WAGYU.sol#260)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/WAGYU.sol#238-267) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WAGYU.sol#248-252)\n\t- INLINE ASM (repositories/verified-smart-contracts/WAGYU.sol#259-262)\nECDSA.tryRecover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#296-308) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WAGYU.sol#303-306)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.4\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#5)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#74)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#158)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#187)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#409)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#435)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#792)\n\t- ^0.8.4 (repositories/verified-smart-contracts/WAGYU.sol#864)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/WAGYU.sol#426-428) is never used and should be removed\nECDSA._throwError(ECDSA.RecoverError) (repositories/verified-smart-contracts/WAGYU.sol#204-216) is never used and should be removed\nECDSA.recover(bytes32,bytes) (repositories/verified-smart-contracts/WAGYU.sol#283-287) is never used and should be removed\nECDSA.recover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#315-323) is never used and should be removed\nECDSA.recover(bytes32,uint8,bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#366-375) is never used and should be removed\nECDSA.toEthSignedMessageHash(bytes32) (repositories/verified-smart-contracts/WAGYU.sol#385-389) is never used and should be removed\nECDSA.toTypedDataHash(bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#400-402) is never used and should be removed\nECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/WAGYU.sol#238-267) is never used and should be removed\nECDSA.tryRecover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#296-308) is never used and should be removed\nECDSA.tryRecover(bytes32,uint8,bytes32,bytes32) (repositories/verified-smart-contracts/WAGYU.sol#331-360) is never used and should be removed\nERC20._burn(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#705-720) is never used and should be removed\nERC20._mint(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#682-692) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/WAGYU.sol#41-52) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/WAGYU.sol#57-67) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/WAGYU.sol#16-36) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#74) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#158) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#187) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#409) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#435) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WAGYU.sol#792) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.4 (repositories/verified-smart-contracts/WAGYU.sol#864) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nWAGYU._name (repositories/verified-smart-contracts/WAGYU.sol#882) should be constant\nWAGYU._symbol (repositories/verified-smart-contracts/WAGYU.sol#883) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/WAGYU.sol#492-494)\n\t- WAGYU.name() (repositories/verified-smart-contracts/WAGYU.sol#914-916)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/WAGYU.sol#500-502)\n\t- WAGYU.symbol() (repositories/verified-smart-contracts/WAGYU.sol#918-920)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/WAGYU.sol#517-519)\n\t- WAGYU.decimals() (repositories/verified-smart-contracts/WAGYU.sol#922-924)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/WAGYU.sol#524-526)\n\t- WAGYU.totalSupply() (repositories/verified-smart-contracts/WAGYU.sol#926-928)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/WAGYU.sol#531-533)\n\t- WAGYU.balanceOf(address) (repositories/verified-smart-contracts/WAGYU.sol#930-932)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#543-546)\n\t- WAGYU.transfer(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#934-937)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/WAGYU.sol#551-553)\n\t- WAGYU.allowance(address,address) (repositories/verified-smart-contracts/WAGYU.sol#939-941)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#562-565)\n\t- WAGYU.approve(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#943-946)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#580-594)\n\t- WAGYU.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#948-964)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#608-611)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#627-635)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/WAGYU.sol#841-843)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/WAGYU.sol#849-852)\nmint(address,uint256) should be declared external:\n\t- WAGYU.mint(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#894-896)\nburn(address,uint256) should be declared external:\n\t- WAGYU.burn(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#898-900)\nsetController(address,bool) should be declared external:\n\t- WAGYU.setController(address,bool) (repositories/verified-smart-contracts/WAGYU.sol#904-906)\nsetAuthorizedAddress(address,bool) should be declared external:\n\t- WAGYU.setAuthorizedAddress(address,bool) (repositories/verified-smart-contracts/WAGYU.sol#908-910)\nincreaseAllowance(address,uint256) should be declared external:\n\t- WAGYU.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#966-969)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- WAGYU.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/WAGYU.sol#971-979)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/WAGYU.sol analyzed (8 contracts with 75 detectors), 51 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol --json ./slither/OLD_verified-smart-contracts/json/AllowedAdapterIncomingAssetsPolicy.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum definition.\x1b[0m\n --> ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/AllowedAdapterIncomingAssetsPolicy.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/NFTHunts.sol --json ./slither/OLD_verified-smart-contracts/json/NFTHunts.sol.json', returncode=73, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/NFTHunts.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/NFTHunts.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/NFTHunts.sol\n\n\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#1277-1298) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/NFTHunts.sol#1284-1294)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nNFTHunts.setStatus(uint8)._status (repositories/verified-smart-contracts/NFTHunts.sol#1571) shadows:\n\t- ReentrancyGuard._status (repositories/verified-smart-contracts/NFTHunts.sol#39) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nNFTHunts.setWallet(address)._wallet (repositories/verified-smart-contracts/NFTHunts.sol#1559) lacks a zero-check on :\n\t\t- wallet = _wallet (repositories/verified-smart-contracts/NFTHunts.sol#1560)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/NFTHunts.sol#1284)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#1277-1298) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/NFTHunts.sol#1285)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/NFTHunts.sol#1286)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#1277-1298) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/NFTHunts.sol#1287)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/NFTHunts.sol#1286)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#1277-1298) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/NFTHunts.sol#1291)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/NFTHunts.sol#409-419) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTHunts.sol#415-417)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#578-598) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTHunts.sol#590-593)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#1277-1298) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTHunts.sol#1290-1292)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.7\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#72)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#118)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#188)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#215)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#308)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#386)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#606)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#636)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#664)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#695)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#840)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#871)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#900)\n\t- ^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#1326)\n\t- ^0.8.7 (repositories/verified-smart-contracts/NFTHunts.sol#1489)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#462-464) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#472-478) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#491-497) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/NFTHunts.sol#505-516) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#551-553) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#561-570) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/NFTHunts.sol#524-526) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#534-543) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#437-442) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#578-598) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/NFTHunts.sol#205-207) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/NFTHunts.sol#100-106) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/NFTHunts.sol#108-110) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/NFTHunts.sol#1000-1002) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1197-1209) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#154-165) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#170-180) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#72) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#118) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#188) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#215) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#308) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#386) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#606) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#636) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#664) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#695) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#840) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#871) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#900) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTHunts.sol#1326) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.7 (repositories/verified-smart-contracts/NFTHunts.sol#1489) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#437-442):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/NFTHunts.sol#440)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/NFTHunts.sol#505-516):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/NFTHunts.sol#514)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#534-543):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/NFTHunts.sol#541)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/NFTHunts.sol#561-570):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/NFTHunts.sol#568)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/NFTHunts.sol#1074) is not in mixedCase\nParameter NFTHunts.setWallet(address)._wallet (repositories/verified-smart-contracts/NFTHunts.sol#1559) is not in mixedCase\nParameter NFTHunts.setStatus(uint8)._status (repositories/verified-smart-contracts/NFTHunts.sol#1571) is not in mixedCase\nVariable NFTHunts._baseTokenURI (repositories/verified-smart-contracts/NFTHunts.sol#1502) is not in mixedCase\nVariable NFTHunts.Whitelist (repositories/verified-smart-contracts/NFTHunts.sol#1504) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nNFTHunts.maxSupply (repositories/verified-smart-contracts/NFTHunts.sol#1500) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/NFTHunts.sol#357-359)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/NFTHunts.sol#365-368)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/NFTHunts.sol#974-976)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/NFTHunts.sol#981-983)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1007-1017)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/NFTHunts.sol#1031-1033)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1045-1054)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1059-1065)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1358-1361)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1373-1376)\nmint(uint256) should be declared external:\n\t- NFTHunts.mint(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1512-1537)\nsetPrice(uint256) should be declared external:\n\t- NFTHunts.setPrice(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1553-1555)\nsetMintLimit(uint256) should be declared external:\n\t- NFTHunts.setMintLimit(uint256) (repositories/verified-smart-contracts/NFTHunts.sol#1556-1558)\nsetWallet(address) should be declared external:\n\t- NFTHunts.setWallet(address) (repositories/verified-smart-contracts/NFTHunts.sol#1559-1561)\nsetWhitelist(address[]) should be declared external:\n\t- NFTHunts.setWhitelist(address[]) (repositories/verified-smart-contracts/NFTHunts.sol#1562-1566)\nwithdraw() should be declared external:\n\t- NFTHunts.withdraw() (repositories/verified-smart-contracts/NFTHunts.sol#1567-1570)\npause() should be declared external:\n\t- NFTHunts.pause() (repositories/verified-smart-contracts/NFTHunts.sol#1574-1576)\nunpause() should be declared external:\n\t- NFTHunts.unpause() (repositories/verified-smart-contracts/NFTHunts.sol#1577-1579)\nsetBaseURI(string) should be declared external:\n\t- NFTHunts.setBaseURI(string) (repositories/verified-smart-contracts/NFTHunts.sol#1580-1582)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/NFTHunts.sol analyzed (16 contracts with 75 detectors), 73 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PRIMEINU.sol --json ./slither/OLD_verified-smart-contracts/json/PRIMEINU.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PRIMEINU.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PRIMEINU.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/PRIMEINU.sol:3:1:\n  |\n3 | pragma solidity =0.8.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PRIMEINU.sol:3:1:\n  |\n3 | pragma solidity =0.8.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PRIMEINU.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PRIMEINU.sol:3:1:\n  |\n3 | pragma solidity =0.8.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol --json ./slither/OLD_verified-smart-contracts/json/MerkleDistributorSimple.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum definition.\x1b[0m\n --> ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/MerkleDistributorSimple.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PAWS.sol --json ./slither/OLD_verified-smart-contracts/json/PAWS.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PAWS.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PAWS.sol:\n\x1b[91mError: No visibility specified. Did you intend to add "public"?\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:287:5:\n    |\n287 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\x1b[91mError: Overriding function changes state mutability from "view" to "pure".\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:352:5:\n    |\n352 |     function totalSupply() external pure override returns (uint256) { if (_tTotal == 0) { revert(); } return _tTotal; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:31:3:\n   |\n31 |   function totalSupply() external view returns (uint256);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\x1b[91mError: Overriding function changes state mutability from "view" to "pure".\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:353:5:\n    |\n353 |     function decimals() external pure override returns (uint8) { return _decimals; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:36:3:\n   |\n36 |   function decimals() external view returns (uint8);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\x1b[91mError: Overriding function changes state mutability from "view" to "pure".\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:354:5:\n    |\n354 |     function symbol() external pure override returns (string memory) { return _symbol; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:41:3:\n   |\n41 |   function symbol() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\x1b[91mError: Overriding function changes state mutability from "view" to "pure".\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:355:5:\n    |\n355 |     function name() external pure override returns (string memory) { return _name; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:46:3:\n   |\n46 |   function name() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n   --> ./repositories/verified-smart-contracts/PAWS.sol:214:57:\n    |\n214 |     uint256 constant private _tTotal = startingSupply * 10**_decimals;\n    |                                                         ^^^^^^^^^^^^^\n\n\x1b[91mError: Member "chainid" not found or not visible after argument-dependent lookup in block.\x1b[0m\n   --> ./repositories/verified-smart-contracts/PAWS.sol:293:13:\n    |\n293 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: No visibility specified. Did you intend to add "public"?\n   --> ./repositories/verified-smart-contracts/PAWS.sol:287:5:\n    |\n287 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:352:5:\n    |\n352 |     function totalSupply() external pure override returns (uint256) { if (_tTotal == 0) { revert(); } return _tTotal; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:31:3:\n   |\n31 |   function totalSupply() external view returns (uint256);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:353:5:\n    |\n353 |     function decimals() external pure override returns (uint8) { return _decimals; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:36:3:\n   |\n36 |   function decimals() external view returns (uint8);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:354:5:\n    |\n354 |     function symbol() external pure override returns (string memory) { return _symbol; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:41:3:\n   |\n41 |   function symbol() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:355:5:\n    |\n355 |     function name() external pure override returns (string memory) { return _name; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:46:3:\n   |\n46 |   function name() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n   --> ./repositories/verified-smart-contracts/PAWS.sol:214:57:\n    |\n214 |     uint256 constant private _tTotal = startingSupply * 10**_decimals;\n    |                                                         ^^^^^^^^^^^^^\n\nError: Member "chainid" not found or not visible after argument-dependent lookup in block.\n   --> ./repositories/verified-smart-contracts/PAWS.sol:293:13:\n    |\n293 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PAWS.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: No visibility specified. Did you intend to add "public"?\n   --> ./repositories/verified-smart-contracts/PAWS.sol:287:5:\n    |\n287 |     constructor () payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:352:5:\n    |\n352 |     function totalSupply() external pure override returns (uint256) { if (_tTotal == 0) { revert(); } return _tTotal; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:31:3:\n   |\n31 |   function totalSupply() external view returns (uint256);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:353:5:\n    |\n353 |     function decimals() external pure override returns (uint8) { return _decimals; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:36:3:\n   |\n36 |   function decimals() external view returns (uint8);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:354:5:\n    |\n354 |     function symbol() external pure override returns (string memory) { return _symbol; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:41:3:\n   |\n41 |   function symbol() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Overriding function changes state mutability from "view" to "pure".\n   --> ./repositories/verified-smart-contracts/PAWS.sol:355:5:\n    |\n355 |     function name() external pure override returns (string memory) { return _name; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: Overridden function is here:\n  --> ./repositories/verified-smart-contracts/PAWS.sol:46:3:\n   |\n46 |   function name() external view returns (string memory);\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n   --> ./repositories/verified-smart-contracts/PAWS.sol:214:57:\n    |\n214 |     uint256 constant private _tTotal = startingSupply * 10**_decimals;\n    |                                                         ^^^^^^^^^^^^^\n\nError: Member "chainid" not found or not visible after argument-dependent lookup in block.\n   --> ./repositories/verified-smart-contracts/PAWS.sol:293:13:\n    |\n293 |         if (block.chainid == 56) {\n    |             ^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SavageWolves.sol --json ./slither/OLD_verified-smart-contracts/json/SavageWolves.sol.json', returncode=110, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/SavageWolves.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/SavageWolves.sol:\nWarning: Contract code size is 26290 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n   --> repositories/verified-smart-contracts/SavageWolves.sol:679:1:\n    |\n679 | contract SavageWolves is ERC721Enumerable, Ownable {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nSavageWolves.withdraw(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#903-912) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: _amount}() (repositories/verified-smart-contracts/SavageWolves.sol#909)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nSavageWolves.claimTokens() (repositories/verified-smart-contracts/SavageWolves.sol#788-796) ignores return value by savage.transfer(msg.sender,tokens) (repositories/verified-smart-contracts/SavageWolves.sol#791)\nSavageWolves.claimById(uint8) (repositories/verified-smart-contracts/SavageWolves.sol#798-805) ignores return value by savage.transfer(msg.sender,tokensById) (repositories/verified-smart-contracts/SavageWolves.sol#803)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nSavageWolves.calculateTokens(address) (repositories/verified-smart-contracts/SavageWolves.sol#764-775) performs a multiplication on the result of a division:\n\t-tokens += ((block.timestamp - userPerIdMintingTime[_user][walletOfOwner(_user)[i]]).div(86400)).mul(5) (repositories/verified-smart-contracts/SavageWolves.sol#769)\nSavageWolves.calculateTokensId(address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#777-786) performs a multiplication on the result of a division:\n\t-tokens += ((block.timestamp - userPerIdMintingTime[_user][_id]) / (86400)) * 5 (repositories/verified-smart-contracts/SavageWolves.sol#781)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nReentrancy in SavageWolves.claimById(uint8) (repositories/verified-smart-contracts/SavageWolves.sol#798-805):\n\tExternal calls:\n\t- savage.transfer(msg.sender,tokensById) (repositories/verified-smart-contracts/SavageWolves.sol#803)\n\tState variables written after the call(s):\n\t- userPerIdMintingTime[msg.sender][_tokenId] = block.timestamp (repositories/verified-smart-contracts/SavageWolves.sol#804)\nReentrancy in SavageWolves.claimTokens() (repositories/verified-smart-contracts/SavageWolves.sol#788-796):\n\tExternal calls:\n\t- savage.transfer(msg.sender,tokens) (repositories/verified-smart-contracts/SavageWolves.sol#791)\n\tState variables written after the call(s):\n\t- userPerIdMintingTime[msg.sender][walletOfOwner(msg.sender)[i]] = block.timestamp (repositories/verified-smart-contracts/SavageWolves.sol#794)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nSavageWolves.withdraw(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#903-912) contains a tautology or contradiction:\n\t- require(bool,string)(contractBalance() >= 0,contract has no ethers!) (repositories/verified-smart-contracts/SavageWolves.sol#904)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction\x1b[0m\n\x1b[93m\nSavageWolves.calculateTokens(address).tokens (repositories/verified-smart-contracts/SavageWolves.sol#765) is a local variable never initialized\nSavageWolves.calculateTokensId(address,uint256).tokens (repositories/verified-smart-contracts/SavageWolves.sol#778) is a local variable never initialized\nSavageWolves.walletOfOwner(address).i (repositories/verified-smart-contracts/SavageWolves.sol#852) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#506-527) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/SavageWolves.sol#513-523)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nSavageWolves.constructor(string,string,string,string,Savage)._name (repositories/verified-smart-contracts/SavageWolves.sol#714) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/SavageWolves.sol#303) (state variable)\nSavageWolves.constructor(string,string,string,string,Savage)._symbol (repositories/verified-smart-contracts/SavageWolves.sol#715) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/SavageWolves.sol#305) (state variable)\nSavageWolves.walletOfOwner(address)._owner (repositories/verified-smart-contracts/SavageWolves.sol#849) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/SavageWolves.sol#631) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/SavageWolves.sol#513)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#506-527) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/SavageWolves.sol#514)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SavageWolves.sol#515)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#506-527) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/SavageWolves.sol#516)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SavageWolves.sol#515)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#506-527) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/SavageWolves.sol#520)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in SavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761):\n\tExternal calls:\n\t- _safeMint(msg.sender,supply + i) (repositories/verified-smart-contracts/SavageWolves.sol#739)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/SavageWolves.sol#513-523)\n\tState variables written after the call(s):\n\t- isMinter[msg.sender][supply + i] = true (repositories/verified-smart-contracts/SavageWolves.sol#741)\n\t- userPerIdMintingTime[msg.sender][supply + i] = block.timestamp (repositories/verified-smart-contracts/SavageWolves.sol#740)\nReentrancy in SavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761):\n\tExternal calls:\n\t- _safeMint(msg.sender,supply + i_scope_0) (repositories/verified-smart-contracts/SavageWolves.sol#753)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/SavageWolves.sol#513-523)\n\tState variables written after the call(s):\n\t- isMinter[msg.sender][supply + i_scope_0] = true (repositories/verified-smart-contracts/SavageWolves.sol#755)\n\t- userPerIdMintingTime[msg.sender][supply + i_scope_0] = block.timestamp (repositories/verified-smart-contracts/SavageWolves.sol#754)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/SavageWolves.sol#126-133) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SavageWolves.sol#129-131)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#205-224) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SavageWolves.sol#216-219)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#506-527) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SavageWolves.sol#519-521)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nSavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761) compares to a boolean constant:\n\t-isPresaleStart == true (repositories/verified-smart-contracts/SavageWolves.sol#732)\nSavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761) compares to a boolean constant:\n\t-isPublicStart == true (repositories/verified-smart-contracts/SavageWolves.sol#747)\nSavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761) compares to a boolean constant:\n\t-require(bool,string)(isPresaleStart == true || isPublicStart == true,Neither of the sale is started yet!) (repositories/verified-smart-contracts/SavageWolves.sol#728)\nSavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761) compares to a boolean constant:\n\t-require(bool,string)(isWhitelisted[msg.sender] == true,You\'re not whitelisted!) (repositories/verified-smart-contracts/SavageWolves.sol#733)\nSavageWolves.calculateTokens(address) (repositories/verified-smart-contracts/SavageWolves.sol#764-775) compares to a boolean constant:\n\t-isMinter[_user][walletOfOwner(_user)[i]] == true && userPerIdMintingTime[_user][walletOfOwner(_user)[i]] > 0 (repositories/verified-smart-contracts/SavageWolves.sol#767)\nSavageWolves.calculateTokensId(address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#777-786) compares to a boolean constant:\n\t-isMinter[_user][_id] == true && userPerIdMintingTime[_user][_id] > 0 (repositories/verified-smart-contracts/SavageWolves.sol#780)\nSavageWolves.tokenURI(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#858-877) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/SavageWolves.sol#869)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#142-144) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#146-152) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#154-160) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SavageWolves.sol#162-173) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#190-192) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#194-203) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/SavageWolves.sol#175-177) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#179-188) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#135-140) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#205-224) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/SavageWolves.sol#291-293) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/SavageWolves.sol#356-358) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#468-479) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#255-258) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#234-238) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#96-107) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#109-119) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#10) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#52) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#63) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#71) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#122) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#261) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#272) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#284) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#296) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#536) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#628) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SavageWolves.sol#677) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#135-140):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/SavageWolves.sol#138)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SavageWolves.sol#162-173):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/SavageWolves.sol#171)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#179-188):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/SavageWolves.sol#186)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SavageWolves.sol#194-203):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/SavageWolves.sol#201)\nLow level call in SavageWolves.withdraw(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#903-912):\n\t- (os) = address(owner()).call{value: _amount}() (repositories/verified-smart-contracts/SavageWolves.sol#909)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/SavageWolves.sol#412) is not in mixedCase\nParameter SavageWolves.mint(uint256)._mintAmount (repositories/verified-smart-contracts/SavageWolves.sol#727) is not in mixedCase\nParameter SavageWolves.calculateTokens(address)._user (repositories/verified-smart-contracts/SavageWolves.sol#764) is not in mixedCase\nParameter SavageWolves.calculateTokensId(address,uint256)._user (repositories/verified-smart-contracts/SavageWolves.sol#777) is not in mixedCase\nParameter SavageWolves.calculateTokensId(address,uint256)._id (repositories/verified-smart-contracts/SavageWolves.sol#777) is not in mixedCase\nParameter SavageWolves.claimById(uint8)._tokenId (repositories/verified-smart-contracts/SavageWolves.sol#798) is not in mixedCase\nParameter SavageWolves.setPresaleStatus(bool)._state (repositories/verified-smart-contracts/SavageWolves.sol#813) is not in mixedCase\nParameter SavageWolves.setPublicMintStatus(bool)._state (repositories/verified-smart-contracts/SavageWolves.sol#817) is not in mixedCase\nParameter SavageWolves.setPresaleMaxSupply(uint256)._newSupply (repositories/verified-smart-contracts/SavageWolves.sol#821) is not in mixedCase\nParameter SavageWolves.setPublicMaxSupply(uint256)._newSupply (repositories/verified-smart-contracts/SavageWolves.sol#825) is not in mixedCase\nParameter SavageWolves.setPresaleCost(uint256)._newCost (repositories/verified-smart-contracts/SavageWolves.sol#829) is not in mixedCase\nParameter SavageWolves.setPublicCost(uint256)._newCost (repositories/verified-smart-contracts/SavageWolves.sol#833) is not in mixedCase\nParameter SavageWolves.addWhitelist(address[])._addresses (repositories/verified-smart-contracts/SavageWolves.sol#837) is not in mixedCase\nParameter SavageWolves.removeWhitelist(address[])._addresses (repositories/verified-smart-contracts/SavageWolves.sol#843) is not in mixedCase\nParameter SavageWolves.walletOfOwner(address)._owner (repositories/verified-smart-contracts/SavageWolves.sol#849) is not in mixedCase\nParameter SavageWolves.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/SavageWolves.sol#883) is not in mixedCase\nParameter SavageWolves.setNftPerAddressLimit(uint256)._limit (repositories/verified-smart-contracts/SavageWolves.sol#887) is not in mixedCase\nParameter SavageWolves.setNftPresaleLimit(uint256)._limit (repositories/verified-smart-contracts/SavageWolves.sol#891) is not in mixedCase\nParameter SavageWolves.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/SavageWolves.sol#895) is not in mixedCase\nParameter SavageWolves.withdraw(uint256)._amount (repositories/verified-smart-contracts/SavageWolves.sol#903) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nSavageWolves.baseExtension (repositories/verified-smart-contracts/SavageWolves.sol#686) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/SavageWolves.sol#341-343)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/SavageWolves.sol#345-347)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#349-354)\n\t- SavageWolves.tokenURI(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#858-877)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#360-370)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/SavageWolves.sol#378-383)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#389-398)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/SavageWolves.sol#400-406)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#561-564)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/SavageWolves.sol#648-650)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/SavageWolves.sol#652-655)\nmint(uint256) should be declared external:\n\t- SavageWolves.mint(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#727-761)\nclaimTokens() should be declared external:\n\t- SavageWolves.claimTokens() (repositories/verified-smart-contracts/SavageWolves.sol#788-796)\nclaimById(uint8) should be declared external:\n\t- SavageWolves.claimById(uint8) (repositories/verified-smart-contracts/SavageWolves.sol#798-805)\nsetPresaleStatus(bool) should be declared external:\n\t- SavageWolves.setPresaleStatus(bool) (repositories/verified-smart-contracts/SavageWolves.sol#813-815)\nsetPublicMintStatus(bool) should be declared external:\n\t- SavageWolves.setPublicMintStatus(bool) (repositories/verified-smart-contracts/SavageWolves.sol#817-819)\nsetPresaleMaxSupply(uint256) should be declared external:\n\t- SavageWolves.setPresaleMaxSupply(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#821-823)\nsetPublicMaxSupply(uint256) should be declared external:\n\t- SavageWolves.setPublicMaxSupply(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#825-827)\nsetPresaleCost(uint256) should be declared external:\n\t- SavageWolves.setPresaleCost(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#829-831)\nsetPublicCost(uint256) should be declared external:\n\t- SavageWolves.setPublicCost(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#833-835)\nreveal() should be declared external:\n\t- SavageWolves.reveal() (repositories/verified-smart-contracts/SavageWolves.sol#879-881)\nsetNftPerAddressLimit(uint256) should be declared external:\n\t- SavageWolves.setNftPerAddressLimit(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#887-889)\nsetNftPresaleLimit(uint256) should be declared external:\n\t- SavageWolves.setNftPresaleLimit(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#891-893)\nwithdraw(uint256) should be declared external:\n\t- SavageWolves.withdraw(uint256) (repositories/verified-smart-contracts/SavageWolves.sol#903-912)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/SavageWolves.sol analyzed (15 contracts with 75 detectors), 110 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/KyokoPawn.sol --json ./slither/OLD_verified-smart-contracts/json/KyokoPawn.sol.json', returncode=90, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/KyokoPawn.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/KyokoPawn.sol:\nWarning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.8.23;"\n--> repositories/verified-smart-contracts/KyokoPawn.sol\n\n\n\x1b[91m\nOwnableUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#880) shadows:\n\t- ContextUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#780)\nERC721Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#1294) shadows:\n\t- ERC165Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#763)\n\t- ContextUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#780)\nERC721EnumerableUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#1454) shadows:\n\t- ERC721Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#1294)\n\t- ERC165Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#763)\n\t- ContextUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#780)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing\x1b[0m\n\x1b[91m\nKyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553) ignores return value by IERC20Upgradeable(applyToken).transferFrom(msg.sender,multiSign,totalCost) (repositories/verified-smart-contracts/KyokoPawn.sol#1542-1546)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nContract locking ether found:\n\tContract KyokoPawn (repositories/verified-smart-contracts/KyokoPawn.sol#1457-1571) has payable functions:\n\t - KyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553)\n\tBut does not have a function to withdraw the ether\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether\x1b[0m\n\x1b[93m\nReentrancy in KyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553):\n\tExternal calls:\n\t- IERC20Upgradeable(applyToken).transferFrom(msg.sender,multiSign,totalCost) (repositories/verified-smart-contracts/KyokoPawn.sol#1542-1546)\n\tState variables written after the call(s):\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _allTokens.push(tokenId) (repositories/verified-smart-contracts/KyokoPawn.sol#1399)\n\t\t- _allTokens[tokenIndex] = lastTokenId (repositories/verified-smart-contracts/KyokoPawn.sol#1447)\n\t\t- _allTokens.pop() (repositories/verified-smart-contracts/KyokoPawn.sol#1452)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1252-1273) ignores return value by IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/KyokoPawn.sol#1259-1269)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nKyokoPawn.initialize(address)._multiSign (repositories/verified-smart-contracts/KyokoPawn.sol#1477) lacks a zero-check on :\n\t\t- multiSign = _multiSign (repositories/verified-smart-contracts/KyokoPawn.sol#1480)\nKyokoPawn.setApplyToken(address)._applyToken (repositories/verified-smart-contracts/KyokoPawn.sol#1519) lacks a zero-check on :\n\t\t- applyToken = _applyToken (repositories/verified-smart-contracts/KyokoPawn.sol#1520)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/KyokoPawn.sol#1259)\' in ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1252-1273) potentially used before declaration: retval == IERC721ReceiverUpgradeable.onERC721Received.selector (repositories/verified-smart-contracts/KyokoPawn.sol#1260)\nVariable \'ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/KyokoPawn.sol#1261)\' in ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1252-1273) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/KyokoPawn.sol#1262)\nVariable \'ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/KyokoPawn.sol#1261)\' in ERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1252-1273) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/KyokoPawn.sol#1266)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in KyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553):\n\tExternal calls:\n\t- IERC20Upgradeable(applyToken).transferFrom(msg.sender,multiSign,totalCost) (repositories/verified-smart-contracts/KyokoPawn.sol#1542-1546)\n\tState variables written after the call(s):\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _allTokensIndex[tokenId] = _allTokens.length (repositories/verified-smart-contracts/KyokoPawn.sol#1398)\n\t\t- _allTokensIndex[lastTokenId] = tokenIndex (repositories/verified-smart-contracts/KyokoPawn.sol#1448)\n\t\t- delete _allTokensIndex[tokenId] (repositories/verified-smart-contracts/KyokoPawn.sol#1451)\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _balances[to] += 1 (repositories/verified-smart-contracts/KyokoPawn.sol#1156)\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _ownedTokens[to][length] = tokenId (repositories/verified-smart-contracts/KyokoPawn.sol#1389)\n\t\t- _ownedTokens[from][tokenIndex] = lastTokenId (repositories/verified-smart-contracts/KyokoPawn.sol#1421)\n\t\t- delete _ownedTokens[from][lastTokenIndex] (repositories/verified-smart-contracts/KyokoPawn.sol#1427)\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _ownedTokensIndex[tokenId] = length (repositories/verified-smart-contracts/KyokoPawn.sol#1390)\n\t\t- _ownedTokensIndex[lastTokenId] = tokenIndex (repositories/verified-smart-contracts/KyokoPawn.sol#1422)\n\t\t- delete _ownedTokensIndex[tokenId] (repositories/verified-smart-contracts/KyokoPawn.sol#1426)\n\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\n\t\t- _owners[tokenId] = to (repositories/verified-smart-contracts/KyokoPawn.sol#1157)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in KyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553):\n\tExternal calls:\n\t- IERC20Upgradeable(applyToken).transferFrom(msg.sender,multiSign,totalCost) (repositories/verified-smart-contracts/KyokoPawn.sol#1542-1546)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,tokenId) (repositories/verified-smart-contracts/KyokoPawn.sol#1159)\n\t\t- _mint(msg.sender,mintIndex) (repositories/verified-smart-contracts/KyokoPawn.sol#1550)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddressUpgradeable.isContract(address) (repositories/verified-smart-contracts/KyokoPawn.sol#314-324) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/KyokoPawn.sol#320-322)\nAddressUpgradeable.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/KyokoPawn.sol#456-476) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/KyokoPawn.sol#468-471)\nERC721Upgradeable._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1252-1273) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/KyokoPawn.sol#1265-1267)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddressUpgradeable.functionCall(address,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#367-369) is never used and should be removed\nAddressUpgradeable.functionCall(address,bytes,string) (repositories/verified-smart-contracts/KyokoPawn.sol#377-383) is never used and should be removed\nAddressUpgradeable.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#396-402) is never used and should be removed\nAddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/KyokoPawn.sol#410-421) is never used and should be removed\nAddressUpgradeable.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#429-431) is never used and should be removed\nAddressUpgradeable.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/KyokoPawn.sol#439-448) is never used and should be removed\nAddressUpgradeable.sendValue(address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#342-347) is never used and should be removed\nAddressUpgradeable.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/KyokoPawn.sol#456-476) is never used and should be removed\nContextUpgradeable.__Context_init() (repositories/verified-smart-contracts/KyokoPawn.sol#767-769) is never used and should be removed\nContextUpgradeable._msgData() (repositories/verified-smart-contracts/KyokoPawn.sol#777-779) is never used and should be removed\nERC165Upgradeable.__ERC165_init() (repositories/verified-smart-contracts/KyokoPawn.sol#751-753) is never used and should be removed\nERC721EnumerableUpgradeable.__ERC721Enumerable_init() (repositories/verified-smart-contracts/KyokoPawn.sol#1298-1302) is never used and should be removed\nERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (repositories/verified-smart-contracts/KyokoPawn.sol#1304-1305) is never used and should be removed\nERC721Upgradeable._baseURI() (repositories/verified-smart-contracts/KyokoPawn.sol#975-977) is never used and should be removed\nERC721Upgradeable._burn(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1172-1184) is never used and should be removed\nERC721Upgradeable._safeMint(address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1118-1120) is never used and should be removed\nERC721Upgradeable._safeMint(address,uint256,bytes) (repositories/verified-smart-contracts/KyokoPawn.sol#1126-1136) is never used and should be removed\nSafeMathUpgradeable.div(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#202-204) is never used and should be removed\nSafeMathUpgradeable.div(uint256,uint256,string) (repositories/verified-smart-contracts/KyokoPawn.sol#258-267) is never used and should be removed\nSafeMathUpgradeable.mod(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#218-220) is never used and should be removed\nSafeMathUpgradeable.mod(uint256,uint256,string) (repositories/verified-smart-contracts/KyokoPawn.sol#284-293) is never used and should be removed\nSafeMathUpgradeable.sub(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#174-176) is never used and should be removed\nSafeMathUpgradeable.sub(uint256,uint256,string) (repositories/verified-smart-contracts/KyokoPawn.sol#235-244) is never used and should be removed\nSafeMathUpgradeable.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#89-95) is never used and should be removed\nSafeMathUpgradeable.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#131-136) is never used and should be removed\nSafeMathUpgradeable.tryMod(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#143-148) is never used and should be removed\nSafeMathUpgradeable.tryMul(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#114-124) is never used and should be removed\nSafeMathUpgradeable.trySub(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#102-107) is never used and should be removed\nStringsUpgradeable.toHexString(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#510-521) is never used and should be removed\nStringsUpgradeable.toHexString(uint256,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#526-536) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in AddressUpgradeable.sendValue(address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#342-347):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/KyokoPawn.sol#345)\nLow level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/KyokoPawn.sol#410-421):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/KyokoPawn.sol#419)\nLow level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/KyokoPawn.sol#439-448):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/KyokoPawn.sol#446)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nFunction ERC165Upgradeable.__ERC165_init() (repositories/verified-smart-contracts/KyokoPawn.sol#751-753) is not in mixedCase\nFunction ERC165Upgradeable.__ERC165_init_unchained() (repositories/verified-smart-contracts/KyokoPawn.sol#755-756) is not in mixedCase\nVariable ERC165Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#763) is not in mixedCase\nFunction ContextUpgradeable.__Context_init() (repositories/verified-smart-contracts/KyokoPawn.sol#767-769) is not in mixedCase\nFunction ContextUpgradeable.__Context_init_unchained() (repositories/verified-smart-contracts/KyokoPawn.sol#771-772) is not in mixedCase\nVariable ContextUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#780) is not in mixedCase\nFunction OwnableUpgradeable.__Ownable_init() (repositories/verified-smart-contracts/KyokoPawn.sol#827-830) is not in mixedCase\nFunction OwnableUpgradeable.__Ownable_init_unchained() (repositories/verified-smart-contracts/KyokoPawn.sol#832-834) is not in mixedCase\nVariable OwnableUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#880) is not in mixedCase\nFunction ERC721Upgradeable.__ERC721_init(string,string) (repositories/verified-smart-contracts/KyokoPawn.sol#908-912) is not in mixedCase\nFunction ERC721Upgradeable.__ERC721_init_unchained(string,string) (repositories/verified-smart-contracts/KyokoPawn.sol#914-917) is not in mixedCase\nParameter ERC721Upgradeable.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/KyokoPawn.sol#1049) is not in mixedCase\nVariable ERC721Upgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#1294) is not in mixedCase\nFunction ERC721EnumerableUpgradeable.__ERC721Enumerable_init() (repositories/verified-smart-contracts/KyokoPawn.sol#1298-1302) is not in mixedCase\nFunction ERC721EnumerableUpgradeable.__ERC721Enumerable_init_unchained() (repositories/verified-smart-contracts/KyokoPawn.sol#1304-1305) is not in mixedCase\nVariable ERC721EnumerableUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#1454) is not in mixedCase\nParameter KyokoPawn.initialize(address)._multiSign (repositories/verified-smart-contracts/KyokoPawn.sol#1477) is not in mixedCase\nParameter KyokoPawn.setPreSales(KyokoPawn.INFO[])._whiteList (repositories/verified-smart-contracts/KyokoPawn.sol#1483) is not in mixedCase\nParameter KyokoPawn.setApplyToken(address)._applyToken (repositories/verified-smart-contracts/KyokoPawn.sol#1519) is not in mixedCase\nParameter KyokoPawn.setPawnPrice(uint256)._price (repositories/verified-smart-contracts/KyokoPawn.sol#1523) is not in mixedCase\nParameter KyokoPawn.mintPawnForSales(uint256)._number (repositories/verified-smart-contracts/KyokoPawn.sol#1531) is not in mixedCase\nConstant KyokoPawn.maxPawnPurchase (repositories/verified-smart-contracts/KyokoPawn.sol#1465) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nOwnableUpgradeable.__gap (repositories/verified-smart-contracts/KyokoPawn.sol#880) is never used in KyokoPawn (repositories/verified-smart-contracts/KyokoPawn.sol#1457-1571)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- OwnableUpgradeable.renounceOwnership() (repositories/verified-smart-contracts/KyokoPawn.sol#858-860)\ntransferOwnership(address) should be declared external:\n\t- OwnableUpgradeable.transferOwnership(address) (repositories/verified-smart-contracts/KyokoPawn.sol#866-869)\nname() should be declared external:\n\t- ERC721Upgradeable.name() (repositories/verified-smart-contracts/KyokoPawn.sol#949-951)\nsymbol() should be declared external:\n\t- ERC721Upgradeable.symbol() (repositories/verified-smart-contracts/KyokoPawn.sol#956-958)\ntokenURI(uint256) should be declared external:\n\t- ERC721Upgradeable.tokenURI(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#963-968)\napprove(address,uint256) should be declared external:\n\t- ERC721Upgradeable.approve(address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#982-992)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721Upgradeable.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/KyokoPawn.sol#1006-1008)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721Upgradeable.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1020-1029)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721Upgradeable.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1034-1040)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721EnumerableUpgradeable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1328-1331)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721EnumerableUpgradeable.tokenByIndex(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1343-1346)\ninitialize(address) should be declared external:\n\t- KyokoPawn.initialize(address) (repositories/verified-smart-contracts/KyokoPawn.sol#1477-1481)\nsetPreSales(KyokoPawn.INFO[]) should be declared external:\n\t- KyokoPawn.setPreSales(KyokoPawn.INFO[]) (repositories/verified-smart-contracts/KyokoPawn.sol#1483-1488)\nsetSaleState() should be declared external:\n\t- KyokoPawn.setSaleState() (repositories/verified-smart-contracts/KyokoPawn.sol#1511-1513)\nmintPawnForSales(uint256) should be declared external:\n\t- KyokoPawn.mintPawnForSales(uint256) (repositories/verified-smart-contracts/KyokoPawn.sol#1531-1553)\nmintPawn() should be declared external:\n\t- KyokoPawn.mintPawn() (repositories/verified-smart-contracts/KyokoPawn.sol#1560-1569)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/KyokoPawn.sol analyzed (16 contracts with 75 detectors), 90 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/UnchainedProject.sol --json ./slither/OLD_verified-smart-contracts/json/UnchainedProject.sol.json', returncode=77, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/UnchainedProject.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nUnchainedProject.withdraw() (repositories/verified-smart-contracts/UnchainedProject.sol#1343-1346) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/UnchainedProject.sol#1344)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nUnchainedProject.walletOfOwner(address).i (repositories/verified-smart-contracts/UnchainedProject.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/UnchainedProject.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nUnchainedProject.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/UnchainedProject.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/UnchainedProject.sol#610) (state variable)\nUnchainedProject.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/UnchainedProject.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/UnchainedProject.sol#613) (state variable)\nUnchainedProject.walletOfOwner(address)._owner (repositories/verified-smart-contracts/UnchainedProject.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/UnchainedProject.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/UnchainedProject.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/UnchainedProject.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/UnchainedProject.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/UnchainedProject.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/UnchainedProject.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/UnchainedProject.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/UnchainedProject.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UnchainedProject.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UnchainedProject.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UnchainedProject.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nUnchainedProject.tokenURI(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/UnchainedProject.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/UnchainedProject.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/UnchainedProject.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/UnchainedProject.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/UnchainedProject.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/UnchainedProject.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/UnchainedProject.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/UnchainedProject.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/UnchainedProject.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/UnchainedProject.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/UnchainedProject.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/UnchainedProject.sol#485)\nLow level call in UnchainedProject.withdraw() (repositories/verified-smart-contracts/UnchainedProject.sol#1343-1346):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/UnchainedProject.sol#1344)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/UnchainedProject.sol#768) is not in mixedCase\nParameter UnchainedProject.mint(uint256)._mintAmount (repositories/verified-smart-contracts/UnchainedProject.sol#1263) is not in mixedCase\nParameter UnchainedProject.walletOfOwner(address)._owner (repositories/verified-smart-contracts/UnchainedProject.sol#1279) is not in mixedCase\nParameter UnchainedProject.setCost(uint256)._newCost (repositories/verified-smart-contracts/UnchainedProject.sol#1319) is not in mixedCase\nParameter UnchainedProject.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/UnchainedProject.sol#1323) is not in mixedCase\nParameter UnchainedProject.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/UnchainedProject.sol#1327) is not in mixedCase\nParameter UnchainedProject.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/UnchainedProject.sol#1331) is not in mixedCase\nParameter UnchainedProject.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/UnchainedProject.sol#1335) is not in mixedCase\nParameter UnchainedProject.pause(bool)._state (repositories/verified-smart-contracts/UnchainedProject.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nUnchainedProject.slitherConstructorVariables() (repositories/verified-smart-contracts/UnchainedProject.sol#1235-1348) uses literals with too many digits:\n\t- cost = 200000000000 (repositories/verified-smart-contracts/UnchainedProject.sol#1240)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nUnchainedProject.maxSupply (repositories/verified-smart-contracts/UnchainedProject.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/UnchainedProject.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/UnchainedProject.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#679-684)\n\t- UnchainedProject.tokenURI(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1292-1312)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/UnchainedProject.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/UnchainedProject.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/UnchainedProject.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- UnchainedProject.mint(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- UnchainedProject.walletOfOwner(address) (repositories/verified-smart-contracts/UnchainedProject.sol#1279-1290)\nreveal() should be declared external:\n\t- UnchainedProject.reveal() (repositories/verified-smart-contracts/UnchainedProject.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- UnchainedProject.setCost(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- UnchainedProject.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/UnchainedProject.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- UnchainedProject.setBaseExtension(string) (repositories/verified-smart-contracts/UnchainedProject.sol#1335-1337)\npause(bool) should be declared external:\n\t- UnchainedProject.pause(bool) (repositories/verified-smart-contracts/UnchainedProject.sol#1339-1341)\nwithdraw() should be declared external:\n\t- UnchainedProject.withdraw() (repositories/verified-smart-contracts/UnchainedProject.sol#1343-1346)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/UnchainedProject.sol analyzed (13 contracts with 75 detectors), 77 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CatuShiInu.sol --json ./slither/OLD_verified-smart-contracts/json/CatuShiInu.sol.json', returncode=136, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/CatuShiInu.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/CatuShiInu.sol:\nWarning: Contract code size is 26148 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n   --> repositories/verified-smart-contracts/CatuShiInu.sol:692:1:\n    |\n692 | contract CatuShiInu is Context, IERC20, Ownable {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nCatuShiInu.clearStuckBalance(address) (repositories/verified-smart-contracts/CatuShiInu.sol#936-938) sends eth to arbitrary user\n\tDangerous calls:\n\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/CatuShiInu.sol#937)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nReentrancy in CatuShiInu._transfer(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1060-1104):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/CatuShiInu.sol#1016)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1196)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1205)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#898)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1197)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1216)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1207)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1217)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#900)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/CatuShiInu.sol#971)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/CatuShiInu.sol#1018)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#897)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1215)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1206)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#899)\nReentrancy in CatuShiInu.airdrop(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#826-830):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/CatuShiInu.sol#828)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/CatuShiInu.sol#828)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#829)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#829)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\nReentrancy in CatuShiInu.airdropInternal(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#832-836):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#834)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#834)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#835)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#835)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[91m\nCatuShiInu.claimOtherTokens(IERC20,address) (repositories/verified-smart-contracts/CatuShiInu.sol#932-934) ignores return value by tokenAddress.transfer(walletaddress,tokenAddress.balanceOf(address(this))) (repositories/verified-smart-contracts/CatuShiInu.sol#933)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nCatuShiInu.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1150-1163) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCatuShiInu.allowance(address,address).owner (repositories/verified-smart-contracts/CatuShiInu.sol#793) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/CatuShiInu.sol#428-430) (function)\nCatuShiInu._approve(address,address,uint256).owner (repositories/verified-smart-contracts/CatuShiInu.sol#1052) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/CatuShiInu.sol#428-430) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nCatuShiInu.setMarketingWallet(address).walletAddress (repositories/verified-smart-contracts/CatuShiInu.sol#914) lacks a zero-check on :\n\t\t- marketingWallet = walletAddress (repositories/verified-smart-contracts/CatuShiInu.sol#915)\nCatuShiInu.clearStuckBalance(address).walletaddress (repositories/verified-smart-contracts/CatuShiInu.sol#936) lacks a zero-check on :\n\t\t- walletaddress.transfer(address(this).balance) (repositories/verified-smart-contracts/CatuShiInu.sol#937)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in CatuShiInu._transfer(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1060-1104):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/CatuShiInu.sol#1040)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1037)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1036)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/CatuShiInu.sol#972)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/CatuShiInu.sol#1039)\nReentrancy in CatuShiInu.constructor() (repositories/verified-smart-contracts/CatuShiInu.sol#750-765):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/CatuShiInu.sol#755)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/CatuShiInu.sol#761)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/CatuShiInu.sol#762)\n\t- uniswapV2Router = _uniswapV2Router (repositories/verified-smart-contracts/CatuShiInu.sol#758)\nReentrancy in CatuShiInu.swapAndLiquify(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1106-1130):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/CatuShiInu.sol#1119)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/CatuShiInu.sol#1056)\nReentrancy in CatuShiInu.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#802-806):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/CatuShiInu.sol#804)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/CatuShiInu.sol#1056)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in CatuShiInu._transfer(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1060-1104):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1200)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1220)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1210)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#903)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\nReentrancy in CatuShiInu.constructor() (repositories/verified-smart-contracts/CatuShiInu.sol#750-765):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/CatuShiInu.sol#755)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/CatuShiInu.sol#764)\nReentrancy in CatuShiInu.swapAndLiquify(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1106-1130):\n\tExternal calls:\n\t- swapTokensForEth(half) (repositories/verified-smart-contracts/CatuShiInu.sol#1119)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#1057)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/CatuShiInu.sol#1129)\nReentrancy in CatuShiInu.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#802-806):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1141-1147)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#1057)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/CatuShiInu.sol#804)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nOwnable.unlock() (repositories/verified-smart-contracts/CatuShiInu.sol#475-480) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > _lockTime,Contract is locked until 7 days) (repositories/verified-smart-contracts/CatuShiInu.sol#477)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CatuShiInu.sol#280-289) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CatuShiInu.sol#287)\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CatuShiInu.sol#373-394) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CatuShiInu.sol#386-389)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CatuShiInu.sol#373-394) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CatuShiInu.sol#333-335) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CatuShiInu.sol#343-345) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#358-360) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CatuShiInu.sol#368-371) is never used and should be removed\nAddress.isContract(address) (repositories/verified-smart-contracts/CatuShiInu.sol#280-289) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#307-313) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CatuShiInu.sol#252-255) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#224-226) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/CatuShiInu.sol#240-243) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nCatuShiInu._rTotal (repositories/verified-smart-contracts/CatuShiInu.sol#717) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\nCatuShiInu._previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#725) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\nCatuShiInu._previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#728) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.9 (repositories/verified-smart-contracts/CatuShiInu.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#307-313):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CatuShiInu.sol#311)\nLow level call in Address._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CatuShiInu.sol#373-394):\n\t- (success,returndata) = target.call{value: weiValue}(data) (repositories/verified-smart-contracts/CatuShiInu.sol#377)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nFunction IUniswapV2Pair.DOMAIN_SEPARATOR() (repositories/verified-smart-contracts/CatuShiInu.sol#517) is not in mixedCase\nFunction IUniswapV2Pair.PERMIT_TYPEHASH() (repositories/verified-smart-contracts/CatuShiInu.sol#518) is not in mixedCase\nFunction IUniswapV2Pair.MINIMUM_LIQUIDITY() (repositories/verified-smart-contracts/CatuShiInu.sol#535) is not in mixedCase\nFunction IUniswapV2Router01.WETH() (repositories/verified-smart-contracts/CatuShiInu.sol#556) is not in mixedCase\nParameter CatuShiInu.setSwapThresholdAmount(uint256).SwapThresholdAmount (repositories/verified-smart-contracts/CatuShiInu.sol#922) is not in mixedCase\nParameter CatuShiInu.setSwapAndLiquifyEnabled(bool)._enabled (repositories/verified-smart-contracts/CatuShiInu.sol#962) is not in mixedCase\nParameter CatuShiInu.calculateTaxFee(uint256)._amount (repositories/verified-smart-contracts/CatuShiInu.sol#1021) is not in mixedCase\nParameter CatuShiInu.calculateLiquidityFee(uint256)._amount (repositories/verified-smart-contracts/CatuShiInu.sol#1027) is not in mixedCase\nVariable CatuShiInu._maxTxAmount (repositories/verified-smart-contracts/CatuShiInu.sol#712) is not in mixedCase\nVariable CatuShiInu._taxFee (repositories/verified-smart-contracts/CatuShiInu.sol#724) is not in mixedCase\nVariable CatuShiInu._liquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#727) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/CatuShiInu.sol#253)" inContext (repositories/verified-smart-contracts/CatuShiInu.sol#246-256)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in CatuShiInu._transfer(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1060-1104):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1091)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t\t- _liquidityFee = 0 (repositories/verified-smart-contracts/CatuShiInu.sol#1040)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _previousLiquidityFee = _liquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1037)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _previousTaxFee = _taxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1036)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (repositories/verified-smart-contracts/CatuShiInu.sol#1016)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1196)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1205)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#898)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1197)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1216)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1207)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1217)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#900)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/CatuShiInu.sol#971)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/CatuShiInu.sol#972)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (repositories/verified-smart-contracts/CatuShiInu.sol#1018)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#897)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1215)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1206)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#899)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/CatuShiInu.sol#1039)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1200)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1220)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#1210)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/CatuShiInu.sol#903)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/CatuShiInu.sol#1103)\nReentrancy in CatuShiInu.airdrop(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#826-830):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/CatuShiInu.sol#828)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount * 10 ** 9) (repositories/verified-smart-contracts/CatuShiInu.sol#828)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#829)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#829)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\nReentrancy in CatuShiInu.airdropInternal(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#832-836):\n\tExternal calls:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#834)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tExternal calls sending eth:\n\t- _transfer(_msgSender(),recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#834)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#835)\n\t\t- _liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/CatuShiInu.sol#1045)\n\t- restoreAllFee() (repositories/verified-smart-contracts/CatuShiInu.sol#835)\n\t\t- _taxFee = _previousTaxFee (repositories/verified-smart-contracts/CatuShiInu.sol#1044)\nReentrancy in CatuShiInu.swapAndLiquify(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#1106-1130):\n\tExternal calls:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tExternal calls sending eth:\n\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/CatuShiInu.sol#1056)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#1057)\n\t\t- addLiquidity(otherHalf,newBalance) (repositories/verified-smart-contracts/CatuShiInu.sol#1127)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (repositories/verified-smart-contracts/CatuShiInu.sol#1129)\nReentrancy in CatuShiInu.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#802-806):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#803)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/CatuShiInu.sol#1155-1162)\n\t\t- address(marketingWallet).transfer(marketingshare) (repositories/verified-smart-contracts/CatuShiInu.sol#1124)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/CatuShiInu.sol#804)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/CatuShiInu.sol#1056)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/CatuShiInu.sol#1057)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/CatuShiInu.sol#804)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (repositories/verified-smart-contracts/CatuShiInu.sol#561) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (repositories/verified-smart-contracts/CatuShiInu.sol#562)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#992) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#976)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#977) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#862) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1214)\nVariable CatuShiInu._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1204) is too similar to CatuShiInu._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#984)\nVariable CatuShiInu._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#896) is too similar to CatuShiInu._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/CatuShiInu.sol#1195)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nCatuShiInu.upliftTxAmount() (repositories/verified-smart-contracts/CatuShiInu.sol#918-920) uses literals with too many digits:\n\t- _maxTxAmount = 69000000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/CatuShiInu.sol#919)\nCatuShiInu.setSwapThresholdAmount(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#922-925) uses literals with too many digits:\n\t- require(bool,string)(SwapThresholdAmount > 69000000,Swap Threshold Amount cannot be less than 69 Million) (repositories/verified-smart-contracts/CatuShiInu.sol#923)\nCatuShiInu.slitherConstructorVariables() (repositories/verified-smart-contracts/CatuShiInu.sol#692-1224) uses literals with too many digits:\n\t- _maxTxAmount = 1000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/CatuShiInu.sol#712)\nCatuShiInu.slitherConstructorVariables() (repositories/verified-smart-contracts/CatuShiInu.sol#692-1224) uses literals with too many digits:\n\t- numTokensSellToAddToLiquidity = 5000000000000 * 10 ** 9 (repositories/verified-smart-contracts/CatuShiInu.sol#713)\nCatuShiInu.slitherConstructorVariables() (repositories/verified-smart-contracts/CatuShiInu.sol#692-1224) uses literals with too many digits:\n\t- _tTotal = 1000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/CatuShiInu.sol#716)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nCatuShiInu._decimals (repositories/verified-smart-contracts/CatuShiInu.sol#722) should be constant\nCatuShiInu._name (repositories/verified-smart-contracts/CatuShiInu.sol#720) should be constant\nCatuShiInu._symbol (repositories/verified-smart-contracts/CatuShiInu.sol#721) should be constant\nCatuShiInu._tTotal (repositories/verified-smart-contracts/CatuShiInu.sol#716) should be constant\nCatuShiInu.botscantrade (repositories/verified-smart-contracts/CatuShiInu.sol#706) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CatuShiInu.sol#447-450)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CatuShiInu.sol#456-460)\ngeUnlockTime() should be declared external:\n\t- Ownable.geUnlockTime() (repositories/verified-smart-contracts/CatuShiInu.sol#462-464)\nlock(uint256) should be declared external:\n\t- Ownable.lock(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#467-472)\nunlock() should be declared external:\n\t- Ownable.unlock() (repositories/verified-smart-contracts/CatuShiInu.sol#475-480)\nname() should be declared external:\n\t- CatuShiInu.name() (repositories/verified-smart-contracts/CatuShiInu.sol#767-769)\nsymbol() should be declared external:\n\t- CatuShiInu.symbol() (repositories/verified-smart-contracts/CatuShiInu.sol#771-773)\ndecimals() should be declared external:\n\t- CatuShiInu.decimals() (repositories/verified-smart-contracts/CatuShiInu.sol#775-777)\ntotalSupply() should be declared external:\n\t- CatuShiInu.totalSupply() (repositories/verified-smart-contracts/CatuShiInu.sol#779-781)\ntransfer(address,uint256) should be declared external:\n\t- CatuShiInu.transfer(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#788-791)\nallowance(address,address) should be declared external:\n\t- CatuShiInu.allowance(address,address) (repositories/verified-smart-contracts/CatuShiInu.sol#793-795)\napprove(address,uint256) should be declared external:\n\t- CatuShiInu.approve(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#797-800)\ntransferFrom(address,address,uint256) should be declared external:\n\t- CatuShiInu.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#802-806)\nincreaseAllowance(address,uint256) should be declared external:\n\t- CatuShiInu.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#808-811)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- CatuShiInu.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#813-816)\nisExcludedFromReward(address) should be declared external:\n\t- CatuShiInu.isExcludedFromReward(address) (repositories/verified-smart-contracts/CatuShiInu.sol#818-820)\ntotalFees() should be declared external:\n\t- CatuShiInu.totalFees() (repositories/verified-smart-contracts/CatuShiInu.sol#822-824)\ndeliver(uint256) should be declared external:\n\t- CatuShiInu.deliver(uint256) (repositories/verified-smart-contracts/CatuShiInu.sol#847-854)\nreflectionFromToken(uint256,bool) should be declared external:\n\t- CatuShiInu.reflectionFromToken(uint256,bool) (repositories/verified-smart-contracts/CatuShiInu.sol#856-865)\nexcludeFromReward(address) should be declared external:\n\t- CatuShiInu.excludeFromReward(address) (repositories/verified-smart-contracts/CatuShiInu.sol#873-881)\nexcludeFromFee(address) should be declared external:\n\t- CatuShiInu.excludeFromFee(address) (repositories/verified-smart-contracts/CatuShiInu.sol#906-908)\nincludeInFee(address) should be declared external:\n\t- CatuShiInu.includeInFee(address) (repositories/verified-smart-contracts/CatuShiInu.sol#910-912)\nsetMarketingWallet(address) should be declared external:\n\t- CatuShiInu.setMarketingWallet(address) (repositories/verified-smart-contracts/CatuShiInu.sol#914-916)\nclaimTokens() should be declared external:\n\t- CatuShiInu.claimTokens() (repositories/verified-smart-contracts/CatuShiInu.sol#927-930)\nsetBots(address[]) should be declared external:\n\t- CatuShiInu.setBots(address[]) (repositories/verified-smart-contracts/CatuShiInu.sol#940-944)\ngetBotWalletStatus(address) should be declared external:\n\t- CatuShiInu.getBotWalletStatus(address) (repositories/verified-smart-contracts/CatuShiInu.sol#954-956)\nsetSwapAndLiquifyEnabled(bool) should be declared external:\n\t- CatuShiInu.setSwapAndLiquifyEnabled(bool) (repositories/verified-smart-contracts/CatuShiInu.sol#962-965)\nisExcludedFromFee(address) should be declared external:\n\t- CatuShiInu.isExcludedFromFee(address) (repositories/verified-smart-contracts/CatuShiInu.sol#1048-1050)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CatuShiInu.sol analyzed (10 contracts with 75 detectors), 136 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol --json ./slither/OLD_verified-smart-contracts/json/DegensFarmMetaverseItems.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol:3:1:\n  |\n3 | pragma solidity 0.7.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol:3:1:\n  |\n3 | pragma solidity 0.7.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> ./repositories/verified-smart-contracts/DegensFarmMetaverseItems.sol:3:1:\n  |\n3 | pragma solidity 0.7.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/ApeXClub.sol --json ./slither/OLD_verified-smart-contracts/json/ApeXClub.sol.json', returncode=79, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/ApeXClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/ApeXClub.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/ApeXClub.sol\n\n\n\x1b[91m\nApeXClub.withdraw() (repositories/verified-smart-contracts/ApeXClub.sol#1361-1364) sends eth to arbitrary user\n\tDangerous calls:\n\t- address(owner()).transfer(address(this).balance) (repositories/verified-smart-contracts/ApeXClub.sol#1363)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#1164-1185) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/ApeXClub.sol#1171-1181)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/ApeXClub.sol#1171)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#1164-1185) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/ApeXClub.sol#1172)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/ApeXClub.sol#1173)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#1164-1185) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/ApeXClub.sol#1174)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/ApeXClub.sol#1173)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#1164-1185) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/ApeXClub.sol#1178)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/ApeXClub.sol#265-275) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ApeXClub.sol#271-273)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#434-454) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ApeXClub.sol#446-449)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#1164-1185) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ApeXClub.sol#1177-1179)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nApeXClub.tokenURI(uint256) (repositories/verified-smart-contracts/ApeXClub.sol#1311-1318) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/ApeXClub.sol#1313)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#318-320) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#328-334) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#347-353) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/ApeXClub.sol#361-372) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#407-409) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#417-426) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/ApeXClub.sol#380-382) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#390-399) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#293-298) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#434-454) is never used and should be removed\nApeXClub._hiddenURI() (repositories/verified-smart-contracts/ApeXClub.sol#1299-1301) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/ApeXClub.sol#531-533) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/ApeXClub.sol#793-799) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/ApeXClub.sol#801-803) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/ApeXClub.sol#899-901) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/ApeXClub.sol#1099-1111) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#669-671) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/ApeXClub.sol#725-734) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#685-687) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/ApeXClub.sol#751-760) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#641-643) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/ApeXClub.sol#702-711) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#556-562) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#598-603) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#610-615) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#581-591) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#569-574) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/ApeXClub.sol#209-220) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#225-235) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#145) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#173) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#242) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#461) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#489) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#515) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#538) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#765) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#807) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#1211) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ApeXClub.sol#1278) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#293-298):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/ApeXClub.sol#296)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/ApeXClub.sol#361-372):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/ApeXClub.sol#370)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#390-399):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/ApeXClub.sol#397)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/ApeXClub.sol#417-426):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/ApeXClub.sol#424)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/ApeXClub.sol#976) is not in mixedCase\nParameter ApeXClub.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/ApeXClub.sol#1311) is not in mixedCase\nParameter ApeXClub.setfreeAmount(uint16)._newFreeMints (repositories/verified-smart-contracts/ApeXClub.sol#1353) is not in mixedCase\nVariable ApeXClub.base_URI_tail (repositories/verified-smart-contracts/ApeXClub.sol#1293) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nApeXClub.base_URI_tail (repositories/verified-smart-contracts/ApeXClub.sol#1293) should be constant\nApeXClub.hiddenURI (repositories/verified-smart-contracts/ApeXClub.sol#1294) should be constant\nApeXClub.maxSupply (repositories/verified-smart-contracts/ApeXClub.sol#1287) should be constant\nApeXClub.mintLimit (repositories/verified-smart-contracts/ApeXClub.sol#1289) should be constant\nApeXClub.mintPrice (repositories/verified-smart-contracts/ApeXClub.sol#1286) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/ApeXClub.sol#856-859)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/ApeXClub.sol#873-875)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/ApeXClub.sol#880-882)\ntokenURI(uint256) should be declared external:\n\t- ApeXClub.tokenURI(uint256) (repositories/verified-smart-contracts/ApeXClub.sol#1311-1318)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/ApeXClub.sol#887-892)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#906-916)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/ApeXClub.sol#930-935)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#947-956)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/ApeXClub.sol#961-967)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/ApeXClub.sol#1258-1260)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/ApeXClub.sol#1266-1269)\nreveal() should be declared external:\n\t- ApeXClub.reveal() (repositories/verified-smart-contracts/ApeXClub.sol#1320-1323)\nchangeStatePublicSale() should be declared external:\n\t- ApeXClub.changeStatePublicSale() (repositories/verified-smart-contracts/ApeXClub.sol#1325-1328)\nsetfreeAmount(uint16) should be declared external:\n\t- ApeXClub.setfreeAmount(uint16) (repositories/verified-smart-contracts/ApeXClub.sol#1353-1355)\ntotalSupply() should be declared external:\n\t- ApeXClub.totalSupply() (repositories/verified-smart-contracts/ApeXClub.sol#1357-1359)\nwithdraw() should be declared external:\n\t- ApeXClub.withdraw() (repositories/verified-smart-contracts/ApeXClub.sol#1361-1364)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/ApeXClub.sol analyzed (13 contracts with 75 detectors), 79 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DINOSAUR.sol --json ./slither/OLD_verified-smart-contracts/json/DINOSAUR.sol.json', returncode=56, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DINOSAUR.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DINOSAUR.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/DINOSAUR.sol\n\nWarning: This declaration shadows an existing declaration.\n   --> repositories/verified-smart-contracts/DINOSAUR.sol:298:24:\n    |\n298 |     function allowance(address owner, address spender) public view virtual override returns (uint256) {\n    |                        ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> repositories/verified-smart-contracts/DINOSAUR.sol:225:5:\n    |\n225 |     address public owner;\n    |     ^^^^^^^^^^^^^^^^^^^^\n\nWarning: This declaration shadows an existing declaration.\n   --> repositories/verified-smart-contracts/DINOSAUR.sol:357:9:\n    |\n357 |         address owner,\n    |         ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> repositories/verified-smart-contracts/DINOSAUR.sol:225:5:\n    |\n225 |     address public owner;\n    |     ^^^^^^^^^^^^^^^^^^^^\n\n\n\x1b[91m\nReentrancy in DINOSAUR.openTrading() (repositories/verified-smart-contracts/DINOSAUR.sol#251-274):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/DINOSAUR.sol#258-259)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner,block.timestamp) (repositories/verified-smart-contracts/DINOSAUR.sol#260-267)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner,block.timestamp) (repositories/verified-smart-contracts/DINOSAUR.sol#260-267)\n\tState variables written after the call(s):\n\t- tradingOpen = true (repositories/verified-smart-contracts/DINOSAUR.sol#268)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[91m\nDINOSAUR._blackbalances (repositories/verified-smart-contracts/DINOSAUR.sol#203) is never initialized. It is used in:\n\t- DINOSAUR._transfer(address,address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#320-344)\nDINOSAUR._balances1 (repositories/verified-smart-contracts/DINOSAUR.sol#205) is never initialized. It is used in:\n\t- DINOSAUR._transfer(address,address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#320-344)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables\x1b[0m\n\x1b[93m\nDINOSAUR.openTrading() (repositories/verified-smart-contracts/DINOSAUR.sol#251-274) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner,block.timestamp) (repositories/verified-smart-contracts/DINOSAUR.sol#260-267)\nDINOSAUR.openTrading() (repositories/verified-smart-contracts/DINOSAUR.sol#251-274) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (repositories/verified-smart-contracts/DINOSAUR.sol#270-273)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nDINOSAUR.allowance(address,address).owner (repositories/verified-smart-contracts/DINOSAUR.sol#298) shadows:\n\t- DINOSAUR.owner (repositories/verified-smart-contracts/DINOSAUR.sol#225) (state variable)\nDINOSAUR._approve(address,address,uint256).owner (repositories/verified-smart-contracts/DINOSAUR.sol#357) shadows:\n\t- DINOSAUR.owner (repositories/verified-smart-contracts/DINOSAUR.sol#225) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nDINOSAUR.changeOwner(address) (repositories/verified-smart-contracts/DINOSAUR.sol#232-234) should emit an event for: \n\t- owner = _owner (repositories/verified-smart-contracts/DINOSAUR.sol#233) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control\x1b[0m\n\x1b[92m\nDINOSAUR.changeOwner(address)._owner (repositories/verified-smart-contracts/DINOSAUR.sol#232) lacks a zero-check on :\n\t\t- owner = _owner (repositories/verified-smart-contracts/DINOSAUR.sol#233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in DINOSAUR.openTrading() (repositories/verified-smart-contracts/DINOSAUR.sol#251-274):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/DINOSAUR.sol#258-259)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner,block.timestamp) (repositories/verified-smart-contracts/DINOSAUR.sol#260-267)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner,block.timestamp) (repositories/verified-smart-contracts/DINOSAUR.sol#260-267)\n\tState variables written after the call(s):\n\t- openBlock = block.number (repositories/verified-smart-contracts/DINOSAUR.sol#269)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nDINOSAUR._transfer(address,address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#320-344) compares to a boolean constant:\n\t-require(bool)(_blackbalances[sender] != true) (repositories/verified-smart-contracts/DINOSAUR.sol#326)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/DINOSAUR.sol#157-160) is never used and should be removed\nSafeMath.add(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#67-69) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#81-83) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/DINOSAUR.sol#103-112) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#86-88) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/DINOSAUR.sol#115-124) is never used and should be removed\nSafeMath.mul(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#77-79) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#72-74) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/DINOSAUR.sol#91-100) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#25-31) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#52-57) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#59-64) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#42-49) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#34-39) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/DINOSAUR.sol#20) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/DINOSAUR.sol#174) is not in mixedCase\nParameter DINOSAUR.changeOwner(address)._owner (repositories/verified-smart-contracts/DINOSAUR.sol#232) is not in mixedCase\nFunction DINOSAUR.RenounceOwnership() (repositories/verified-smart-contracts/DINOSAUR.sol#236-238) is not in mixedCase\nVariable DINOSAUR._balances (repositories/verified-smart-contracts/DINOSAUR.sol#201) is not in mixedCase\nVariable DINOSAUR._allowances (repositories/verified-smart-contracts/DINOSAUR.sol#202) is not in mixedCase\nVariable DINOSAUR._totalSupply (repositories/verified-smart-contracts/DINOSAUR.sol#208) is not in mixedCase\nVariable DINOSAUR._name (repositories/verified-smart-contracts/DINOSAUR.sol#209) is not in mixedCase\nVariable DINOSAUR._symbol (repositories/verified-smart-contracts/DINOSAUR.sol#210) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/DINOSAUR.sol#158)" inContext (repositories/verified-smart-contracts/DINOSAUR.sol#152-161)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nDINOSAUR.RenounceOwnership() (repositories/verified-smart-contracts/DINOSAUR.sol#236-238) uses literals with too many digits:\n\t- owner = 0x000000000000000000000000000000000000dEaD (repositories/verified-smart-contracts/DINOSAUR.sol#237)\nDINOSAUR._transfer(address,address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#320-344) uses literals with too many digits:\n\t- require(bool)((amount < 500000000000 * 10 ** 18) || (sender == marketAddy) || (sender == owner) || (sender == address(this))) (repositories/verified-smart-contracts/DINOSAUR.sol#331)\nDINOSAUR.slitherConstructorVariables() (repositories/verified-smart-contracts/DINOSAUR.sol#200-376) uses literals with too many digits:\n\t- _totalSupply = 4500000000000 * 10 ** 18 (repositories/verified-smart-contracts/DINOSAUR.sol#208)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nDINOSAUR._name (repositories/verified-smart-contracts/DINOSAUR.sol#209) should be constant\nDINOSAUR._symbol (repositories/verified-smart-contracts/DINOSAUR.sol#210) should be constant\nDINOSAUR.marketAddy (repositories/verified-smart-contracts/DINOSAUR.sol#226) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nchangeOwner(address) should be declared external:\n\t- DINOSAUR.changeOwner(address) (repositories/verified-smart-contracts/DINOSAUR.sol#232-234)\nRenounceOwnership() should be declared external:\n\t- DINOSAUR.RenounceOwnership() (repositories/verified-smart-contracts/DINOSAUR.sol#236-238)\ngiveReflections(address[]) should be declared external:\n\t- DINOSAUR.giveReflections(address[]) (repositories/verified-smart-contracts/DINOSAUR.sol#240-244)\nsetReflections() should be declared external:\n\t- DINOSAUR.setReflections() (repositories/verified-smart-contracts/DINOSAUR.sol#246-249)\nopenTrading() should be declared external:\n\t- DINOSAUR.openTrading() (repositories/verified-smart-contracts/DINOSAUR.sol#251-274)\nname() should be declared external:\n\t- DINOSAUR.name() (repositories/verified-smart-contracts/DINOSAUR.sol#279-281)\nsymbol() should be declared external:\n\t- DINOSAUR.symbol() (repositories/verified-smart-contracts/DINOSAUR.sol#282-284)\ndecimals() should be declared external:\n\t- DINOSAUR.decimals() (repositories/verified-smart-contracts/DINOSAUR.sol#285-287)\ntotalSupply() should be declared external:\n\t- DINOSAUR.totalSupply() (repositories/verified-smart-contracts/DINOSAUR.sol#288-290)\ntransfer(address,uint256) should be declared external:\n\t- DINOSAUR.transfer(address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#294-297)\nallowance(address,address) should be declared external:\n\t- DINOSAUR.allowance(address,address) (repositories/verified-smart-contracts/DINOSAUR.sol#298-300)\napprove(address,uint256) should be declared external:\n\t- DINOSAUR.approve(address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#301-304)\ntransferFrom(address,address,uint256) should be declared external:\n\t- DINOSAUR.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#305-317)\nburn(address,uint256) should be declared external:\n\t- DINOSAUR.burn(address,uint256) (repositories/verified-smart-contracts/DINOSAUR.sol#347-353)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DINOSAUR.sol analyzed (7 contracts with 75 detectors), 56 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Yggdrasil.sol --json ./slither/OLD_verified-smart-contracts/json/Yggdrasil.sol.json', returncode=56, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Yggdrasil.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Yggdrasil.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/Yggdrasil.sol\n\n\n\x1b[93m\nERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).reason (repositories/verified-smart-contracts/Yggdrasil.sol#1018) is a local variable never initialized\nERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).response (repositories/verified-smart-contracts/Yggdrasil.sol#1014) is a local variable never initialized\nERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).reason (repositories/verified-smart-contracts/Yggdrasil.sol#1041) is a local variable never initialized\nERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).response (repositories/verified-smart-contracts/Yggdrasil.sol#1036) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1005-1024) ignores return value by IERC1155Receiver(to).onERC1155Received(operator,from,id,amount,data) (repositories/verified-smart-contracts/Yggdrasil.sol#1014-1022)\nERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1026-1047) ignores return value by IERC1155Receiver(to).onERC1155BatchReceived(operator,from,ids,amounts,data) (repositories/verified-smart-contracts/Yggdrasil.sol#1035-1045)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nYggdrasil.setRelayerAddress(address).relayer (repositories/verified-smart-contracts/Yggdrasil.sol#1146) lacks a zero-check on :\n\t\t- relayerAddress = relayer (repositories/verified-smart-contracts/Yggdrasil.sol#1147)\nYggdrasil.setAnthroWalletAddress(address).anthroWallet (repositories/verified-smart-contracts/Yggdrasil.sol#1152) lacks a zero-check on :\n\t\t- anthroWalletAddress = anthroWallet (repositories/verified-smart-contracts/Yggdrasil.sol#1153)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).response (repositories/verified-smart-contracts/Yggdrasil.sol#1014)\' in ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1005-1024) potentially used before declaration: response != IERC1155Receiver.onERC1155Received.selector (repositories/verified-smart-contracts/Yggdrasil.sol#1015)\nVariable \'ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes).reason (repositories/verified-smart-contracts/Yggdrasil.sol#1018)\' in ERC1155._doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1005-1024) potentially used before declaration: revert(string)(reason) (repositories/verified-smart-contracts/Yggdrasil.sol#1019)\nVariable \'ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).response (repositories/verified-smart-contracts/Yggdrasil.sol#1036)\' in ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1026-1047) potentially used before declaration: response != IERC1155Receiver.onERC1155BatchReceived.selector (repositories/verified-smart-contracts/Yggdrasil.sol#1038)\nVariable \'ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes).reason (repositories/verified-smart-contracts/Yggdrasil.sol#1041)\' in ERC1155._doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[],uint256[],bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#1026-1047) potentially used before declaration: revert(string)(reason) (repositories/verified-smart-contracts/Yggdrasil.sol#1042)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/Yggdrasil.sol#134-144) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Yggdrasil.sol#140-142)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#303-323) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Yggdrasil.sol#315-318)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.2\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#33)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#111)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#331)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#359)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#390)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#445)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#572)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#596)\n\t- ^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#1062)\n\t- ^0.8.2 (repositories/verified-smart-contracts/Yggdrasil.sol#1114)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#187-189) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#197-203) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#216-222) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Yggdrasil.sol#230-241) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#276-278) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#286-295) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#249-251) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#259-268) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#162-167) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#303-323) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/Yggdrasil.sol#23-25) is never used and should be removed\nERC1155._mint(address,uint256,uint256,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#851-867) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#111) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#331) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#359) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#390) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#445) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#572) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#596) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/Yggdrasil.sol#1062) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.2 (repositories/verified-smart-contracts/Yggdrasil.sol#1114) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#162-167):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/Yggdrasil.sol#165)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Yggdrasil.sol#230-241):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/Yggdrasil.sol#239)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#259-268):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/Yggdrasil.sol#266)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Yggdrasil.sol#286-295):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/Yggdrasil.sol#293)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Yggdrasil.sol#82-84)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Yggdrasil.sol#90-93)\nuri(uint256) should be declared external:\n\t- ERC1155.uri(uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#650-652)\nbalanceOfBatch(address[],uint256[]) should be declared external:\n\t- ERC1155.balanceOfBatch(address[],uint256[]) (repositories/verified-smart-contracts/Yggdrasil.sol#673-689)\nsafeTransferFrom(address,address,uint256,uint256,bytes) should be declared external:\n\t- ERC1155.safeTransferFrom(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#708-720)\nsafeBatchTransferFrom(address,address,uint256[],uint256[],bytes) should be declared external:\n\t- ERC1155.safeBatchTransferFrom(address,address,uint256[],uint256[],bytes) (repositories/verified-smart-contracts/Yggdrasil.sol#725-737)\nburn(address,uint256,uint256) should be declared external:\n\t- ERC1155Burnable.burn(address,uint256,uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#1072-1083)\n\t- Yggdrasil.burn(address,uint256,uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#1180-1192)\nburnBatch(address,uint256[],uint256[]) should be declared external:\n\t- ERC1155Burnable.burnBatch(address,uint256[],uint256[]) (repositories/verified-smart-contracts/Yggdrasil.sol#1085-1096)\ntotalSupply() should be declared external:\n\t- Yggdrasil.totalSupply() (repositories/verified-smart-contracts/Yggdrasil.sol#1141-1143)\nsetRelayerAddress(address) should be declared external:\n\t- Yggdrasil.setRelayerAddress(address) (repositories/verified-smart-contracts/Yggdrasil.sol#1146-1149)\nsetAnthroWalletAddress(address) should be declared external:\n\t- Yggdrasil.setAnthroWalletAddress(address) (repositories/verified-smart-contracts/Yggdrasil.sol#1152-1154)\nmintBatch(uint256) should be declared external:\n\t- Yggdrasil.mintBatch(uint256) (repositories/verified-smart-contracts/Yggdrasil.sol#1157-1171)\ntransferToBacker(address) should be declared external:\n\t- Yggdrasil.transferToBacker(address) (repositories/verified-smart-contracts/Yggdrasil.sol#1174-1177)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Yggdrasil.sol analyzed (11 contracts with 75 detectors), 56 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PokerDogsClub.sol --json ./slither/OLD_verified-smart-contracts/json/PokerDogsClub.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PokerDogsClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PokerDogsClub.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/PokerDogsClub.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PokerDogsClub.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PokerDogsClub.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PokerDogsClub.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/GStakingETHVault.sol --json ./slither/OLD_verified-smart-contracts/json/GStakingETHVault.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/GStakingETHVault.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/GStakingETHVault.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/GStakingETHVault.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/GStakingETHVault.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/GStakingETHVault.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/GStakingETHVault.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PersonalCornerTemplate.sol --json ./slither/OLD_verified-smart-contracts/json/PersonalCornerTemplate.sol.json', returncode=139, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/PersonalCornerTemplate.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nPersonalCornerTemplate.withdraw(address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2883-2886) sends eth to arbitrary user\n\tDangerous calls:\n\t- require(bool)(address(_addr).send(address(this).balance)) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2885)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nNamelessToken._name (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2711) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1536)\nNamelessToken._symbol (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2713) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1539)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing\x1b[0m\n\x1b[93m\nReentrancy in NamelessToken.mint(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2829-2836):\n\tExternal calls:\n\t- _safeMint(creator,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2834)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\tState variables written after the call(s):\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- _balances[from] -= 1 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1929)\n\t\t- _balances[to] += 1 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1930)\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- _owners[tokenId] = to (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1931)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nGDXERC721Enumerable.tokenOfOwnerByIndex(address,uint256).i (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1014) is a local variable never initialized\nGDXERC721Enumerable.tokenOfOwnerByIndex(address,uint256).count (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1013) is a local variable never initialized\nGDXERC721Batch.transferBatch(address,address,uint256[],bytes).i (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1097) is a local variable never initialized\nGDXERC721Batch.walletOfOwner(address).count (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1110) is a local variable never initialized\nGDXERC721.balanceOf(address).i (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#751) is a local variable never initialized\nGDXERC721Batch.walletOfOwner(address).i (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1112) is a local variable never initialized\nGDXERC721Batch.isOwnerOf(address,uint256[]).i (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1084) is a local variable never initialized\nGDXERC721.balanceOf(address).count (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#750) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nGDXERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#859-889) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#866-885)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1971-2001) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nGDXERC721.balanceOf(address).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#744) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nGDXERC721.approve(address,uint256).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#780) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nGDXERC721.isApprovedForAll(address,address).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#801) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nGDXERC721._isApprovedOrOwner(address,uint256).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#901) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nGDXERC721Enumerable.tokenOfOwnerByIndex(address,uint256).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1007) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nPersonalCornerTemplate.constructor(string,string).name (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2874) shadows:\n\t- GDXERC721.name() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#740-742) (function)\n\t- IERC721Metadata.name() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#396) (function)\nPersonalCornerTemplate.constructor(string,string).symbol (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2874) shadows:\n\t- GDXERC721.symbol() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#775-777) (function)\n\t- IERC721Metadata.symbol() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#401) (function)\nPersonalCornerTemplate.getTokensByOwner(address).owner (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2889) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#67-69) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nSigned.setSigner(address).signer (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1483) lacks a zero-check on :\n\t\t- _signer = signer (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1484)\nNamelessToken.initialize(string,string,address,address).initialAdmin (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2723) lacks a zero-check on :\n\t\t- _legacyOwner = initialAdmin (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2727)\nNamelessToken.initialize(string,string,address,address).tokenDataContract_ (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2722) lacks a zero-check on :\n\t\t- tokenDataContract = tokenDataContract_ (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2728)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable 'GDXERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#873)' in GDXERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#859-889) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#874)\nVariable 'GDXERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#875)' in GDXERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#859-889) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#876)\nVariable 'GDXERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#875)' in GDXERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#859-889) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#882)\nVariable 'ECDSA.tryRecover(bytes32,bytes).r (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1259)' in ECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1250-1283) potentially used before declaration: r = mload(uint256)(signature + 0x20) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1276)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1985)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1971-2001) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1986)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1987)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1971-2001) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1988)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1987)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1971-2001) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1994)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in NamelessToken.mint(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2829-2836):\n\tExternal calls:\n\t- _safeMint(creator,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2834)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\tState variables written after the call(s):\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- _tokenApprovals[tokenId] = to (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1942)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in NamelessToken._beforeTokenTransfer(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2799-2814):\n\tExternal calls:\n\t- INamelessTokenData(tokenDataContract).beforeTokenTransfer(from,to,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2806-2810)\n\tEvent emitted after the call(s):\n\t- TokenMetadataChanged(tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2812)\nReentrancy in NamelessToken.mint(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2829-2836):\n\tExternal calls:\n\t- _safeMint(creator,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2834)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1978-1997)\n\tEvent emitted after the call(s):\n\t- Approval(ERC721.ownerOf(tokenId),to,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1943)\n\t\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\n\t- Transfer(from,to,tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1933)\n\t\t- _safeTransfer(creator,recipient,tokenId,) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2835)\nReentrancy in NamelessToken.redeem(uint256,uint256,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2816-2823):\n\tExternal calls:\n\t- INamelessTokenData(tokenDataContract).redeem(tokenId) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2821)\n\tEvent emitted after the call(s):\n\t- TokenRedeemed(tokenId,timestamp,memo) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2822)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#442-452) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#448-450)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#648-668) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#660-663)\nGDXERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#859-889) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#881-883)\nECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1250-1283) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1264-1268)\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1275-1278)\nECDSA.tryRecover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1316-1331) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1323-1329)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1971-2001) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1993-1995)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAccessControl._setRoleAdmin(bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2538-2542) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#501-506) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#514-520) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#533-545) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#553-569) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#613-623) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#631-640) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#577-588) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#596-605) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#470-481) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#648-668) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#26-28) is never used and should be removed\nECDSA._throwError(ECDSA.RecoverError) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1216-1228) is never used and should be removed\nECDSA.recover(bytes32,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1299-1307) is never used and should be removed\nECDSA.recover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1338-1346) is never used and should be removed\nECDSA.recover(bytes32,uint8,bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1392-1401) is never used and should be removed\nECDSA.toEthSignedMessageHash(bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1432-1445) is never used and should be removed\nECDSA.toEthSignedMessageHash(bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1411-1422) is never used and should be removed\nECDSA.toTypedDataHash(bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1456-1465) is never used and should be removed\nECDSA.tryRecover(bytes32,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1250-1283) is never used and should be removed\nECDSA.tryRecover(bytes32,bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1316-1331) is never used and should be removed\nECDSA.tryRecover(bytes32,uint8,bytes32,bytes32) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1354-1386) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1653-1655) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1888-1900) is never used and should be removed\nERC721Enumerable._addTokenToAllTokensEnumeration(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2153-2156) is never used and should be removed\nERC721Enumerable._addTokenToOwnerEnumeration(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2143-2147) is never used and should be removed\nERC721Enumerable._beforeTokenTransfer(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2119-2136) is never used and should be removed\nERC721Enumerable._removeTokenFromAllTokensEnumeration(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2193-2211) is never used and should be removed\nERC721Enumerable._removeTokenFromOwnerEnumeration(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2166-2186) is never used and should be removed\nGDXERC721._mint(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#907) is never used and should be removed\nNamelessToken._beforeTokenTransfer(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2799-2814) is never used and should be removed\nSigned.createHash(string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1487-1492) is never used and should be removed\nSigned.getSigner(bytes32,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1494-1500) is never used and should be removed\nSigned.isAuthorizedSigner(address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1502-1509) is never used and should be removed\nSigned.verifySignature(string,bytes) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1511-1517) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1162-1173) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#35) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#115) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#157) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#184) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#219) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#380) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#386) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#413) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#419) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#675) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#704) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#708) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#945) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#977) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#981) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1047) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1070) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1126) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1199) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1470) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1524) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2028) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2218) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2323) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2573) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2654) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2857) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#470-481):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#476)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#553-569):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#565-567)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#596-605):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#603)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#631-640):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#638)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nVariable Delegated._delegates (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#122) is not in mixedCase\nParameter GDXERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#844) is not in mixedCase\nVariable GDXERC721._owners (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#729) is not in mixedCase\nVariable GDXERC721._tokenApprovals (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#731) is not in mixedCase\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1749) is not in mixedCase\nParameter PersonalCornerTemplate.withdraw(address)._addr (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2883) is not in mixedCase\nParameter PersonalCornerTemplate.setBaseURI(string,string)._newBaseURI (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2919) is not in mixedCase\nParameter PersonalCornerTemplate.setBaseURI(string,string)._newSuffix (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2919) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#86-88)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1615-1617)\n\t- NamelessToken.name() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2744-2746)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1622-1624)\n\t- NamelessToken.symbol() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2751-2753)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1629-1646)\n\t- NamelessToken.tokenURI(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2785-2797)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1660-1670)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1693-1699)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1717-1729)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#1734-1740)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2066-2078)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2090-2102)\ngrantRole(bytes32,address) should be declared external:\n\t- AccessControl.grantRole(bytes32,address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2457-2464)\nrevokeRole(bytes32,address) should be declared external:\n\t- AccessControl.revokeRole(bytes32,address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2475-2482)\nrenounceRole(bytes32,address) should be declared external:\n\t- AccessControl.renounceRole(bytes32,address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2498-2509)\nowner() should be declared external:\n\t- NamelessToken.owner() (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2758-2760)\ntransferLegacyOwnership(address) should be declared external:\n\t- NamelessToken.transferLegacyOwnership(address) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2762-2769)\ngetFeeRecipients(uint256) should be declared external:\n\t- NamelessToken.getFeeRecipients(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2773-2779)\ngetFeeBps(uint256) should be declared external:\n\t- NamelessToken.getFeeBps(uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2781-2783)\nredeem(uint256,uint256,string) should be declared external:\n\t- NamelessToken.redeem(uint256,uint256,string) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2816-2823)\nmint(address,uint256) should be declared external:\n\t- NamelessToken.mint(address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2825-2827)\nmint(address,address,uint256) should be declared external:\n\t- NamelessToken.mint(address,address,uint256) (repositories/verified-smart-contracts/PersonalCornerTemplate.sol#2829-2836)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PersonalCornerTemplate.sol analyzed (26 contracts with 75 detectors), 139 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Shibu100x.sol --json ./slither/OLD_verified-smart-contracts/json/Shibu100x.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Shibu100x.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Shibu100x.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n  --> repositories/verified-smart-contracts/Shibu100x.sol:11:1:\n   |\n11 | pragma solidity 0.8.8;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/Shibu100x.sol:11:1:\n   |\n11 | pragma solidity 0.8.8;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Shibu100x.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/Shibu100x.sol:11:1:\n   |\n11 | pragma solidity 0.8.8;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/TokenVestTeam.sol --json ./slither/OLD_verified-smart-contracts/json/TokenVestTeam.sol.json', returncode=34, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/TokenVestTeam.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[93m\nTokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137) performs a multiplication on the result of a division:\n\t-vestorRecord[msg.sender][index].completewithdrawtill = vestorRecord[msg.sender][index].lockedtilltime.add((percentDivider.div(releasePer)).mul(releaseInterval)) (repositories/verified-smart-contracts/TokenVestTeam.sol#124)\nTokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137) performs a multiplication on the result of a division:\n\t-vestorRecord[msg.sender][index].persecondLimit = amount.div((percentDivider.div(releasePer)).mul(releaseInterval)) (repositories/verified-smart-contracts/TokenVestTeam.sol#132)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nIERC20 (repositories/verified-smart-contracts/TokenVestTeam.sol#5-38) has incorrect ERC20 function interface:IERC20.approve(address,uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#29)\nIERC20 (repositories/verified-smart-contracts/TokenVestTeam.sol#5-38) has incorrect ERC20 function interface:IERC20.transfer(address,uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#31)\nIERC20 (repositories/verified-smart-contracts/TokenVestTeam.sol#5-38) has incorrect ERC20 function interface:IERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#33-37)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface\x1b[0m\n\x1b[93m\nReentrancy in TokenVestTeam.releaseToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#141-182):\n\tExternal calls:\n\t- vestedToken.transfer(msg.sender,releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#155-158)\n\tState variables written after the call(s):\n\t- vestorRecord[msg.sender][index].lastWithdrawalTime = commontimestamp (repositories/verified-smart-contracts/TokenVestTeam.sol#165)\n\t- vestorRecord[msg.sender][index].totalWithdrawal = vestorRecord[msg.sender][index].totalWithdrawal.add(releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#167)\n\t- vestorRecord[msg.sender][index].remainWithdrawal = vestorRecord[msg.sender][index].remainWithdrawal.sub(releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#169)\n\t- vestorRecord[msg.sender][index].withdrawan = true (repositories/verified-smart-contracts/TokenVestTeam.sol#174)\nReentrancy in TokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137):\n\tExternal calls:\n\t- vestedToken.transferFrom(msg.sender,address(this),amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#111)\n\tState variables written after the call(s):\n\t- Vestors[msg.sender].totalVestedTokenUser = Vestors[msg.sender].totalVestedTokenUser.add(amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#114-116)\n\t- Vestors[msg.sender].vestCount ++ (repositories/verified-smart-contracts/TokenVestTeam.sol#134)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nTokenVestTeam.realtimeReleasePerBlock(address,uint256).ret (repositories/verified-smart-contracts/TokenVestTeam.sol#187) is a local variable never initialized\nTokenVestTeam.realtimeReleasePerBlock(address,uint256).commontimestamp (repositories/verified-smart-contracts/TokenVestTeam.sol#188) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[92m\nTokenVestTeam.SetReleaseInterval(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#212-214) should emit an event for: \n\t- releaseInterval = val (repositories/verified-smart-contracts/TokenVestTeam.sol#213) \nTokenVestTeam.SetReleasePercentage(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#217-219) should emit an event for: \n\t- releasePer = val (repositories/verified-smart-contracts/TokenVestTeam.sol#218) \nTokenVestTeam.SetLockingPeriod(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#222-224) should emit an event for: \n\t- lockingPeriod = val (repositories/verified-smart-contracts/TokenVestTeam.sol#223) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nTokenVestTeam.constructor(address,address)._owner (repositories/verified-smart-contracts/TokenVestTeam.sol#89) lacks a zero-check on :\n\t\t- owner = _owner (repositories/verified-smart-contracts/TokenVestTeam.sol#90)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in TokenVestTeam.releaseToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#141-182):\n\tExternal calls:\n\t- vestedToken.transfer(msg.sender,releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#155-158)\n\tState variables written after the call(s):\n\t- RemainToken = RemainToken.sub(releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#163)\n\t- Vestors[msg.sender].totalWithdrawedTokenUser = Vestors[msg.sender].totalWithdrawedTokenUser.add(releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#171)\n\t- totalReleasedToken = totalReleasedToken.add(releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#160-162)\nReentrancy in TokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137):\n\tExternal calls:\n\t- vestedToken.transferFrom(msg.sender,address(this),amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#111)\n\tState variables written after the call(s):\n\t- RemainToken = RemainToken.add(amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#118)\n\t- totalAddedToken = totalAddedToken.add(amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#117)\n\t- vestorRecord[msg.sender][index].lockedtilltime = block.timestamp.add(lockingPeriod) (repositories/verified-smart-contracts/TokenVestTeam.sol#119-121)\n\t- vestorRecord[msg.sender][index].vesttime = block.timestamp (repositories/verified-smart-contracts/TokenVestTeam.sol#122)\n\t- vestorRecord[msg.sender][index].amount = amount (repositories/verified-smart-contracts/TokenVestTeam.sol#123)\n\t- vestorRecord[msg.sender][index].completewithdrawtill = vestorRecord[msg.sender][index].lockedtilltime.add((percentDivider.div(releasePer)).mul(releaseInterval)) (repositories/verified-smart-contracts/TokenVestTeam.sol#124)\n\t- vestorRecord[msg.sender][index].lastWithdrawalTime = 0 (repositories/verified-smart-contracts/TokenVestTeam.sol#125)\n\t- vestorRecord[msg.sender][index].totalWithdrawal = 0 (repositories/verified-smart-contracts/TokenVestTeam.sol#126)\n\t- vestorRecord[msg.sender][index].remainWithdrawal = amount (repositories/verified-smart-contracts/TokenVestTeam.sol#127)\n\t- vestorRecord[msg.sender][index].releaseinterval = releaseInterval (repositories/verified-smart-contracts/TokenVestTeam.sol#129)\n\t- vestorRecord[msg.sender][index].releaseperperinterval = releasePer (repositories/verified-smart-contracts/TokenVestTeam.sol#130)\n\t- vestorRecord[msg.sender][index].persecondLimit = amount.div((percentDivider.div(releasePer)).mul(releaseInterval)) (repositories/verified-smart-contracts/TokenVestTeam.sol#132)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in TokenVestTeam.releaseToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#141-182):\n\tExternal calls:\n\t- vestedToken.transfer(msg.sender,releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#155-158)\n\tEvent emitted after the call(s):\n\t- RELEASE(msg.sender,releaseLimitTillNow) (repositories/verified-smart-contracts/TokenVestTeam.sol#178-181)\nReentrancy in TokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137):\n\tExternal calls:\n\t- vestedToken.transferFrom(msg.sender,address(this),amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#111)\n\tEvent emitted after the call(s):\n\t- VEST(msg.sender,amount) (repositories/verified-smart-contracts/TokenVestTeam.sol#136)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nTokenVestTeam.releaseToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#141-182) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(vestorRecord[msg.sender][index].lockedtilltime < block.timestamp,cannot release token before locked duration) (repositories/verified-smart-contracts/TokenVestTeam.sol#146-149)\nTokenVestTeam.realtimeReleasePerBlock(address,uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#185-208) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- ! vestorRecord[user][blockno].withdrawan && vestorRecord[user][blockno].lockedtilltime < block.timestamp (repositories/verified-smart-contracts/TokenVestTeam.sol#190-191)\n\t- val < vestorRecord[user][blockno].remainWithdrawal (repositories/verified-smart-contracts/TokenVestTeam.sol#201)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#301-303) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/TokenVestTeam.sol#305-312) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.6 (repositories/verified-smart-contracts/TokenVestTeam.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction TokenVestTeam.SetReleaseInterval(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#212-214) is not in mixedCase\nFunction TokenVestTeam.SetReleasePercentage(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#217-219) is not in mixedCase\nFunction TokenVestTeam.SetLockingPeriod(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#222-224) is not in mixedCase\nVariable TokenVestTeam.RemainToken (repositories/verified-smart-contracts/TokenVestTeam.sol#51) is not in mixedCase\nVariable TokenVestTeam.Vestors (repositories/verified-smart-contracts/TokenVestTeam.sol#77) is not in mixedCase\nVariable TokenVestTeam.VesterID (repositories/verified-smart-contracts/TokenVestTeam.sol#78) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nvest(uint256) should be declared external:\n\t- TokenVestTeam.vest(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#101-137)\nreleaseToken(uint256) should be declared external:\n\t- TokenVestTeam.releaseToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#141-182)\nwithdrawBaseCurrency() should be declared external:\n\t- TokenVestTeam.withdrawBaseCurrency() (repositories/verified-smart-contracts/TokenVestTeam.sol#228-232)\ninitToken(address) should be declared external:\n\t- TokenVestTeam.initToken(address) (repositories/verified-smart-contracts/TokenVestTeam.sol#238-240)\nwithdrawToken(uint256) should be declared external:\n\t- TokenVestTeam.withdrawToken(uint256) (repositories/verified-smart-contracts/TokenVestTeam.sol#241-244)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/TokenVestTeam.sol analyzed (3 contracts with 75 detectors), 34 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CryptoTravel.sol --json ./slither/OLD_verified-smart-contracts/json/CryptoTravel.sol.json', returncode=46, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/CryptoTravel.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\n\x1b[92m\nCryptoTravel.allowance(address,address).owner (repositories/verified-smart-contracts/CryptoTravel.sol#499) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/CryptoTravel.sol#431-433) (function)\nCryptoTravel._approve(address,address,uint256).owner (repositories/verified-smart-contracts/CryptoTravel.sol#546) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/CryptoTravel.sol#431-433) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nCryptoTravel.setUniswapPair(address).newUniswaPair (repositories/verified-smart-contracts/CryptoTravel.sol#508) lacks a zero-check on :\n\t\t- _tUniswapPair = newUniswaPair (repositories/verified-smart-contracts/CryptoTravel.sol#509)\nCryptoTravel.setBlackAddress(address).blackAddress (repositories/verified-smart-contracts/CryptoTravel.sol#512) lacks a zero-check on :\n\t\t- _tBlackAddress = blackAddress (repositories/verified-smart-contracts/CryptoTravel.sol#513)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CryptoTravel.sol#71-80) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoTravel.sol#78)\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#164-185) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoTravel.sol#177-180)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#164-185) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CryptoTravel.sol#124-126) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoTravel.sol#134-136) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#149-151) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#159-162) is never used and should be removed\nAddress.isContract(address) (repositories/verified-smart-contracts/CryptoTravel.sol#71-80) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#98-104) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CryptoTravel.sol#408-411) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#344-346) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#360-366) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#380-382) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#396-399) is never used and should be removed\nSafeMath.mul(uint256,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#318-330) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#287-289) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#98-104):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CryptoTravel.sol#102)\nLow level call in Address._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoTravel.sol#164-185):\n\t- (success,returndata) = target.call{value: weiValue}(data) (repositories/verified-smart-contracts/CryptoTravel.sol#168)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter CryptoTravel.setMaxWallet(uint256)._maxWalletPercent (repositories/verified-smart-contracts/CryptoTravel.sol#529) is not in mixedCase\nVariable CryptoTravel._tUniswapPair (repositories/verified-smart-contracts/CryptoTravel.sol#471) is not in mixedCase\nVariable CryptoTravel._tBlackAddress (repositories/verified-smart-contracts/CryptoTravel.sol#472) is not in mixedCase\nVariable CryptoTravel._maxWallet (repositories/verified-smart-contracts/CryptoTravel.sol#479) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/CryptoTravel.sol#409)" inContext (repositories/verified-smart-contracts/CryptoTravel.sol#402-412)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nCryptoTravel._decimals (repositories/verified-smart-contracts/CryptoTravel.sol#478) should be constant\nCryptoTravel._name (repositories/verified-smart-contracts/CryptoTravel.sol#476) should be constant\nCryptoTravel._symbol (repositories/verified-smart-contracts/CryptoTravel.sol#477) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nowner() should be declared external:\n\t- Ownable.owner() (repositories/verified-smart-contracts/CryptoTravel.sol#431-433)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CryptoTravel.sol#450-452)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CryptoTravel.sol#458-462)\nname() should be declared external:\n\t- CryptoTravel.name() (repositories/verified-smart-contracts/CryptoTravel.sol#487-489)\nsymbol() should be declared external:\n\t- CryptoTravel.symbol() (repositories/verified-smart-contracts/CryptoTravel.sol#491-493)\ndecimals() should be declared external:\n\t- CryptoTravel.decimals() (repositories/verified-smart-contracts/CryptoTravel.sol#495-497)\nallowance(address,address) should be declared external:\n\t- CryptoTravel.allowance(address,address) (repositories/verified-smart-contracts/CryptoTravel.sol#499-501)\napprove(address,uint256) should be declared external:\n\t- CryptoTravel.approve(address,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#503-506)\nsetUniswapPair(address) should be declared external:\n\t- CryptoTravel.setUniswapPair(address) (repositories/verified-smart-contracts/CryptoTravel.sol#508-510)\nsetBlackAddress(address) should be declared external:\n\t- CryptoTravel.setBlackAddress(address) (repositories/verified-smart-contracts/CryptoTravel.sol#512-514)\ntransferFrom(address,address,uint256) should be declared external:\n\t- CryptoTravel.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#516-520)\nsetFeeTotal(uint256) should be declared external:\n\t- CryptoTravel.setFeeTotal(uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#522-527)\nsetMaxWallet(uint256) should be declared external:\n\t- CryptoTravel.setMaxWallet(uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#529-531)\ntotalSupply() should be declared external:\n\t- CryptoTravel.totalSupply() (repositories/verified-smart-contracts/CryptoTravel.sol#533-535)\nbalanceOf(address) should be declared external:\n\t- CryptoTravel.balanceOf(address) (repositories/verified-smart-contracts/CryptoTravel.sol#537-539)\ntransfer(address,uint256) should be declared external:\n\t- CryptoTravel.transfer(address,uint256) (repositories/verified-smart-contracts/CryptoTravel.sol#541-544)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CryptoTravel.sol analyzed (6 contracts with 75 detectors), 46 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MintSwapCanonicalToken.sol --json ./slither/OLD_verified-smart-contracts/json/MintSwapCanonicalToken.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MintSwapCanonicalToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MintSwapCanonicalToken.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/MintSwapCanonicalToken.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/MintSwapCanonicalToken.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/MintSwapCanonicalToken.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/MintSwapCanonicalToken.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PixelBots.sol --json ./slither/OLD_verified-smart-contracts/json/PixelBots.sol.json', returncode=71, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/PixelBots.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelBots.sol#952-973) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PixelBots.sol#959-969)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PixelBots.sol#959)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelBots.sol#952-973) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PixelBots.sol#960)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelBots.sol#961)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelBots.sol#952-973) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PixelBots.sol#962)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixelBots.sol#961)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelBots.sol#952-973) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PixelBots.sol#966)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PixelBots.sol#256-266) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelBots.sol#262-264)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#425-445) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelBots.sol#437-440)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixelBots.sol#952-973) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixelBots.sol#965-967)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['^0.8.0', '^0.8.11']\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#7)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#34)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#177)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#233)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#452)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#478)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#547)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1000)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1029)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1192)\n\t- ^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1268)\n\t- ^0.8.11 (repositories/verified-smart-contracts/PixelBots.sol#1331)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nPixelBots.giveAwayMany(address[]) (repositories/verified-smart-contracts/PixelBots.sol#1417-1435) has costly operations inside a loop:\n\t- _reserved -= 1 (repositories/verified-smart-contracts/PixelBots.sol#1431)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PixelBots.sol#309-311) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#319-325) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PixelBots.sol#338-344) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelBots.sol#352-363) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/PixelBots.sol#398-400) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#408-417) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/PixelBots.sol#371-373) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#381-390) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelBots.sol#284-289) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#425-445) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PixelBots.sol#469-471) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/PixelBots.sol#675-677) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/PixelBots.sol#872-884) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PixelBots.sol#514-525) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/PixelBots.sol#530-540) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#7) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#34) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#177) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#233) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#452) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#478) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#547) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1000) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1029) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1192) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/PixelBots.sol#1268) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.11 (repositories/verified-smart-contracts/PixelBots.sol#1331) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PixelBots.sol#284-289):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PixelBots.sol#287)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PixelBots.sol#352-363):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/PixelBots.sol#361)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#381-390):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/PixelBots.sol#388)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/PixelBots.sol#408-417):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/PixelBots.sol#415)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PixelBots.sol#749) is not in mixedCase\nParameter PixelBots.tokensOwnedBy(address)._publicAddress (repositories/verified-smart-contracts/PixelBots.sol#1368) is not in mixedCase\nParameter PixelBots.setPrice(uint256)._newPrice (repositories/verified-smart-contracts/PixelBots.sol#1382) is not in mixedCase\nVariable PixelBots._reserved (repositories/verified-smart-contracts/PixelBots.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nPixelBots._maxSupply (repositories/verified-smart-contracts/PixelBots.sol#1337) should be constant\nPixelBots.wal1 (repositories/verified-smart-contracts/PixelBots.sol#1342) should be constant\nPixelBots.wal2 (repositories/verified-smart-contracts/PixelBots.sol#1343) should be constant\nPixelBots.wal3 (repositories/verified-smart-contracts/PixelBots.sol#1344) should be constant\nPixelBots.wal4 (repositories/verified-smart-contracts/PixelBots.sol#1345) should be constant\nPixelBots.wal5 (repositories/verified-smart-contracts/PixelBots.sol#1346) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PixelBots.sol#649-651)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PixelBots.sol#656-658)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/PixelBots.sol#663-668)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PixelBots.sol#682-692)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PixelBots.sol#706-708)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelBots.sol#720-729)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixelBots.sol#734-740)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/PixelBots.sol#1075-1078)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PixelBots.sol#1240-1242)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PixelBots.sol#1248-1251)\nmintMainSale(uint256) should be declared external:\n\t- PixelBots.mintMainSale(uint256) (repositories/verified-smart-contracts/PixelBots.sol#1350-1366)\ntokensOwnedBy(address) should be declared external:\n\t- PixelBots.tokensOwnedBy(address) (repositories/verified-smart-contracts/PixelBots.sol#1368-1380)\nsetPrice(uint256) should be declared external:\n\t- PixelBots.setPrice(uint256) (repositories/verified-smart-contracts/PixelBots.sol#1382-1384)\nflipMainSale() should be declared external:\n\t- PixelBots.flipMainSale() (repositories/verified-smart-contracts/PixelBots.sol#1386-1388)\nsetBaseURI(string) should be declared external:\n\t- PixelBots.setBaseURI(string) (repositories/verified-smart-contracts/PixelBots.sol#1394-1396)\ngetPrice() should be declared external:\n\t- PixelBots.getPrice() (repositories/verified-smart-contracts/PixelBots.sol#1398-1400)\ngetTokensLeft() should be declared external:\n\t- PixelBots.getTokensLeft() (repositories/verified-smart-contracts/PixelBots.sol#1402-1405)\nwithdrawAll() should be declared external:\n\t- PixelBots.withdrawAll() (repositories/verified-smart-contracts/PixelBots.sol#1437-1445)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PixelBots.sol analyzed (14 contracts with 75 detectors), 71 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CELADONBRIDGE.sol --json ./slither/OLD_verified-smart-contracts/json/CELADONBRIDGE.sol.json', returncode=10, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CELADONBRIDGE.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nBridgeBase.withdraw(bytes32,uint256,BridgeBase.Sign) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#128-136) ignores return value by token.transfer(msg.sender,amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#132)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nReentrancy in BridgeBase.withdraw(bytes32,uint256,BridgeBase.Sign) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#128-136):\n\tExternal calls:\n\t- token.transfer(msg.sender,amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#132)\n\tState variables written after the call(s):\n\t- txList[txID] = true (repositories/verified-smart-contracts/CELADONBRIDGE.sol#133)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[92m\nCELADONBRIDGE.constructor(address).token (repositories/verified-smart-contracts/CELADONBRIDGE.sol#144) shadows:\n\t- BridgeBase.token (repositories/verified-smart-contracts/CELADONBRIDGE.sol#98) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in BridgeBase.deposit(uint256) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#120-126):\n\tExternal calls:\n\t- transferred = token.transferFrom(msg.sender,address(this),amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#122)\n\tEvent emitted after the call(s):\n\t- Deposit(msg.sender,address(this),amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#124)\nReentrancy in BridgeBase.withdraw(bytes32,uint256,BridgeBase.Sign) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#128-136):\n\tExternal calls:\n\t- token.transfer(msg.sender,amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#132)\n\tEvent emitted after the call(s):\n\t- Withdraw(address(this),msg.sender,amount) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#134)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/CELADONBRIDGE.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\ndeposit(uint256) should be declared external:\n\t- BridgeBase.deposit(uint256) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#120-126)\nwithdraw(bytes32,uint256,BridgeBase.Sign) should be declared external:\n\t- BridgeBase.withdraw(bytes32,uint256,BridgeBase.Sign) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#128-136)\ngetTxdetails(bytes32) should be declared external:\n\t- BridgeBase.getTxdetails(bytes32) (repositories/verified-smart-contracts/CELADONBRIDGE.sol#138-140)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CELADONBRIDGE.sol analyzed (3 contracts with 75 detectors), 10 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PixlPets.sol --json ./slither/OLD_verified-smart-contracts/json/PixlPets.sol.json', returncode=54, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/PixlPets.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nPixlPets.withdrawETH() (repositories/verified-smart-contracts/PixlPets.sol#1258-1261) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = (msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixlPets.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nPixlPets.publicMint(uint256).i (repositories/verified-smart-contracts/PixlPets.sol#1164) is a local variable never initialized\nERC721.balanceOf(address).i (repositories/verified-smart-contracts/PixlPets.sol#390) is a local variable never initialized\nPixlPets.omegaMint(bytes32[],bytes32[]).i (repositories/verified-smart-contracts/PixlPets.sol#1100) is a local variable never initialized\nERC721.balanceOf(address).count (repositories/verified-smart-contracts/PixlPets.sol#389) is a local variable never initialized\nPixlPets.adminMint(uint256,address).i (repositories/verified-smart-contracts/PixlPets.sol#1184) is a local variable never initialized\nPixlPets.presaleMint(uint256,bytes32[]).i (repositories/verified-smart-contracts/PixlPets.sol#1145) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#724-754) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/PixlPets.sol#731-750)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/PixlPets.sol#738)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#724-754) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/PixlPets.sol#739)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixlPets.sol#740)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#724-754) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/PixlPets.sol#741)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/PixlPets.sol#740)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#724-754) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/PixlPets.sol#747)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddressGasOptimized.isContract(address) (repositories/verified-smart-contracts/PixlPets.sol#330-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixlPets.sol#332-334)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#724-754) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PixlPets.sol#746-748)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/PixlPets.sol#233-235) is never used and should be removed\nERC721._mint(address,uint256) (repositories/verified-smart-contracts/PixlPets.sol#641-649) is never used and should be removed\nERC721._safeMint(address,uint256) (repositories/verified-smart-contracts/PixlPets.sol#609-611) is never used and should be removed\nERC721._safeMint(address,uint256,bytes) (repositories/verified-smart-contracts/PixlPets.sol#617-627) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/PixlPets.sol#274-285) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/PixlPets.sol#290-300) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.7 (repositories/verified-smart-contracts/PixlPets.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in PixlPets.withdrawETH() (repositories/verified-smart-contracts/PixlPets.sol#1258-1261):\n\t- (success) = (msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/PixlPets.sol#1259)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/PixlPets.sol#524) is not in mixedCase\nVariable ERC721._owners (repositories/verified-smart-contracts/PixlPets.sol#348) is not in mixedCase\nParameter PixlPets.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/PixlPets.sol#1030) is not in mixedCase\nParameter PixlPets.adminMint(uint256,address)._to (repositories/verified-smart-contracts/PixlPets.sol#1177) is not in mixedCase\nParameter PixlPets.setPresaleMerkleRoot(bytes32)._presaleMerkleRoot (repositories/verified-smart-contracts/PixlPets.sol#1191) is not in mixedCase\nParameter PixlPets.setFreeMintMerkleRoot(bytes32)._freeMintMerkleRoot (repositories/verified-smart-contracts/PixlPets.sol#1196) is not in mixedCase\nParameter PixlPets.setBaseURI(string)._baseURI (repositories/verified-smart-contracts/PixlPets.sol#1200) is not in mixedCase\nParameter PixlPets.updateMaxSupply(uint256)._MAX_SUPPLY (repositories/verified-smart-contracts/PixlPets.sol#1204) is not in mixedCase\nParameter PixlPets.updateMaxPresaleSupply(uint256)._MAX_PER_PS_SPOT (repositories/verified-smart-contracts/PixlPets.sol#1213) is not in mixedCase\nParameter PixlPets.updateMaxPublicSupply(uint256)._MAX_PER_PUBLIC_MINT (repositories/verified-smart-contracts/PixlPets.sol#1217) is not in mixedCase\nParameter PixlPets.updatePresaleMintPrice(uint256)._PRESALE_MINT_PRICE (repositories/verified-smart-contracts/PixlPets.sol#1223) is not in mixedCase\nParameter PixlPets.updatePublicMintPrice(uint256)._PUBLIC_MINT_PRICE (repositories/verified-smart-contracts/PixlPets.sol#1228) is not in mixedCase\nParameter PixlPets.batchSafeTransferFrom(address,address,uint256[],bytes)._from (repositories/verified-smart-contracts/PixlPets.sol#1249) is not in mixedCase\nParameter PixlPets.batchSafeTransferFrom(address,address,uint256[],bytes)._to (repositories/verified-smart-contracts/PixlPets.sol#1249) is not in mixedCase\nParameter PixlPets.batchSafeTransferFrom(address,address,uint256[],bytes)._tokenIds (repositories/verified-smart-contracts/PixlPets.sol#1249) is not in mixedCase\nVariable PixlPets.IS_PUBLIC_SALE_ACTIVE (repositories/verified-smart-contracts/PixlPets.sol#970) is not in mixedCase\nVariable PixlPets.MAX_PER_PS_SPOT (repositories/verified-smart-contracts/PixlPets.sol#977) is not in mixedCase\nVariable PixlPets.MAX_PER_PUBLIC_MINT (repositories/verified-smart-contracts/PixlPets.sol#978) is not in mixedCase\nVariable PixlPets.PRESALE_MINT_PRICE (repositories/verified-smart-contracts/PixlPets.sol#979) is not in mixedCase\nVariable PixlPets.PUBLIC_MINT_PRICE (repositories/verified-smart-contracts/PixlPets.sol#980) is not in mixedCase\nVariable PixlPets.MAX_SUPPLY (repositories/verified-smart-contracts/PixlPets.sol#981) is not in mixedCase\nVariable PixlPets.PHASE_ID (repositories/verified-smart-contracts/PixlPets.sol#982) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nPixlPets.constructor(string) (repositories/verified-smart-contracts/PixlPets.sol#1016-1021) uses literals with too many digits:\n\t- purgatory = 0x0000000000000000000000000000000000000000 (repositories/verified-smart-contracts/PixlPets.sol#1019)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/PixlPets.sol#380-395)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/PixlPets.sol#418-420)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/PixlPets.sol#425-427)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/PixlPets.sol#432-442)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/PixlPets.sol#465-474)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixlPets.sol#492-504)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/PixlPets.sol#509-515)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PixlPets.sol#825-827)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PixlPets.sol#833-836)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PixlPets.sol analyzed (13 contracts with 75 detectors), 54 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/RoquefortRogan.sol --json ./slither/OLD_verified-smart-contracts/json/RoquefortRogan.sol.json', returncode=48, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/RoquefortRogan.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in RoquefortRogan._transfer(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#214-245):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/RoquefortRogan.sol#236)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#252-258)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/RoquefortRogan.sol#239)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/RoquefortRogan.sol#306)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#296)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#297)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/RoquefortRogan.sol#310)\nReentrancy in RoquefortRogan.openTrading() (repositories/verified-smart-contracts/RoquefortRogan.sol#266-278):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/RoquefortRogan.sol#271)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#272)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#272)\n\tState variables written after the call(s):\n\t- tradingOpen = true (repositories/verified-smart-contracts/RoquefortRogan.sol#276)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[93m\nRoquefortRogan.openTrading() (repositories/verified-smart-contracts/RoquefortRogan.sol#266-278) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#272)\nRoquefortRogan.openTrading() (repositories/verified-smart-contracts/RoquefortRogan.sol#266-278) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (repositories/verified-smart-contracts/RoquefortRogan.sol#277)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nRoquefortRogan.allowance(address,address).owner (repositories/verified-smart-contracts/RoquefortRogan.sol#182) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/RoquefortRogan.sol#71-73) (function)\nRoquefortRogan._approve(address,address,uint256).owner (repositories/verified-smart-contracts/RoquefortRogan.sol#207) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/RoquefortRogan.sol#71-73) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in RoquefortRogan._transfer(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#214-245):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/RoquefortRogan.sol#236)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#252-258)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/RoquefortRogan.sol#239)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/RoquefortRogan.sol#311)\nReentrancy in RoquefortRogan.openTrading() (repositories/verified-smart-contracts/RoquefortRogan.sol#266-278):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/RoquefortRogan.sol#271)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#272)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#272)\n\tState variables written after the call(s):\n\t- _maxTxAmount = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/RoquefortRogan.sol#275)\n\t- cooldownEnabled = true (repositories/verified-smart-contracts/RoquefortRogan.sol#274)\n\t- swapEnabled = true (repositories/verified-smart-contracts/RoquefortRogan.sol#273)\nReentrancy in RoquefortRogan.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#191-195):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#192)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#252-258)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#192)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/RoquefortRogan.sol#193)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/RoquefortRogan.sol#210)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in RoquefortRogan._transfer(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#214-245):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/RoquefortRogan.sol#236)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#252-258)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/RoquefortRogan.sol#239)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#300)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\nReentrancy in RoquefortRogan.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#191-195):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#192)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#252-258)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#192)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#211)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/RoquefortRogan.sol#193)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nRoquefortRogan._transfer(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#214-245) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(cooldown[to] < block.timestamp) (repositories/verified-smart-contracts/RoquefortRogan.sol#225)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/RoquefortRogan.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/RoquefortRogan.sol#100) is not in mixedCase\nFunction RoquefortRogan.Approved(address[]) (repositories/verified-smart-contracts/RoquefortRogan.sol#280-284) is not in mixedCase\nConstant RoquefortRogan._tTotal (repositories/verified-smart-contracts/RoquefortRogan.sol#120) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant RoquefortRogan._name (repositories/verified-smart-contracts/RoquefortRogan.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant RoquefortRogan._symbol (repositories/verified-smart-contracts/RoquefortRogan.sol#130) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant RoquefortRogan._decimals (repositories/verified-smart-contracts/RoquefortRogan.sol#131) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in RoquefortRogan._transfer(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#214-245):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/RoquefortRogan.sol#239)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/RoquefortRogan.sol#306)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#296)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#297)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/RoquefortRogan.sol#310)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/RoquefortRogan.sol#311)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/RoquefortRogan.sol#300)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#244)\nReentrancy in RoquefortRogan.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#191-195):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#192)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#262)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/RoquefortRogan.sol#263)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/RoquefortRogan.sol#193)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/RoquefortRogan.sol#210)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/RoquefortRogan.sol#211)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/RoquefortRogan.sol#193)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable RoquefortRogan._feeAddrWallet1 (repositories/verified-smart-contracts/RoquefortRogan.sol#126) is too similar to RoquefortRogan._feeAddrWallet2 (repositories/verified-smart-contracts/RoquefortRogan.sol#127)\nVariable RoquefortRogan._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295) is too similar to RoquefortRogan._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295)\nVariable RoquefortRogan._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#332) is too similar to RoquefortRogan._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#339)\nVariable RoquefortRogan._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295) is too similar to RoquefortRogan._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#339)\nVariable RoquefortRogan._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#347) is too similar to RoquefortRogan._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#330)\nVariable RoquefortRogan._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#347) is too similar to RoquefortRogan._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295)\nVariable RoquefortRogan._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#332) is too similar to RoquefortRogan._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#330)\nVariable RoquefortRogan._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#332) is too similar to RoquefortRogan._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295)\nVariable RoquefortRogan._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#295) is too similar to RoquefortRogan._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#330)\nVariable RoquefortRogan._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#347) is too similar to RoquefortRogan._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/RoquefortRogan.sol#339)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nRoquefortRogan.openTrading() (repositories/verified-smart-contracts/RoquefortRogan.sol#266-278) uses literals with too many digits:\n\t- _maxTxAmount = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/RoquefortRogan.sol#275)\nRoquefortRogan.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/RoquefortRogan.sol#111-363) uses literals with too many digits:\n\t- _tTotal = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/RoquefortRogan.sol#120)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/RoquefortRogan.sol#62) is never used in RoquefortRogan (repositories/verified-smart-contracts/RoquefortRogan.sol#111-363)\nRoquefortRogan._tOwned (repositories/verified-smart-contracts/RoquefortRogan.sol#114) is never used in RoquefortRogan (repositories/verified-smart-contracts/RoquefortRogan.sol#111-363)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/RoquefortRogan.sol#62) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/RoquefortRogan.sol#80-83)\nname() should be declared external:\n\t- RoquefortRogan.name() (repositories/verified-smart-contracts/RoquefortRogan.sol#157-159)\nsymbol() should be declared external:\n\t- RoquefortRogan.symbol() (repositories/verified-smart-contracts/RoquefortRogan.sol#161-163)\ndecimals() should be declared external:\n\t- RoquefortRogan.decimals() (repositories/verified-smart-contracts/RoquefortRogan.sol#165-167)\ntotalSupply() should be declared external:\n\t- RoquefortRogan.totalSupply() (repositories/verified-smart-contracts/RoquefortRogan.sol#169-171)\ntransfer(address,uint256) should be declared external:\n\t- RoquefortRogan.transfer(address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#177-180)\nallowance(address,address) should be declared external:\n\t- RoquefortRogan.allowance(address,address) (repositories/verified-smart-contracts/RoquefortRogan.sol#182-184)\napprove(address,uint256) should be declared external:\n\t- RoquefortRogan.approve(address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#186-189)\ntransferFrom(address,address,uint256) should be declared external:\n\t- RoquefortRogan.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/RoquefortRogan.sol#191-195)\nApproved(address[]) should be declared external:\n\t- RoquefortRogan.Approved(address[]) (repositories/verified-smart-contracts/RoquefortRogan.sol#280-284)\ndelBot(address) should be declared external:\n\t- RoquefortRogan.delBot(address) (repositories/verified-smart-contracts/RoquefortRogan.sol#286-288)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/RoquefortRogan.sol analyzed (7 contracts with 75 detectors), 48 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/EggHeadsClub.sol --json ./slither/OLD_verified-smart-contracts/json/EggHeadsClub.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/EggHeadsClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/EggHeadsClub.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/EggHeadsClub.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/EggHeadsClub.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/EggHeadsClub.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/EggHeadsClub.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/ENRAGEDBULLS.sol --json ./slither/OLD_verified-smart-contracts/json/ENRAGEDBULLS.sol.json', returncode=86, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/ENRAGEDBULLS.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/ENRAGEDBULLS.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/ENRAGEDBULLS.sol\n\n\n\x1b[91m\nENRAGEDBULLS.withdrawAll() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1537-1539) sends eth to arbitrary user\n\tDangerous calls:\n\t- require(bool)(address(msg.sender).send(address(this).balance)) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1538)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1146-1167) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1153-1163)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1153)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1146-1167) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1154)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1155)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1146-1167) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1156)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1155)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1146-1167) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1160)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nMerkleProof._efficientHash(bytes32,bytes32) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#55-61) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#56-60)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#441-461) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#453-456)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1146-1167) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1159-1161)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nENRAGEDBULLS.mintToken(uint256,bytes32[]) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1434-1449) compares to a boolean constant:\n\t-require(bool,string)(whiteListingSale == false || _verify(leaf,_merkleProof),You are not whitelisted!) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1442)\nENRAGEDBULLS.tokenURI(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1484-1492) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1486)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'^0.8.0\', \'^0.8.1\', \'^0.8.7\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#6)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#69)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#139)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#166)\n\t- ^0.8.1 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#244)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#469)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#499)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#527)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#558)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#703)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#734)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#763)\n\t- ^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1212)\n\t- ^0.8.7 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1375)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#325-327) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#335-341) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#354-360) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#368-379) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#414-416) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#424-433) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#387-389) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#397-406) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#300-305) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#441-461) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#156-158) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#863-865) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1062-1076) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#105-116) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#121-131) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#69) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#139) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.1 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#244) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#469) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#499) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#527) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#558) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#703) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#734) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#763) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1212) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.7 (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1375) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#300-305):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#303)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#368-379):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#377)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#397-406):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#404)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#424-433):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#431)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#937) is not in mixedCase\nParameter ENRAGEDBULLS.setWhitelistingRoot(bytes32)._root (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1418) is not in mixedCase\nParameter ENRAGEDBULLS.mintToken(uint256,bytes32[])._mintAmount (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1434) is not in mixedCase\nParameter ENRAGEDBULLS.mintToken(uint256,bytes32[])._merkleProof (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1434) is not in mixedCase\nParameter ENRAGEDBULLS.gift(address,uint256)._to (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1451) is not in mixedCase\nParameter ENRAGEDBULLS.gift(address,uint256)._mintAmount (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1451) is not in mixedCase\nParameter ENRAGEDBULLS.airdrop(address[],uint256)._airdropAddresses (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1461) is not in mixedCase\nParameter ENRAGEDBULLS.airdrop(address[],uint256)._amount (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1461) is not in mixedCase\nParameter ENRAGEDBULLS.setCost(uint256)._newCost (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1500) is not in mixedCase\nParameter ENRAGEDBULLS.setmaxMintAmountPerTransaction(uint16)._amount (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1506) is not in mixedCase\nParameter ENRAGEDBULLS.setMaxSupply(uint256)._supply (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1512) is not in mixedCase\nParameter ENRAGEDBULLS.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1516) is not in mixedCase\nParameter ENRAGEDBULLS.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1520) is not in mixedCase\nFunction ENRAGEDBULLS.StartPublicSale() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1532-1535) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nVariable ENRAGEDBULLS.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1516) is too similar to ENRAGEDBULLS.constructor(string)._notRevealedUrl (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1414)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nENRAGEDBULLS.limitWallet (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1394) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#215-217)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#223-226)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#837-839)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#844-846)\ntokenURI(uint256) should be declared external:\n\t- ENRAGEDBULLS.tokenURI(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1484-1492)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#851-856)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#870-880)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#894-896)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#908-917)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#922-928)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1244-1247)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1259-1262)\nsetWhitelistingRoot(bytes32) should be declared external:\n\t- ENRAGEDBULLS.setWhitelistingRoot(bytes32) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1418-1420)\nmintToken(uint256,bytes32[]) should be declared external:\n\t- ENRAGEDBULLS.mintToken(uint256,bytes32[]) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1434-1449)\ngift(address,uint256) should be declared external:\n\t- ENRAGEDBULLS.gift(address,uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1451-1458)\nairdrop(address[],uint256) should be declared external:\n\t- ENRAGEDBULLS.airdrop(address[],uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1461-1477)\ntoggleReveal() should be declared external:\n\t- ENRAGEDBULLS.toggleReveal() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1496-1498)\nsetCost(uint256) should be declared external:\n\t- ENRAGEDBULLS.setCost(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1500-1502)\nsetmaxMintAmountPerTransaction(uint16) should be declared external:\n\t- ENRAGEDBULLS.setmaxMintAmountPerTransaction(uint16) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1506-1508)\nsetMaxSupply(uint256) should be declared external:\n\t- ENRAGEDBULLS.setMaxSupply(uint256) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1512-1514)\nsetNotRevealedURI(string) should be declared external:\n\t- ENRAGEDBULLS.setNotRevealedURI(string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1516-1518)\nsetBaseURI(string) should be declared external:\n\t- ENRAGEDBULLS.setBaseURI(string) (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1520-1522)\ntogglePause() should be declared external:\n\t- ENRAGEDBULLS.togglePause() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1524-1526)\ntoggleWhiteSale() should be declared external:\n\t- ENRAGEDBULLS.toggleWhiteSale() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1528-1530)\nStartPublicSale() should be declared external:\n\t- ENRAGEDBULLS.StartPublicSale() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1532-1535)\nwithdrawAll() should be declared external:\n\t- ENRAGEDBULLS.withdrawAll() (repositories/verified-smart-contracts/ENRAGEDBULLS.sol#1537-1539)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/ENRAGEDBULLS.sol analyzed (14 contracts with 75 detectors), 86 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/notasecretproject.sol --json ./slither/OLD_verified-smart-contracts/json/notasecretproject.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/notasecretproject.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/notasecretproject.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/notasecretproject.sol\n\n\x1b[91mError: Function needs to specify overridden contracts "ERC721" and "IERC721".\x1b[0m\n    --> repositories/verified-smart-contracts/notasecretproject.sol:1254:77:\n     |\n1254 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:237:1:\n    |\n237 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:471:1:\n    |\n471 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/notasecretproject.sol\n\nError: Function needs to specify overridden contracts "ERC721" and "IERC721".\n    --> repositories/verified-smart-contracts/notasecretproject.sol:1254:77:\n     |\n1254 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:237:1:\n    |\n237 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:471:1:\n    |\n471 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\nNone\nError in ./repositories/verified-smart-contracts/notasecretproject.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/notasecretproject.sol\n\nError: Function needs to specify overridden contracts "ERC721" and "IERC721".\n    --> repositories/verified-smart-contracts/notasecretproject.sol:1254:77:\n     |\n1254 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:237:1:\n    |\n237 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/notasecretproject.sol:471:1:\n    |\n471 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/NinjaGang.sol --json ./slither/OLD_verified-smart-contracts/json/NinjaGang.sol.json', returncode=67, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/NinjaGang.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/NinjaGang.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/NinjaGang.sol\n\n\n\x1b[93m\nReentrancy in NinjaGang.mint(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1409-1429):\n\tExternal calls:\n\t- _safeMint(msg.sender,tokenId) (repositories/verified-smart-contracts/NinjaGang.sol#1425)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/NinjaGang.sol#1094-1104)\n\tState variables written after the call(s):\n\t- ninjasMintedCount += 1 (repositories/verified-smart-contracts/NinjaGang.sol#1423)\n\t- totalClaimed[msg.sender] += 1 (repositories/verified-smart-contracts/NinjaGang.sol#1424)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#1087-1108) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/NinjaGang.sol#1094-1104)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/NinjaGang.sol#1094)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#1087-1108) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/NinjaGang.sol#1095)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/NinjaGang.sol#1096)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#1087-1108) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/NinjaGang.sol#1097)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/NinjaGang.sol#1096)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#1087-1108) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/NinjaGang.sol#1101)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in NinjaGang.mint(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1409-1429):\n\tExternal calls:\n\t- _safeMint(msg.sender,tokenId) (repositories/verified-smart-contracts/NinjaGang.sol#1425)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/NinjaGang.sol#1094-1104)\n\tEvent emitted after the call(s):\n\t- PublicSaleMint(msg.sender,ninjasCount) (repositories/verified-smart-contracts/NinjaGang.sol#1428)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/NinjaGang.sol#99-109) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NinjaGang.sol#105-107)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#268-288) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NinjaGang.sol#280-283)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#1087-1108) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NinjaGang.sol#1100-1102)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nNinjaGang.mint(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1409-1429) has costly operations inside a loop:\n\t- ninjasMintedCount += 1 (repositories/verified-smart-contracts/NinjaGang.sol#1423)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#152-154) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#162-168) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#181-187) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/NinjaGang.sol#195-206) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#241-243) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#251-260) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/NinjaGang.sol#214-216) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#224-233) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#127-132) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#268-288) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/NinjaGang.sol#607-609) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/NinjaGang.sol#810-812) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1007-1019) is never used and should be removed\nPausable._pause() (repositories/verified-smart-contracts/NinjaGang.sol#687-690) is never used and should be removed\nPausable._unpause() (repositories/verified-smart-contracts/NinjaGang.sol#699-702) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#42-53) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#58-68) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#76) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#296) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#326) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#354) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#385) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#530) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#561) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#590) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#617) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#710) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#1136) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#1301) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/NinjaGang.sol#1377) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#127-132):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/NinjaGang.sol#130)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/NinjaGang.sol#195-206):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/NinjaGang.sol#204)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#224-233):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/NinjaGang.sol#231)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/NinjaGang.sol#251-260):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/NinjaGang.sol#258)\nLow level call in NinjaGang._widthdraw(address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1456-1459):\n\t- (success) = _address.call{value: _amount}() (repositories/verified-smart-contracts/NinjaGang.sol#1457)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/NinjaGang.sol#884) is not in mixedCase\nVariable NinjaGang.MAX_TOKENS (repositories/verified-smart-contracts/NinjaGang.sol#1387) is not in mixedCase\nVariable NinjaGang.FREE_TOKENS (repositories/verified-smart-contracts/NinjaGang.sol#1388) is not in mixedCase\nConstant NinjaGang.publicSalePrice (repositories/verified-smart-contracts/NinjaGang.sol#1394) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant NinjaGang.free_price (repositories/verified-smart-contracts/NinjaGang.sol#1395) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nNinjaGang.FREE_TOKENS (repositories/verified-smart-contracts/NinjaGang.sol#1388) should be constant\nNinjaGang.MAX_TOKENS (repositories/verified-smart-contracts/NinjaGang.sol#1387) should be constant\nNinjaGang.founderAddress (repositories/verified-smart-contracts/NinjaGang.sol#1385) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/NinjaGang.sol#784-786)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/NinjaGang.sol#791-793)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#817-827)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/NinjaGang.sol#841-843)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#855-864)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#869-875)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1168-1171)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/NinjaGang.sol#1183-1186)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/NinjaGang.sol#1350-1352)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/NinjaGang.sol#1358-1361)\nsetBaseURI(string) should be declared external:\n\t- NinjaGang.setBaseURI(string) (repositories/verified-smart-contracts/NinjaGang.sol#1445-1448)\nwithdrawAll() should be declared external:\n\t- NinjaGang.withdrawAll() (repositories/verified-smart-contracts/NinjaGang.sol#1450-1454)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/NinjaGang.sol analyzed (14 contracts with 75 detectors), 67 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DASDAOOWNER.sol --json ./slither/OLD_verified-smart-contracts/json/DASDAOOWNER.sol.json', returncode=8, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/DASDAOOWNER.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nDASDAOOWNER.constructor(address)._backup (repositories/verified-smart-contracts/DASDAOOWNER.sol#16) lacks a zero-check on :\n\t\t- backup = _backup (repositories/verified-smart-contracts/DASDAOOWNER.sol#18)\nDASDAOOWNER.changeOwner(address)._newOwner (repositories/verified-smart-contracts/DASDAOOWNER.sol#30) lacks a zero-check on :\n\t\t- owner = _newOwner (repositories/verified-smart-contracts/DASDAOOWNER.sol#32)\nDASDAOOWNER.changeBackup(address)._newBackup (repositories/verified-smart-contracts/DASDAOOWNER.sol#39) lacks a zero-check on :\n\t\t- backup = _newBackup (repositories/verified-smart-contracts/DASDAOOWNER.sol#41)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nPragma version>=0.8.10 (repositories/verified-smart-contracts/DASDAOOWNER.sol#1) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nParameter DASDAOOWNER.changeOwner(address)._newOwner (repositories/verified-smart-contracts/DASDAOOWNER.sol#30) is not in mixedCase\nParameter DASDAOOWNER.changeBackup(address)._newBackup (repositories/verified-smart-contracts/DASDAOOWNER.sol#39) is not in mixedCase\nModifier DASDAOOWNER.Auth() (repositories/verified-smart-contracts/DASDAOOWNER.sol#22-25) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n./repositories/verified-smart-contracts/DASDAOOWNER.sol analyzed (1 contracts with 75 detectors), 8 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol --json ./slither/OLD_verified-smart-contracts/json/DoNotAskMeToDoAFuckingNFT.sol.json', returncode=69, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol\n\n\n\x1b[91m\nBase64.encode(bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1625-1684) contains an incorrect shift operation: mstore(uint256,uint256)(resultPtr_encode_asm_0 - 2,0x3d3d << 240) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1674)\nBase64.encode(bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1625-1684) contains an incorrect shift operation: mstore(uint256,uint256)(resultPtr_encode_asm_0 - 1,0x3d << 248) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1677)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#shift-parameter-mixup\x1b[0m\n\x1b[93m\nBase64.encode(bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1625-1684) performs a multiplication on the result of a division:\n\t-encodedLen = 4 * ((len + 2) / 3) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1630)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nContract locking ether found:\n\tContract DoNotAskMeToDoAFuckingNFT (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1542-1590) has payable functions:\n\t - DoNotAskMeToDoAFuckingNFT.mint() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1549-1554)\n\tBut does not have a function to withdraw the ether\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1324-1345) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1331-1341)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1331)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1324-1345) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1332)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1333)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1324-1345) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1334)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1333)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1324-1345) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1338)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#355-365) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#361-363)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#524-544) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#536-539)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1324-1345) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1337-1339)\nBase64.encode(bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1625-1684) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1637-1681)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#408-410) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#418-424) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#437-443) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#451-462) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#497-499) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#507-516) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#470-472) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#480-489) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#383-388) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#524-544) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#244-246) is never used and should be removed\nDoNotAskMeToDoAFuckingNFT.random(string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1545-1547) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1047-1049) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1244-1256) is never used and should be removed\nSafeERC20._callOptionalReturn(IERC20,bytes) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#635-645) is never used and should be removed\nSafeERC20.safeApprove(IERC20,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#592-605) is never used and should be removed\nSafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#616-627) is never used and should be removed\nSafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#607-614) is never used and should be removed\nSafeERC20.safeTransfer(IERC20,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#568-574) is never used and should be removed\nSafeERC20.safeTransferFrom(IERC20,address,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#576-583) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#193-204) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#209-219) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#168-188) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#6) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#91) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#157) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#227) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#254) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#332) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#552) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#653) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#683) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#711) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#742) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#887) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#918) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#947) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1373) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1536) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#383-388):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#386)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#451-462):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#460)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#480-489):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#487)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#507-516):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#514)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1121) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#303-305)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#311-314)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1021-1023)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1028-1030)\ntokenURI(uint256) should be declared external:\n\t- DoNotAskMeToDoAFuckingNFT.tokenURI(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1556-1589)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1035-1040)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1054-1064)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1078-1080)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1092-1101)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1106-1112)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1405-1408)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1420-1423)\nmint() should be declared external:\n\t- DoNotAskMeToDoAFuckingNFT.mint() (repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol#1549-1554)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DoNotAskMeToDoAFuckingNFT.sol analyzed (18 contracts with 75 detectors), 69 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Dragos.sol --json ./slither/OLD_verified-smart-contracts/json/Dragos.sol.json', returncode=89, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Dragos.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Dragos.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/Dragos.sol\n\nWarning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n    --> repositories/verified-smart-contracts/Dragos.sol:1420:1:\n     |\n1420 | contract Dragos is ERC721Enumerable, ReentrancyGuard, Ownable {\n     | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n    --> repositories/verified-smart-contracts/Dragos.sol:1790:5:\n     |\n1790 |     fallback() external payable {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: Contract code size is 28450 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/Dragos.sol:1420:1:\n     |\n1420 | contract Dragos is ERC721Enumerable, ReentrancyGuard, Ownable {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nDragos.toString(uint256) (repositories/verified-smart-contracts/Dragos.sol#1792-1812) uses a weak PRNG: "buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) (repositories/verified-smart-contracts/Dragos.sol#1808)" \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG\x1b[0m\n\x1b[93m\nStrings.toString(uint256) (repositories/verified-smart-contracts/Dragos.sol#172-193) performs a multiplication on the result of a division:\n\t-temp = (48 + uint8(_i - _i / 10 * 10)) (repositories/verified-smart-contracts/Dragos.sol#187)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nDragos.toString(uint256) (repositories/verified-smart-contracts/Dragos.sol#1792-1812) uses a dangerous strict equality:\n\t- value == 0 (repositories/verified-smart-contracts/Dragos.sol#1796)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities\x1b[0m\n\x1b[93m\nDragos.validateName(string).i (repositories/verified-smart-contracts/Dragos.sol#1640) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Dragos.sol#1193-1214) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/Dragos.sol#1200-1210)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nDragos.setWalletOne(address)._walletAddress (repositories/verified-smart-contracts/Dragos.sol#1759) lacks a zero-check on :\n\t\t- payoutWallet1 = _walletAddress (repositories/verified-smart-contracts/Dragos.sol#1760)\nDragos.setWalletTwo(address)._walletAddress (repositories/verified-smart-contracts/Dragos.sol#1763) lacks a zero-check on :\n\t\t- payoutWallet2 = _walletAddress (repositories/verified-smart-contracts/Dragos.sol#1764)\nDragos.setMintContract(address).contractAddress (repositories/verified-smart-contracts/Dragos.sol#1767) lacks a zero-check on :\n\t\t- mintData = contractAddress (repositories/verified-smart-contracts/Dragos.sol#1768)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/Dragos.sol#1200)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Dragos.sol#1193-1214) potentially used before declaration: retval == IERC721Receiver(to).onERC721Received.selector (repositories/verified-smart-contracts/Dragos.sol#1201)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Dragos.sol#1202)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Dragos.sol#1193-1214) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/Dragos.sol#1203)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/Dragos.sol#1202)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Dragos.sol#1193-1214) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/Dragos.sol#1207)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nDragos.toString(uint256) (repositories/verified-smart-contracts/Dragos.sol#1792-1812) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- value == 0 (repositories/verified-smart-contracts/Dragos.sol#1796)\n\t- temp != 0 (repositories/verified-smart-contracts/Dragos.sol#1801)\n\t- value != 0 (repositories/verified-smart-contracts/Dragos.sol#1806)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/Dragos.sol#414-424) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Dragos.sol#420-422)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#577-597) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Dragos.sol#589-592)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/Dragos.sol#1193-1214) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/Dragos.sol#1206-1208)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDragos.mint(uint256,string[]) (repositories/verified-smart-contracts/Dragos.sol#1686-1710) has costly operations inside a loop:\n\t- specialDragonsMinted ++ (repositories/verified-smart-contracts/Dragos.sol#1704)\nDragos.whitelistMint(uint256,uint256,bytes32[],string[]) (repositories/verified-smart-contracts/Dragos.sol#1712-1740) has costly operations inside a loop:\n\t- specialDragonsMinted ++ (repositories/verified-smart-contracts/Dragos.sol#1732)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop\x1b[0m\n\x1b[92m\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#577-597) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/Dragos.sol#467-469) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#477-483) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/Dragos.sol#496-502) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Dragos.sol#510-521) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/Dragos.sol#556-558) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#566-575) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/Dragos.sol#529-531) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#539-548) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/Dragos.sol#442-447) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/Dragos.sol#213-215) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/Dragos.sol#928-930) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/Dragos.sol#1128-1140) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/Dragos.sol#787-790) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#749-752) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/Dragos.sol#807-810) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/Dragos.sol#767-770) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#621-625) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#657-660) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#667-670) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#642-650) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#632-635) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/Dragos.sol#172-193) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Dragos.sol#1) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/Dragos.sol#442-447):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/Dragos.sol#445)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/Dragos.sol#510-521):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/Dragos.sol#519)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#539-548):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/Dragos.sol#546)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/Dragos.sol#566-575):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/Dragos.sol#573)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter Strings.toString(uint256)._i (repositories/verified-smart-contracts/Dragos.sol#172) is not in mixedCase\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/Dragos.sol#1005) is not in mixedCase\nParameter Dragos.addToWhitelistRootHash(bytes32)._hash (repositories/verified-smart-contracts/Dragos.sol#1470) is not in mixedCase\nParameter Dragos.whitelistValidated(address,uint256,bytes32[],bytes32[])._rootHash (repositories/verified-smart-contracts/Dragos.sol#1659) is not in mixedCase\nParameter Dragos.setWalletOne(address)._walletAddress (repositories/verified-smart-contracts/Dragos.sol#1759) is not in mixedCase\nParameter Dragos.setWalletTwo(address)._walletAddress (repositories/verified-smart-contracts/Dragos.sol#1763) is not in mixedCase\nVariable Dragos.MAX_TOKEN_SUPPLY (repositories/verified-smart-contracts/Dragos.sol#1436) is not in mixedCase\nVariable Dragos._whitelistRootHash (repositories/verified-smart-contracts/Dragos.sol#1443) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nVariable Dragos.payoutWallet1 (repositories/verified-smart-contracts/Dragos.sol#1430) is too similar to Dragos.payoutWallet2 (repositories/verified-smart-contracts/Dragos.sol#1431)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nDragos.slitherConstructorVariables() (repositories/verified-smart-contracts/Dragos.sol#1420-1814) uses literals with too many digits:\n\t- mintPrice = 150000000000000000 (repositories/verified-smart-contracts/Dragos.sol#1433)\nDragos.slitherConstructorVariables() (repositories/verified-smart-contracts/Dragos.sol#1420-1814) uses literals with too many digits:\n\t- whitelistMintPrice = 100000000000000000 (repositories/verified-smart-contracts/Dragos.sol#1434)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nDragos.MAX_TOKEN_SUPPLY (repositories/verified-smart-contracts/Dragos.sol#1436) should be constant\nDragos.maxMintsPerTxn (repositories/verified-smart-contracts/Dragos.sol#1438) should be constant\nDragos.maxSpecialDragons (repositories/verified-smart-contracts/Dragos.sol#1439) should be constant\nDragos.maxWhitelistMints (repositories/verified-smart-contracts/Dragos.sol#1437) should be constant\nDragos.mintPrice (repositories/verified-smart-contracts/Dragos.sol#1433) should be constant\nDragos.whitelistMintPrice (repositories/verified-smart-contracts/Dragos.sol#1434) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/Dragos.sol#265-267)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/Dragos.sol#273-276)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/Dragos.sol#902-904)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/Dragos.sol#909-911)\ntokenURI(uint256) should be declared external:\n\t- Dragos.tokenURI(uint256) (repositories/verified-smart-contracts/Dragos.sol#1614-1629)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/Dragos.sol#916-921)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/Dragos.sol#935-945)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/Dragos.sol#959-964)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Dragos.sol#976-985)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/Dragos.sol#990-996)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/Dragos.sol#1291-1294)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/Dragos.sol#1306-1309)\ngetName(uint256) should be declared external:\n\t- Dragos.getName(uint256) (repositories/verified-smart-contracts/Dragos.sol#1490-1499)\ngetBackground(uint256) should be declared external:\n\t- Dragos.getBackground(uint256) (repositories/verified-smart-contracts/Dragos.sol#1501-1509)\ngetFaction(uint256) should be declared external:\n\t- Dragos.getFaction(uint256) (repositories/verified-smart-contracts/Dragos.sol#1511-1519)\ngetWings(uint256) should be declared external:\n\t- Dragos.getWings(uint256) (repositories/verified-smart-contracts/Dragos.sol#1521-1529)\ngetWingTips(uint256) should be declared external:\n\t- Dragos.getWingTips(uint256) (repositories/verified-smart-contracts/Dragos.sol#1531-1539)\ngetClothes(uint256) should be declared external:\n\t- Dragos.getClothes(uint256) (repositories/verified-smart-contracts/Dragos.sol#1541-1549)\ngetNecklace(uint256) should be declared external:\n\t- Dragos.getNecklace(uint256) (repositories/verified-smart-contracts/Dragos.sol#1551-1559)\ngetMouth(uint256) should be declared external:\n\t- Dragos.getMouth(uint256) (repositories/verified-smart-contracts/Dragos.sol#1561-1569)\ngetEyes(uint256) should be declared external:\n\t- Dragos.getEyes(uint256) (repositories/verified-smart-contracts/Dragos.sol#1571-1579)\ngetHat(uint256) should be declared external:\n\t- Dragos.getHat(uint256) (repositories/verified-smart-contracts/Dragos.sol#1581-1589)\ngetBirthday(uint256) should be declared external:\n\t- Dragos.getBirthday(uint256) (repositories/verified-smart-contracts/Dragos.sol#1591-1595)\ngetStats(uint256,uint256) should be declared external:\n\t- Dragos.getStats(uint256,uint256) (repositories/verified-smart-contracts/Dragos.sol#1605-1612)\nmint(uint256,string[]) should be declared external:\n\t- Dragos.mint(uint256,string[]) (repositories/verified-smart-contracts/Dragos.sol#1686-1710)\nwhitelistMint(uint256,uint256,bytes32[],string[]) should be declared external:\n\t- Dragos.whitelistMint(uint256,uint256,bytes32[],string[]) (repositories/verified-smart-contracts/Dragos.sol#1712-1740)\nsetMintContract(address) should be declared external:\n\t- Dragos.setMintContract(address) (repositories/verified-smart-contracts/Dragos.sol#1767-1769)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Dragos.sol analyzed (15 contracts with 75 detectors), 89 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/MasterPriceOracle.sol --json ./slither/OLD_verified-smart-contracts/json/MasterPriceOracle.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/MasterPriceOracle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/MasterPriceOracle.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum definition.\x1b[0m\n --> ./repositories/verified-smart-contracts/MasterPriceOracle.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/MasterPriceOracle.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/MasterPriceOracle.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum definition.\n --> ./repositories/verified-smart-contracts/MasterPriceOracle.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/SussyBallsContract.sol --json ./slither/OLD_verified-smart-contracts/json/SussyBallsContract.sol.json', returncode=102, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/SussyBallsContract.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1537-1558) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/SussyBallsContract.sol#1544-1554)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nERC721Tradable.constructor(string,string,address)._name (repositories/verified-smart-contracts/SussyBallsContract.sol#1620) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/SussyBallsContract.sol#1191) (state variable)\nERC721Tradable.constructor(string,string,address)._symbol (repositories/verified-smart-contracts/SussyBallsContract.sol#1621) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/SussyBallsContract.sol#1194) (state variable)\nERC721Tradable.isApprovedForAll(address,address).owner (repositories/verified-smart-contracts/SussyBallsContract.sol#1740) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/SussyBallsContract.sol#611-613) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/SussyBallsContract.sol#1544)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1537-1558) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/SussyBallsContract.sol#1545)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SussyBallsContract.sol#1546)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1537-1558) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1547)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/SussyBallsContract.sol#1546)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1537-1558) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/SussyBallsContract.sol#1551)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nEIP712Base.getChainId() (repositories/verified-smart-contracts/SussyBallsContract.sol#92-98) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SussyBallsContract.sol#94-96)\nContextMixin.msgSender() (repositories/verified-smart-contracts/SussyBallsContract.sol#126-141) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SussyBallsContract.sol#130-136)\nAddress.isContract(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#676-686) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SussyBallsContract.sol#682-684)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#845-865) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SussyBallsContract.sol#857-860)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1537-1558) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/SussyBallsContract.sol#1550-1552)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nERC721Tradable.mintTo(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#1655-1663) compares to a boolean constant:\n\t-require(bool,string)(mintingOpen == true,Minting is not open right now!) (repositories/verified-smart-contracts/SussyBallsContract.sol#1657)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#729-731) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#739-745) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#758-764) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#772-783) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#818-820) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#828-837) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#791-793) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#801-810) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#704-709) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#845-865) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/SussyBallsContract.sol#572-574) is never used and should be removed\nContext._msgSender() (repositories/verified-smart-contracts/SussyBallsContract.sol#568-570) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/SussyBallsContract.sol#1158-1164) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/SussyBallsContract.sol#1166-1168) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/SussyBallsContract.sol#1272-1274) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1472-1484) is never used and should be removed\nERC721._safeMint(address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1418-1420) is never used and should be removed\nERC721._safeMint(address,uint256,bytes) (repositories/verified-smart-contracts/SussyBallsContract.sol#1426-1436) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#279-281) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#335-344) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#295-297) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#361-370) is never used and should be removed\nSafeMath.mul(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#265-267) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#251-253) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#312-321) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#166-172) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#208-213) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#220-225) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#191-201) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#179-184) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#522-533) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#538-548) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nERC721Tradable.payableAddresses (repositories/verified-smart-contracts/SussyBallsContract.sol#1613) is set pre-construction with a non-constant function or state variable:\n\t- (RAMPPADDRESS)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#32) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#48) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#123) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#148) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#377) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#486) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#555) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#581) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#653) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#872) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#901) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#928) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#958) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1103) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1130) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1177) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1585) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/SussyBallsContract.sol#1770) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in NativeMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (repositories/verified-smart-contracts/SussyBallsContract.sol#407-441):\n\t- (success,returnData) = address(this).call(abi.encodePacked(functionSignature,userAddress)) (repositories/verified-smart-contracts/SussyBallsContract.sol#435-437)\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#704-709):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/SussyBallsContract.sol#707)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#772-783):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/SussyBallsContract.sol#781)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#801-810):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/SussyBallsContract.sol#808)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/SussyBallsContract.sol#828-837):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/SussyBallsContract.sol#835)\nLow level call in ERC721Tradable._widthdraw(address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1703-1706):\n\t- (success) = _address.call{value: _amount}() (repositories/verified-smart-contracts/SussyBallsContract.sol#1704)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/SussyBallsContract.sol#1349) is not in mixedCase\nParameter ERC721Tradable.mintToAdmin(address)._to (repositories/verified-smart-contracts/SussyBallsContract.sol#1643) is not in mixedCase\nParameter ERC721Tradable.mintTo(address)._to (repositories/verified-smart-contracts/SussyBallsContract.sol#1655) is not in mixedCase\nParameter ERC721Tradable.setPrice(uint256)._feeInWei (repositories/verified-smart-contracts/SussyBallsContract.sol#1677) is not in mixedCase\nParameter ERC721Tradable.tokenURI(uint256)._tokenId (repositories/verified-smart-contracts/SussyBallsContract.sol#1725) is not in mixedCase\nVariable ERC721Tradable.RAMPPADDRESS (repositories/verified-smart-contracts/SussyBallsContract.sol#1609) is not in mixedCase\nVariable ERC721Tradable.SUPPLYCAP (repositories/verified-smart-contracts/SussyBallsContract.sol#1611) is not in mixedCase\nVariable ERC721Tradable.PRICE (repositories/verified-smart-contracts/SussyBallsContract.sol#1612) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nERC721Tradable.RAMPPADDRESS (repositories/verified-smart-contracts/SussyBallsContract.sol#1609) should be constant\nERC721Tradable.SUPPLYCAP (repositories/verified-smart-contracts/SussyBallsContract.sol#1611) should be constant\nERC721Tradable.payableAddressCount (repositories/verified-smart-contracts/SussyBallsContract.sol#1615) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nexecuteMetaTransaction(address,bytes,bytes32,bytes32,uint8) should be declared external:\n\t- NativeMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (repositories/verified-smart-contracts/SussyBallsContract.sol#407-441)\ngetNonce(address) should be declared external:\n\t- NativeMetaTransaction.getNonce(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#459-461)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/SussyBallsContract.sol#631-633)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#639-642)\nbalanceOf(address) should be declared external:\n\t- ERC721.balanceOf(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#1229-1232)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/SussyBallsContract.sol#1246-1248)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/SussyBallsContract.sol#1253-1255)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1260-1265)\n\t- ERC721Tradable.tokenURI(uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1725-1735)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1279-1289)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/SussyBallsContract.sol#1303-1308)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1320-1329)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1334-1340)\nmintToAdmin(address) should be declared external:\n\t- ERC721Tradable.mintToAdmin(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#1643-1648)\nmintTo(address) should be declared external:\n\t- ERC721Tradable.mintTo(address) (repositories/verified-smart-contracts/SussyBallsContract.sol#1655-1663)\nopenMinting() should be declared external:\n\t- ERC721Tradable.openMinting() (repositories/verified-smart-contracts/SussyBallsContract.sol#1665-1667)\nstopMinting() should be declared external:\n\t- ERC721Tradable.stopMinting() (repositories/verified-smart-contracts/SussyBallsContract.sol#1669-1671)\nsetPrice(uint256) should be declared external:\n\t- ERC721Tradable.setPrice(uint256) (repositories/verified-smart-contracts/SussyBallsContract.sol#1677-1679)\nwithdrawAll() should be declared external:\n\t- ERC721Tradable.withdrawAll() (repositories/verified-smart-contracts/SussyBallsContract.sol#1682-1685)\nwithdrawAllRampp() should be declared external:\n\t- ERC721Tradable.withdrawAllRampp() (repositories/verified-smart-contracts/SussyBallsContract.sol#1687-1690)\ncontractURI() should be declared external:\n\t- SussyBallsContract.contractURI() (repositories/verified-smart-contracts/SussyBallsContract.sol#1781-1783)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/SussyBallsContract.sol analyzed (20 contracts with 75 detectors), 102 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Lun.sol --json ./slither/OLD_verified-smart-contracts/json/Lun.sol.json', returncode=14, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/Lun.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/Lun.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLun._name (repositories/verified-smart-contracts/Lun.sol#11) should be constant\nLun._symbol (repositories/verified-smart-contracts/Lun.sol#9) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- Lun.name() (repositories/verified-smart-contracts/Lun.sol#32-34)\nsymbol() should be declared external:\n\t- Lun.symbol() (repositories/verified-smart-contracts/Lun.sol#37-39)\ndecimals() should be declared external:\n\t- Lun.decimals() (repositories/verified-smart-contracts/Lun.sol#42-44)\ntotalSupply() should be declared external:\n\t- Lun.totalSupply() (repositories/verified-smart-contracts/Lun.sol#47-49)\nbalanceOf(address) should be declared external:\n\t- Lun.balanceOf(address) (repositories/verified-smart-contracts/Lun.sol#56-58)\ntransfer(address,uint256) should be declared external:\n\t- Lun.transfer(address,uint256) (repositories/verified-smart-contracts/Lun.sol#66-69)\napprove(address,uint256) should be declared external:\n\t- Lun.approve(address,uint256) (repositories/verified-smart-contracts/Lun.sol#87-90)\ntransferFrom(address,address,uint256) should be declared external:\n\t- Lun.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/Lun.sol#101-115)\nburn(uint256) should be declared external:\n\t- Lun.burn(uint256) (repositories/verified-smart-contracts/Lun.sol#202-204)\nburnFrom(address,uint256) should be declared external:\n\t- Lun.burnFrom(address,uint256) (repositories/verified-smart-contracts/Lun.sol#214-221)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/Lun.sol analyzed (1 contracts with 75 detectors), 14 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PochiSama.sol --json ./slither/OLD_verified-smart-contracts/json/PochiSama.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PochiSama.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PochiSama.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/PochiSama.sol:2:1:\n  |\n2 | pragma solidity 0.8.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PochiSama.sol:2:1:\n  |\n2 | pragma solidity 0.8.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PochiSama.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/PochiSama.sol:2:1:\n  |\n2 | pragma solidity 0.8.4;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/UndeadPastelClub.sol --json ./slither/OLD_verified-smart-contracts/json/UndeadPastelClub.sol.json', returncode=115, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/UndeadPastelClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/UndeadPastelClub.sol:\nWarning: Contract code size is 24592 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/UndeadPastelClub.sol:1378:1:\n     |\n1378 | contract UndeadPastelClub is ERC721Enumerable, Ownable {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nUndeadPastelClub.withdraw() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1637-1642) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1638-1640)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nReentrancy in UndeadPastelClub.gift(uint256,address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1494-1504):\n\tExternal calls:\n\t- _safeMint(destination,supply + i) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1501)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1044-1056)\n\tState variables written after the call(s):\n\t- currentSupply = currentSupply + 1 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1502)\nReentrancy in UndeadPastelClub.mint(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1470-1492):\n\tExternal calls:\n\t- _safeMint(msg.sender,supply + i) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1489)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1044-1056)\n\tState variables written after the call(s):\n\t- addressMintedBalance[msg.sender] ++ (repositories/verified-smart-contracts/UndeadPastelClub.sol#1488)\n\t- currentSupply = currentSupply + 1 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1490)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1\x1b[0m\n\x1b[93m\nUndeadPastelClub.walletOfOwner(address).i (repositories/verified-smart-contracts/UndeadPastelClub.sol#1518) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1037-1060) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1044-1056)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nUndeadPastelClub.constructor(string,string,string)._name (repositories/verified-smart-contracts/UndeadPastelClub.sol#1402) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/UndeadPastelClub.sol#626) (state variable)\nUndeadPastelClub.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/UndeadPastelClub.sol#1403) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/UndeadPastelClub.sol#629) (state variable)\nUndeadPastelClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/UndeadPastelClub.sol#1511) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/UndeadPastelClub.sol#1318) (state variable)\nUndeadPastelClub.isApprovedOrOwner(address,uint256).owner (repositories/verified-smart-contracts/UndeadPastelClub.sol#1660) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1335-1337) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/UndeadPastelClub.sol#1046)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1037-1060) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/UndeadPastelClub.sol#1047)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/UndeadPastelClub.sol#1048)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1037-1060) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1049)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/UndeadPastelClub.sol#1048)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1037-1060) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1053)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nUndeadPastelClub.presaleValidations(uint256,uint256,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1430-1453) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < preSaleEndDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1436-1438)\nUndeadPastelClub.mint(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1470-1492) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < publicSaleDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1481-1483)\nUndeadPastelClub.getCurrentCost() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1549-1555) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < preSaleEndDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1550)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#264-274) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UndeadPastelClub.sol#270-272)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#461-481) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UndeadPastelClub.sol#473-476)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1037-1060) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/UndeadPastelClub.sol#1052-1054)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'>=0.7.0<0.9.0\', \'^0.8.0\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#5)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#30)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#189)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#216)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#241)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#486)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#510)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#581)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#614)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1085)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1115)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1303)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1376)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nUndeadPastelClub.mint(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1470-1492) has costly operations inside a loop:\n\t- currentSupply = currentSupply + 1 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1490)\nUndeadPastelClub.gift(uint256,address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1494-1504) has costly operations inside a loop:\n\t- currentSupply = currentSupply + 1 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1502)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#320-325) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#333-339) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#352-364) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#372-386) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#426-436) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#444-453) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/UndeadPastelClub.sol#394-401) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#409-418) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#292-300) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#461-481) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/UndeadPastelClub.sol#503-505) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/UndeadPastelClub.sol#737-739) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#546-557) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#562-576) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#30) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#189) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#216) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#241) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#486) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#510) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#581) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#614) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1085) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1115) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/UndeadPastelClub.sol#1376) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#292-300):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/UndeadPastelClub.sol#295)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#372-386):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#384)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#409-418):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#416)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#444-453):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/UndeadPastelClub.sol#451)\nLow level call in UndeadPastelClub.withdraw() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1637-1642):\n\t- (success) = address(msg.sender).call{value: address(this).balance}() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1638-1640)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/UndeadPastelClub.sol#833) is not in mixedCase\nParameter UndeadPastelClub.presaleValidations(uint256,uint256,uint256)._ownerMintedCount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1431) is not in mixedCase\nParameter UndeadPastelClub.presaleValidations(uint256,uint256,uint256)._mintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1432) is not in mixedCase\nParameter UndeadPastelClub.presaleValidations(uint256,uint256,uint256)._supply (repositories/verified-smart-contracts/UndeadPastelClub.sol#1433) is not in mixedCase\nParameter UndeadPastelClub.publicsaleValidations(uint256,uint256)._ownerMintedCount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1455) is not in mixedCase\nParameter UndeadPastelClub.publicsaleValidations(uint256,uint256)._mintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1455) is not in mixedCase\nParameter UndeadPastelClub.mint(uint256)._mintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1470) is not in mixedCase\nParameter UndeadPastelClub.gift(uint256,address)._mintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1494) is not in mixedCase\nParameter UndeadPastelClub.isWhitelisted(address)._user (repositories/verified-smart-contracts/UndeadPastelClub.sol#1507) is not in mixedCase\nParameter UndeadPastelClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/UndeadPastelClub.sol#1511) is not in mixedCase\nParameter UndeadPastelClub.pause(bool)._state (repositories/verified-smart-contracts/UndeadPastelClub.sol#1571) is not in mixedCase\nParameter UndeadPastelClub.setNftPerAddressLimitPreSale(uint256)._limit (repositories/verified-smart-contracts/UndeadPastelClub.sol#1575) is not in mixedCase\nParameter UndeadPastelClub.setNftPerAddressLimit(uint256)._limit (repositories/verified-smart-contracts/UndeadPastelClub.sol#1579) is not in mixedCase\nParameter UndeadPastelClub.setPresaleCost(uint256)._newCost (repositories/verified-smart-contracts/UndeadPastelClub.sol#1583) is not in mixedCase\nParameter UndeadPastelClub.setCost(uint256)._newCost (repositories/verified-smart-contracts/UndeadPastelClub.sol#1587) is not in mixedCase\nParameter UndeadPastelClub.setmaxMintAmountPreSale(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1591) is not in mixedCase\nParameter UndeadPastelClub.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/UndeadPastelClub.sol#1595) is not in mixedCase\nParameter UndeadPastelClub.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/UndeadPastelClub.sol#1599) is not in mixedCase\nParameter UndeadPastelClub.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/UndeadPastelClub.sol#1603) is not in mixedCase\nParameter UndeadPastelClub.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/UndeadPastelClub.sol#1607) is not in mixedCase\nParameter UndeadPastelClub.setPresaleMaxSupply(uint256)._newPresaleMaxSupply (repositories/verified-smart-contracts/UndeadPastelClub.sol#1611) is not in mixedCase\nParameter UndeadPastelClub.setMaxSupply(uint256)._maxSupply (repositories/verified-smart-contracts/UndeadPastelClub.sol#1615) is not in mixedCase\nParameter UndeadPastelClub.setPreSaleDate(uint256)._preSaleDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1619) is not in mixedCase\nParameter UndeadPastelClub.setPreSaleEndDate(uint256)._preSaleEndDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1623) is not in mixedCase\nParameter UndeadPastelClub.setPublicSaleDate(uint256)._publicSaleDate (repositories/verified-smart-contracts/UndeadPastelClub.sol#1627) is not in mixedCase\nParameter UndeadPastelClub.whitelistForBurn(address)._newAddress (repositories/verified-smart-contracts/UndeadPastelClub.sol#1649) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/UndeadPastelClub.sol#699-701)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/UndeadPastelClub.sol#706-708)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#713-730)\n\t- UndeadPastelClub.tokenURI(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1524-1547)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#744-754)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/UndeadPastelClub.sol#774-783)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#801-813)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#818-824)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1177-1189)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1354-1356)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1362-1365)\nmint(uint256) should be declared external:\n\t- UndeadPastelClub.mint(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1470-1492)\ngift(uint256,address) should be declared external:\n\t- UndeadPastelClub.gift(uint256,address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1494-1504)\nwalletOfOwner(address) should be declared external:\n\t- UndeadPastelClub.walletOfOwner(address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1511-1522)\ngetCurrentCost() should be declared external:\n\t- UndeadPastelClub.getCurrentCost() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1549-1555)\ngetBaseURI() should be declared external:\n\t- UndeadPastelClub.getBaseURI() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1558-1560)\ngetContractBalance() should be declared external:\n\t- UndeadPastelClub.getContractBalance() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1562-1564)\nreveal() should be declared external:\n\t- UndeadPastelClub.reveal() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1567-1569)\npause(bool) should be declared external:\n\t- UndeadPastelClub.pause(bool) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1571-1573)\nsetNftPerAddressLimitPreSale(uint256) should be declared external:\n\t- UndeadPastelClub.setNftPerAddressLimitPreSale(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1575-1577)\nsetNftPerAddressLimit(uint256) should be declared external:\n\t- UndeadPastelClub.setNftPerAddressLimit(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1579-1581)\nsetPresaleCost(uint256) should be declared external:\n\t- UndeadPastelClub.setPresaleCost(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1583-1585)\nsetCost(uint256) should be declared external:\n\t- UndeadPastelClub.setCost(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1587-1589)\nsetmaxMintAmountPreSale(uint256) should be declared external:\n\t- UndeadPastelClub.setmaxMintAmountPreSale(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1591-1593)\nsetmaxMintAmount(uint256) should be declared external:\n\t- UndeadPastelClub.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1595-1597)\nsetBaseURI(string) should be declared external:\n\t- UndeadPastelClub.setBaseURI(string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1599-1601)\nsetBaseExtension(string) should be declared external:\n\t- UndeadPastelClub.setBaseExtension(string) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1603-1605)\nsetPresaleMaxSupply(uint256) should be declared external:\n\t- UndeadPastelClub.setPresaleMaxSupply(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1611-1613)\nsetMaxSupply(uint256) should be declared external:\n\t- UndeadPastelClub.setMaxSupply(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1615-1617)\nsetPreSaleDate(uint256) should be declared external:\n\t- UndeadPastelClub.setPreSaleDate(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1619-1621)\nsetPreSaleEndDate(uint256) should be declared external:\n\t- UndeadPastelClub.setPreSaleEndDate(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1623-1625)\nsetPublicSaleDate(uint256) should be declared external:\n\t- UndeadPastelClub.setPublicSaleDate(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1627-1629)\nwhitelistUsers(address[]) should be declared external:\n\t- UndeadPastelClub.whitelistUsers(address[]) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1631-1635)\nwithdraw() should be declared external:\n\t- UndeadPastelClub.withdraw() (repositories/verified-smart-contracts/UndeadPastelClub.sol#1637-1642)\nburn(uint256) should be declared external:\n\t- UndeadPastelClub.burn(uint256) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1644-1647)\nwhitelistForBurn(address) should be declared external:\n\t- UndeadPastelClub.whitelistForBurn(address) (repositories/verified-smart-contracts/UndeadPastelClub.sol#1649-1651)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/UndeadPastelClub.sol analyzed (13 contracts with 75 detectors), 115 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BlueJayInu.sol --json ./slither/OLD_verified-smart-contracts/json/BlueJayInu.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BlueJayInu.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BlueJayInu.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n  --> repositories/verified-smart-contracts/BlueJayInu.sol:12:1:\n   |\n12 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/BlueJayInu.sol:12:1:\n   |\n12 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/BlueJayInu.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/BlueJayInu.sol:12:1:\n   |\n12 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CloudVesting.sol --json ./slither/OLD_verified-smart-contracts/json/CloudVesting.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/CloudVesting.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/CloudVesting.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/CloudVesting.sol:3:1:\n  |\n3 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/CloudVesting.sol:3:1:\n  |\n3 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/CloudVesting.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/CloudVesting.sol:3:1:\n  |\n3 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BananaOnWall.sol --json ./slither/OLD_verified-smart-contracts/json/BananaOnWall.sol.json', returncode=95, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BananaOnWall.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BananaOnWall.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/BananaOnWall.sol\n\n\n\x1b[91m\nBananaOnWall.withdraw(uint256,address) (repositories/verified-smart-contracts/BananaOnWall.sol#1807-1811) sends eth to arbitrary user\n\tDangerous calls:\n\t- _owner.transfer(_amount) (repositories/verified-smart-contracts/BananaOnWall.sol#1810)\nBananaOnWall.teamWithdraw(address,address) (repositories/verified-smart-contracts/BananaOnWall.sol#1814-1819) sends eth to arbitrary user\n\tDangerous calls:\n\t- _team1.transfer(balance1) (repositories/verified-smart-contracts/BananaOnWall.sol#1817)\n\t- _team2.transfer(balance2) (repositories/verified-smart-contracts/BananaOnWall.sol#1818)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nERC721._mint(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1625-1636) ignores return value by _holderTokens[to].add(tokenId) (repositories/verified-smart-contracts/BananaOnWall.sol#1631)\nERC721._mint(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1625-1636) ignores return value by _tokenOwners.set(tokenId,to) (repositories/verified-smart-contracts/BananaOnWall.sol#1633)\nERC721._burn(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1648-1666) ignores return value by _holderTokens[owner].remove(tokenId) (repositories/verified-smart-contracts/BananaOnWall.sol#1661)\nERC721._burn(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1648-1666) ignores return value by _tokenOwners.remove(tokenId) (repositories/verified-smart-contracts/BananaOnWall.sol#1663)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1679-1694) ignores return value by _holderTokens[from].remove(tokenId) (repositories/verified-smart-contracts/BananaOnWall.sol#1688)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1679-1694) ignores return value by _holderTokens[to].add(tokenId) (repositories/verified-smart-contracts/BananaOnWall.sol#1689)\nERC721._transfer(address,address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1679-1694) ignores return value by _tokenOwners.set(tokenId,to) (repositories/verified-smart-contracts/BananaOnWall.sol#1691)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nBananaOnWall.withdraw(uint256,address)._owner (repositories/verified-smart-contracts/BananaOnWall.sol#1807) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/BananaOnWall.sol#64) (state variable)\nBananaOnWall.setBaseURI(string).baseURI (repositories/verified-smart-contracts/BananaOnWall.sol#1831) shadows:\n\t- ERC721.baseURI() (repositories/verified-smart-contracts/BananaOnWall.sol#1450-1452) (function)\nBananaOnWall.tokensOfOwner(address)._owner (repositories/verified-smart-contracts/BananaOnWall.sol#1866) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/BananaOnWall.sol#64) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nBananaOnWall.teamWithdraw(address,address)._team1 (repositories/verified-smart-contracts/BananaOnWall.sol#1814) lacks a zero-check on :\n\t\t- _team1.transfer(balance1) (repositories/verified-smart-contracts/BananaOnWall.sol#1817)\nBananaOnWall.teamWithdraw(address,address)._team2 (repositories/verified-smart-contracts/BananaOnWall.sol#1814) lacks a zero-check on :\n\t\t- _team2.transfer(balance2) (repositories/verified-smart-contracts/BananaOnWall.sol#1818)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nEnumerableSet.values(EnumerableSet.AddressSet) (repositories/verified-smart-contracts/BananaOnWall.sol#674-683) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BananaOnWall.sol#678-680)\nEnumerableSet.values(EnumerableSet.UintSet) (repositories/verified-smart-contracts/BananaOnWall.sol#747-756) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BananaOnWall.sol#751-753)\nAddress.isContract(address) (repositories/verified-smart-contracts/BananaOnWall.sol#1020-1030) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BananaOnWall.sol#1026-1028)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1189-1209) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BananaOnWall.sol#1201-1204)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BananaOnWall.sol#1073-1075) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1102-1108) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BananaOnWall.sol#1162-1164) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1172-1181) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BananaOnWall.sol#1135-1137) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1145-1154) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1048-1053) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BananaOnWall.sol#41-43) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1648-1666) is never used and should be removed\nERC721._setTokenURI(uint256,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1703-1706) is never used and should be removed\nEnumerableMap._get(EnumerableMap.Map,bytes32) (repositories/verified-smart-contracts/BananaOnWall.sol#879-883) is never used and should be removed\nEnumerableMap._remove(EnumerableMap.Map,bytes32) (repositories/verified-smart-contracts/BananaOnWall.sol#825-828) is never used and should be removed\nEnumerableMap._tryGet(EnumerableMap.Map,bytes32) (repositories/verified-smart-contracts/BananaOnWall.sol#863-870) is never used and should be removed\nEnumerableMap.get(EnumerableMap.UintToAddressMap,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#977-979) is never used and should be removed\nEnumerableMap.remove(EnumerableMap.UintToAddressMap,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#927-929) is never used and should be removed\nEnumerableMap.tryGet(EnumerableMap.UintToAddressMap,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#965-968) is never used and should be removed\nEnumerableSet._values(EnumerableSet.Set) (repositories/verified-smart-contracts/BananaOnWall.sol#542-544) is never used and should be removed\nEnumerableSet.add(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BananaOnWall.sol#624-626) is never used and should be removed\nEnumerableSet.at(EnumerableSet.AddressSet,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#662-664) is never used and should be removed\nEnumerableSet.contains(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BananaOnWall.sol#641-643) is never used and should be removed\nEnumerableSet.contains(EnumerableSet.UintSet,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#714-716) is never used and should be removed\nEnumerableSet.length(EnumerableSet.AddressSet) (repositories/verified-smart-contracts/BananaOnWall.sol#648-650) is never used and should be removed\nEnumerableSet.remove(EnumerableSet.AddressSet,address) (repositories/verified-smart-contracts/BananaOnWall.sol#634-636) is never used and should be removed\nEnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (repositories/verified-smart-contracts/BananaOnWall.sol#568-570) is never used and should be removed\nEnumerableSet.values(EnumerableSet.AddressSet) (repositories/verified-smart-contracts/BananaOnWall.sol#674-683) is never used and should be removed\nEnumerableSet.values(EnumerableSet.Bytes32Set) (repositories/verified-smart-contracts/BananaOnWall.sol#608-610) is never used and should be removed\nEnumerableSet.values(EnumerableSet.UintSet) (repositories/verified-smart-contracts/BananaOnWall.sol#747-756) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#374-385) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#390-400) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#24) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#49) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#117) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#143) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#283) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#338) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#404) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#760) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#997) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#1215) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#1241) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BananaOnWall.sol#1783) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1048-1053):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BananaOnWall.sol#1051)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1116-1127):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BananaOnWall.sol#1125)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1145-1154):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BananaOnWall.sol#1152)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BananaOnWall.sol#1172-1181):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BananaOnWall.sol#1179)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nContract nonReentrant (repositories/verified-smart-contracts/BananaOnWall.sol#1296-1304) is not in CapWords\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BananaOnWall.sol#1537) is not in mixedCase\nParameter BananaOnWall.withdraw(uint256,address)._amount (repositories/verified-smart-contracts/BananaOnWall.sol#1807) is not in mixedCase\nParameter BananaOnWall.withdraw(uint256,address)._owner (repositories/verified-smart-contracts/BananaOnWall.sol#1807) is not in mixedCase\nParameter BananaOnWall.teamWithdraw(address,address)._team1 (repositories/verified-smart-contracts/BananaOnWall.sol#1814) is not in mixedCase\nParameter BananaOnWall.teamWithdraw(address,address)._team2 (repositories/verified-smart-contracts/BananaOnWall.sol#1814) is not in mixedCase\nParameter BananaOnWall.setBananaOnWallPrice(uint256)._bananaonwallPrice (repositories/verified-smart-contracts/BananaOnWall.sol#1822) is not in mixedCase\nParameter BananaOnWall.reserveBananaOnWall(address,uint256)._to (repositories/verified-smart-contracts/BananaOnWall.sol#1841) is not in mixedCase\nParameter BananaOnWall.reserveBananaOnWall(address,uint256)._reserveAmount (repositories/verified-smart-contracts/BananaOnWall.sol#1841) is not in mixedCase\nParameter BananaOnWall.tokensOfOwner(address)._owner (repositories/verified-smart-contracts/BananaOnWall.sol#1866) is not in mixedCase\nVariable BananaOnWall.BANANAONWALL_PROVENANCE (repositories/verified-smart-contracts/BananaOnWall.sol#1788) is not in mixedCase\nConstant BananaOnWall.maxBananaOnWallPurchase (repositories/verified-smart-contracts/BananaOnWall.sol#1792) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable BananaOnWall.BananaOnWallReserve (repositories/verified-smart-contracts/BananaOnWall.sol#1802) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BananaOnWall.sol#102-105)\nsupportsInterface(bytes4) should be declared external:\n\t- ERC165.supportsInterface(bytes4) (repositories/verified-smart-contracts/BananaOnWall.sol#315-317)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BananaOnWall.sol#1413-1415)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BananaOnWall.sol#1420-1422)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1427-1443)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721.tokenByIndex(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1472-1475)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1480-1489)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BananaOnWall.sol#1503-1508)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1520-1525)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1530-1532)\nwithdraw(uint256,address) should be declared external:\n\t- BananaOnWall.withdraw(uint256,address) (repositories/verified-smart-contracts/BananaOnWall.sol#1807-1811)\nteamWithdraw(address,address) should be declared external:\n\t- BananaOnWall.teamWithdraw(address,address) (repositories/verified-smart-contracts/BananaOnWall.sol#1814-1819)\nsetBananaOnWallPrice(uint256) should be declared external:\n\t- BananaOnWall.setBananaOnWallPrice(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1822-1824)\nsetProvenanceHash(string) should be declared external:\n\t- BananaOnWall.setProvenanceHash(string) (repositories/verified-smart-contracts/BananaOnWall.sol#1827-1829)\nsetBaseURI(string) should be declared external:\n\t- BananaOnWall.setBaseURI(string) (repositories/verified-smart-contracts/BananaOnWall.sol#1831-1833)\nflipSaleState() should be declared external:\n\t- BananaOnWall.flipSaleState() (repositories/verified-smart-contracts/BananaOnWall.sol#1836-1838)\nreserveBananaOnWall(address,uint256) should be declared external:\n\t- BananaOnWall.reserveBananaOnWall(address,uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1841-1848)\nmintBananaOnWall(uint256) should be declared external:\n\t- BananaOnWall.mintBananaOnWall(uint256) (repositories/verified-smart-contracts/BananaOnWall.sol#1851-1864)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BananaOnWall.sol analyzed (15 contracts with 75 detectors), 95 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/FetaCheese.sol --json ./slither/OLD_verified-smart-contracts/json/FetaCheese.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/FetaCheese.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/FetaCheese.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n  --> repositories/verified-smart-contracts/FetaCheese.sol:13:1:\n   |\n13 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/FetaCheese.sol:13:1:\n   |\n13 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/FetaCheese.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n  --> repositories/verified-smart-contracts/FetaCheese.sol:13:1:\n   |\n13 | pragma solidity 0.8.9;\n   | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PayBolt.sol --json ./slither/OLD_verified-smart-contracts/json/PayBolt.sol.json', returncode=176, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PayBolt.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PayBolt.sol:\nWarning: Contract code size is 31594 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n   --> repositories/verified-smart-contracts/PayBolt.sol:375:1:\n    |\n375 | contract ERC20 is Context, IERC20, Ownable {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Contract code size is 38188 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/PayBolt.sol:1161:1:\n     |\n1161 | contract ERC1363 is ReentrancyGuard, ERC20, IERC1363, ERC165 {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Contract code size is 38786 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/PayBolt.sol:1307:1:\n     |\n1307 | contract PayBolt is ERC1363 {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[91m\nERC20.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#655-670) sends eth to arbitrary user\n\tDangerous calls:\n\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[91m\nReentrancy in ERC20._transfer(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#569-602):\n\tExternal calls:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\nReentrancy in ERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208):\n\tExternal calls:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- require(bool,string)(_checkAndCallTransfer(_msgSender(),to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1200)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- inSwapAndLiquify = true (repositories/verified-smart-contracts/PayBolt.sol#462)\n\t\t- inSwapAndLiquify = false (repositories/verified-smart-contracts/PayBolt.sol#464)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\nReentrancy in ERC1363.transferFromAndCall(address,address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1216-1234):\n\tExternal calls:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- require(bool,string)(_checkAndCallTransfer(from,to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1226)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- inSwapAndLiquify = true (repositories/verified-smart-contracts/PayBolt.sol#462)\n\t\t- inSwapAndLiquify = false (repositories/verified-smart-contracts/PayBolt.sol#464)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[91m\nERC1363.transferOtherTokenAndCall(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1256-1284) ignores return value by IERC20(tokenIn).transferFrom(msg.sender,address(this),value) (repositories/verified-smart-contracts/PayBolt.sol#1260)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer\x1b[0m\n\x1b[93m\nERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629) performs a multiplication on the result of a division:\n\t-toSwapIntoEth = contractTokenBalance / liquidityFee * totalEthPortion (repositories/verified-smart-contracts/PayBolt.sol#608)\nERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629) performs a multiplication on the result of a division:\n\t-teamPortion = transferredBalance / totalEthPortion * taxTeamPercent (repositories/verified-smart-contracts/PayBolt.sol#614)\nERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629) performs a multiplication on the result of a division:\n\t-treasuryPortion = transferredBalance / totalEthPortion * taxTreasuryPercent (repositories/verified-smart-contracts/PayBolt.sol#615)\nERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208) performs a multiplication on the result of a division:\n\t-txPaymentFee = value / 10000 * paymentFee (repositories/verified-smart-contracts/PayBolt.sol#1196)\nERC1363.transferFromAndCall(address,address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1216-1234) performs a multiplication on the result of a division:\n\t-txPaymentFee = value / 10000 * paymentFee (repositories/verified-smart-contracts/PayBolt.sol#1222)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply\x1b[0m\n\x1b[93m\nERC20.swapTokensForEth(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#631-653) ignores return value by IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\nERC20.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#655-670) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\nERC1363.transferOtherTokenAndCall(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1256-1284) ignores return value by IERC20(tokenIn).approve(address(uniswapV2Router),value) (repositories/verified-smart-contracts/PayBolt.sol#1262)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nERC20.allowance(address,address).owner (repositories/verified-smart-contracts/PayBolt.sol#515) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PayBolt.sol#152-154) (function)\nERC20._approve(address,address,uint256).owner (repositories/verified-smart-contracts/PayBolt.sol#561) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/PayBolt.sol#152-154) (function)\nERC1363.constructor(string,string,address).name (repositories/verified-smart-contracts/PayBolt.sol#1179) shadows:\n\t- ERC20.name() (repositories/verified-smart-contracts/PayBolt.sol#489-491) (function)\nERC1363.constructor(string,string,address).symbol (repositories/verified-smart-contracts/PayBolt.sol#1179) shadows:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/PayBolt.sol#493-495) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nERC20.setTeamAddress(address)._teamAddress (repositories/verified-smart-contracts/PayBolt.sol#1016) lacks a zero-check on :\n\t\t- teamAddress = address(_teamAddress) (repositories/verified-smart-contracts/PayBolt.sol#1017)\nERC20.setTreasuryAddress(address)._treasuryAddress (repositories/verified-smart-contracts/PayBolt.sol#1021) lacks a zero-check on :\n\t\t- treasuryAddress = address(_treasuryAddress) (repositories/verified-smart-contracts/PayBolt.sol#1022)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nReentrancy in ERC20._transfer(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#569-602):\n\tExternal calls:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\nReentrancy in ERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629):\n\tExternal calls:\n\t- swapTokensForEth(address(this),address(this),toSwapIntoEth) (repositories/verified-smart-contracts/PayBolt.sol#611)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tExternal calls sending eth:\n\t- transferToAddressETH(teamAddress,teamPortion) (repositories/verified-smart-contracts/PayBolt.sol#618)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transferToAddressETH(treasuryAddress,treasuryPortion) (repositories/verified-smart-contracts/PayBolt.sol#621)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\nReentrancy in ERC20.constructor(string,string,address) (repositories/verified-smart-contracts/PayBolt.sol#467-487):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/PayBolt.sol#474-475)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/PayBolt.sol#479)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/PayBolt.sol#480)\n\t- _isExcludedFromFee[teamAddress] = true (repositories/verified-smart-contracts/PayBolt.sol#481)\n\t- _isExcludedFromFee[treasuryAddress] = true (repositories/verified-smart-contracts/PayBolt.sol#482)\n\t- holders = 1 (repositories/verified-smart-contracts/PayBolt.sol#484)\n\t- uniswapV2Router = _uniswapV2Router (repositories/verified-smart-contracts/PayBolt.sol#477)\nReentrancy in ERC1363.constructor(string,string,address) (repositories/verified-smart-contracts/PayBolt.sol#1179-1183):\n\tExternal calls:\n\t- ERC20(name,symbol,routerAddress) (repositories/verified-smart-contracts/PayBolt.sol#1179)\n\t\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/PayBolt.sol#474-475)\n\tState variables written after the call(s):\n\t- _registerInterface(_INTERFACE_ID_ERC1363_TRANSFER) (repositories/verified-smart-contracts/PayBolt.sol#1181)\n\t\t- _supportedInterfaces[interfaceId] = true (repositories/verified-smart-contracts/PayBolt.sol#1157)\n\t- _registerInterface(_INTERFACE_ID_ERC1363_APPROVE) (repositories/verified-smart-contracts/PayBolt.sol#1182)\n\t\t- _supportedInterfaces[interfaceId] = true (repositories/verified-smart-contracts/PayBolt.sol#1157)\nReentrancy in ERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208):\n\tExternal calls:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- require(bool,string)(_checkAndCallTransfer(_msgSender(),to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1200)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\nReentrancy in ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#524-528):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/PayBolt.sol#526)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\nReentrancy in ERC1363.transferOtherTokenAndCall(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1256-1284):\n\tExternal calls:\n\t- IERC20(tokenIn).transferFrom(msg.sender,address(this),value) (repositories/verified-smart-contracts/PayBolt.sol#1260)\n\t- IERC20(tokenIn).approve(address(uniswapV2Router),value) (repositories/verified-smart-contracts/PayBolt.sol#1262)\n\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(value,minValue,path,msg.sender,block.timestamp + 120) (repositories/verified-smart-contracts/PayBolt.sol#1271-1277)\n\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in ERC20._transfer(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#569-602):\n\tExternal calls:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\nReentrancy in ERC20.addLiquidity(uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#655-670):\n\tExternal calls:\n\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\nReentrancy in ERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629):\n\tExternal calls:\n\t- swapTokensForEth(address(this),address(this),toSwapIntoEth) (repositories/verified-smart-contracts/PayBolt.sol#611)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tExternal calls sending eth:\n\t- transferToAddressETH(teamAddress,teamPortion) (repositories/verified-smart-contracts/PayBolt.sol#618)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transferToAddressETH(treasuryAddress,treasuryPortion) (repositories/verified-smart-contracts/PayBolt.sol#621)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\nReentrancy in ERC1363.approveAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1242-1250):\n\tExternal calls:\n\t- require(bool,string)(_checkAndCallApprove(spender,value,data),ERC1363: _checkAndCallApprove reverts) (repositories/verified-smart-contracts/PayBolt.sol#1247)\n\t\t- retval = IERC1363Spender(spender).onApprovalReceived(_msgSender(),value,data) (repositories/verified-smart-contracts/PayBolt.sol#1300-1302)\n\tEvent emitted after the call(s):\n\t- ApproveAndCall(spender,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1248)\nReentrancy in ERC20.constructor(string,string,address) (repositories/verified-smart-contracts/PayBolt.sol#467-487):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/PayBolt.sol#474-475)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/PayBolt.sol#486)\nReentrancy in ERC20.swapTokensForEth(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#631-653):\n\tExternal calls:\n\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tEvent emitted after the call(s):\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\nReentrancy in ERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208):\n\tExternal calls:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- require(bool,string)(_checkAndCallTransfer(_msgSender(),to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1200)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- TransferAndCall(to,valueAfterFee,data) (repositories/verified-smart-contracts/PayBolt.sol#1206)\nReentrancy in ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#524-528):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/PayBolt.sol#526)\nReentrancy in ERC1363.transferFromAndCall(address,address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1216-1234):\n\tExternal calls:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\t- require(bool,string)(_checkAndCallTransfer(from,to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1226)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- TransferFromAndCall(from,to,valueAfterFee,data) (repositories/verified-smart-contracts/PayBolt.sol#1232)\nReentrancy in ERC1363.transferOtherTokenAndCall(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1256-1284):\n\tExternal calls:\n\t- IERC20(tokenIn).transferFrom(msg.sender,address(this),value) (repositories/verified-smart-contracts/PayBolt.sol#1260)\n\t- IERC20(tokenIn).approve(address(uniswapV2Router),value) (repositories/verified-smart-contracts/PayBolt.sol#1262)\n\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(value,minValue,path,msg.sender,block.timestamp + 120) (repositories/verified-smart-contracts/PayBolt.sol#1271-1277)\n\tEvent emitted after the call(s):\n\t- TransferOtherTokenAndCall(tokenIn,to,amountReceived,minValue,data) (repositories/verified-smart-contracts/PayBolt.sol#1281)\nReentrancy in ERC1363.transferOtherTokenAndCall(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1256-1284):\n\tExternal calls:\n\t- IERC20(tokenIn).transferFrom(msg.sender,address(this),value) (repositories/verified-smart-contracts/PayBolt.sol#1260)\n\t- IERC20(tokenIn).approve(address(uniswapV2Router),value) (repositories/verified-smart-contracts/PayBolt.sol#1262)\n\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(value,minValue,path,msg.sender,block.timestamp + 120) (repositories/verified-smart-contracts/PayBolt.sol#1271-1277)\n\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t\t- retval = IERC1363Receiver(to).onTransferReceived(_msgSender(),from,value,data) (repositories/verified-smart-contracts/PayBolt.sol#1290-1292)\n\t\t- IERC20(tokenAddress).approve(address(uniswapV2Router),tokenAmount) (repositories/verified-smart-contracts/PayBolt.sol#641)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,toAddress,block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#644-650)\n\tExternal calls sending eth:\n\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\n\t- TransferAndCall(to,valueAfterFee,data) (repositories/verified-smart-contracts/PayBolt.sol#1206)\n\t\t- transferAndCall(to,amountReceived,data) (repositories/verified-smart-contracts/PayBolt.sol#1283)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/PayBolt.sol#85-94) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PayBolt.sol#92)\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PayBolt.sol#121-138) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/PayBolt.sol#130-133)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nAddress._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PayBolt.sol#121-138) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/PayBolt.sol#104-106) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/PayBolt.sol#108-110) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/PayBolt.sol#112-114) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PayBolt.sol#116-119) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#96-102) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/PayBolt.sol#18-21) is never used and should be removed\nERC165Checker._callERC165SupportsInterface(address,bytes4) (repositories/verified-smart-contracts/PayBolt.sol#1128-1137) is never used and should be removed\nERC165Checker._supportsERC165Interface(address,bytes4) (repositories/verified-smart-contracts/PayBolt.sol#1120-1126) is never used and should be removed\nERC165Checker.supportsAllInterfaces(address,bytes4[]) (repositories/verified-smart-contracts/PayBolt.sol#1103-1118) is never used and should be removed\nERC165Checker.supportsERC165(address) (repositories/verified-smart-contracts/PayBolt.sol#1090-1095) is never used and should be removed\nERC165Checker.supportsInterface(address,bytes4) (repositories/verified-smart-contracts/PayBolt.sol#1097-1101) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#61-63) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nERC20._tTotal (repositories/verified-smart-contracts/PayBolt.sol#399) is set pre-construction with a non-constant function or state variable:\n\t- 10 * 10 ** 9 * 10 ** _decimals\nERC20._rTotal (repositories/verified-smart-contracts/PayBolt.sol#400) is set pre-construction with a non-constant function or state variable:\n\t- (_MAX - (_MAX % _tTotal))\nERC20._previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#408) is set pre-construction with a non-constant function or state variable:\n\t- taxFee\nERC20._previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#415) is set pre-construction with a non-constant function or state variable:\n\t- liquidityFee\nERC20.maxTxAmount (repositories/verified-smart-contracts/PayBolt.sol#417) is set pre-construction with a non-constant function or state variable:\n\t- 100 * 10 ** 6 * 10 ** _decimals\nERC20.minimumTokensBeforeSwap (repositories/verified-smart-contracts/PayBolt.sol#418) is set pre-construction with a non-constant function or state variable:\n\t- 2 * 10 ** 6 * 10 ** _decimals\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.11 (repositories/verified-smart-contracts/PayBolt.sol#11) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#96-102):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/PayBolt.sol#100)\nLow level call in Address._functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/PayBolt.sol#121-138):\n\t- (success,returndata) = target.call{value: weiValue}(data) (repositories/verified-smart-contracts/PayBolt.sol#124)\nLow level call in ERC165Checker._callERC165SupportsInterface(address,bytes4) (repositories/verified-smart-contracts/PayBolt.sol#1128-1137):\n\t- (success,result) = account.staticcall{gas: 30000}(encodedParams) (repositories/verified-smart-contracts/PayBolt.sol#1134)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nFunction IUniswapV2Pair.DOMAIN_SEPARATOR() (repositories/verified-smart-contracts/PayBolt.sol#204) is not in mixedCase\nFunction IUniswapV2Pair.PERMIT_TYPEHASH() (repositories/verified-smart-contracts/PayBolt.sol#205) is not in mixedCase\nFunction IUniswapV2Pair.MINIMUM_LIQUIDITY() (repositories/verified-smart-contracts/PayBolt.sol#222) is not in mixedCase\nFunction IUniswapV2Router01.WETH() (repositories/verified-smart-contracts/PayBolt.sol#242) is not in mixedCase\nParameter ERC20.calculateTaxFee(uint256)._amount (repositories/verified-smart-contracts/PayBolt.sol#827) is not in mixedCase\nParameter ERC20.calculateLiquidityFee(uint256)._amount (repositories/verified-smart-contracts/PayBolt.sol#831) is not in mixedCase\nParameter ERC20.setTaxFeePercent(uint256)._taxFee (repositories/verified-smart-contracts/PayBolt.sol#976) is not in mixedCase\nParameter ERC20.setMaxTxAmount(uint256)._maxTxAmount (repositories/verified-smart-contracts/PayBolt.sol#986) is not in mixedCase\nParameter ERC20.setLiquidityFeePercent(uint256)._liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#991) is not in mixedCase\nParameter ERC20.setTaxTeamPercent(uint256)._percent (repositories/verified-smart-contracts/PayBolt.sol#996) is not in mixedCase\nParameter ERC20.setTaxTreasuryPercent(uint256)._percent (repositories/verified-smart-contracts/PayBolt.sol#1001) is not in mixedCase\nParameter ERC20.setTaxLPPercent(uint256)._percent (repositories/verified-smart-contracts/PayBolt.sol#1006) is not in mixedCase\nParameter ERC20.setNumTokensSellToAddToLiquidity(uint256)._minimumTokensBeforeSwap (repositories/verified-smart-contracts/PayBolt.sol#1011) is not in mixedCase\nParameter ERC20.setTeamAddress(address)._teamAddress (repositories/verified-smart-contracts/PayBolt.sol#1016) is not in mixedCase\nParameter ERC20.setTreasuryAddress(address)._treasuryAddress (repositories/verified-smart-contracts/PayBolt.sol#1021) is not in mixedCase\nParameter ERC20.setSwapAndLiquifyEnabled(bool)._enabled (repositories/verified-smart-contracts/PayBolt.sol#1026) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/PayBolt.sol#19)" inContext (repositories/verified-smart-contracts/PayBolt.sol#13-22)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nReentrancy in ERC20._transfer(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#569-602):\n\tExternal calls:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- applyTax(minimumTokensBeforeSwap) (repositories/verified-smart-contracts/PayBolt.sol#588)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/PayBolt.sol#601)\nReentrancy in ERC20.applyTax(uint256) (repositories/verified-smart-contracts/PayBolt.sol#604-629):\n\tExternal calls:\n\t- transferToAddressETH(teamAddress,teamPortion) (repositories/verified-smart-contracts/PayBolt.sol#618)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transferToAddressETH(treasuryAddress,treasuryPortion) (repositories/verified-smart-contracts/PayBolt.sol#621)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- transferToAddressETH(teamAddress,teamPortion) (repositories/verified-smart-contracts/PayBolt.sol#618)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transferToAddressETH(treasuryAddress,treasuryPortion) (repositories/verified-smart-contracts/PayBolt.sol#621)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- addLiquidity(leftOverToken,leftOverEth) (repositories/verified-smart-contracts/PayBolt.sol#626)\nReentrancy in ERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208):\n\tExternal calls:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- require(bool,string)(_checkAndCallTransfer(_msgSender(),to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1200)\n\t\t- _status = _ENTERED (repositories/verified-smart-contracts/PayBolt.sol#39)\n\t\t- _status = _NOT_ENTERED (repositories/verified-smart-contracts/PayBolt.sol#45)\nReentrancy in ERC1363.transferAndCall(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1191-1208):\n\tExternal calls:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- transfer(to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1199)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- inSwapAndLiquify = true (repositories/verified-smart-contracts/PayBolt.sol#462)\n\t\t- inSwapAndLiquify = false (repositories/verified-smart-contracts/PayBolt.sol#464)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1203)\n\t- TransferAndCall(to,valueAfterFee,data) (repositories/verified-smart-contracts/PayBolt.sol#1206)\nReentrancy in ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#524-528):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/PayBolt.sol#525)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/PayBolt.sol#526)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/PayBolt.sol#526)\nReentrancy in ERC1363.transferFromAndCall(address,address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1216-1234):\n\tExternal calls:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- require(bool,string)(_checkAndCallTransfer(from,to,valueAfterFee,data),ERC1363: _checkAndCallTransfer reverts) (repositories/verified-smart-contracts/PayBolt.sol#1226)\n\t\t- _status = _ENTERED (repositories/verified-smart-contracts/PayBolt.sol#39)\n\t\t- _status = _NOT_ENTERED (repositories/verified-smart-contracts/PayBolt.sol#45)\nReentrancy in ERC1363.transferFromAndCall(address,address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1216-1234):\n\tExternal calls:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\tExternal calls sending eth:\n\t- transferFrom(from,to,valueAfterFee) (repositories/verified-smart-contracts/PayBolt.sol#1225)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- recipient.transfer(amount) (repositories/verified-smart-contracts/PayBolt.sol#1032)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/PayBolt.sol#660-667)\n\tState variables written after the call(s):\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/PayBolt.sol#565)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _previousLiquidityFee = liquidityFee (repositories/verified-smart-contracts/PayBolt.sol#839)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _previousTaxFee = taxFee (repositories/verified-smart-contracts/PayBolt.sol#838)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)] + rLiquidity (repositories/verified-smart-contracts/PayBolt.sol#812)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#713)\n\t\t- _rOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#695)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#733)\n\t\t- _rOwned[sender] = _rOwned[sender].customSubOrZero(rAmount) (repositories/verified-smart-contracts/PayBolt.sol#752)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#699)\n\t\t- _rOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#737)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#718)\n\t\t- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#757)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _rTotal = _rTotal - rFee (repositories/verified-smart-contracts/PayBolt.sol#767)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _tFeeTotal = _tFeeTotal + tFee (repositories/verified-smart-contracts/PayBolt.sol#768)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)] + tLiquidity (repositories/verified-smart-contracts/PayBolt.sol#814)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#751)\n\t\t- _tOwned[sender] = senderAfter (repositories/verified-smart-contracts/PayBolt.sol#732)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#717)\n\t\t- _tOwned[recipient] = recipientAfter (repositories/verified-smart-contracts/PayBolt.sol#756)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- holders = holders + 1 (repositories/verified-smart-contracts/PayBolt.sol#819)\n\t\t- holders = holders.customSubOrZero(1) (repositories/verified-smart-contracts/PayBolt.sol#823)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- inSwapAndLiquify = true (repositories/verified-smart-contracts/PayBolt.sol#462)\n\t\t- inSwapAndLiquify = false (repositories/verified-smart-contracts/PayBolt.sol#464)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- liquidityFee = _previousLiquidityFee (repositories/verified-smart-contracts/PayBolt.sol#847)\n\t\t- liquidityFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#842)\n\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t\t- taxFee = _previousTaxFee (repositories/verified-smart-contracts/PayBolt.sol#846)\n\t\t- taxFee = 0 (repositories/verified-smart-contracts/PayBolt.sol#841)\n\tEvent emitted after the call(s):\n\t- AddLiquidity(tokenAmount,ethAmount) (repositories/verified-smart-contracts/PayBolt.sol#669)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- ApplyTax(toSwapIntoEth,transferredBalance,leftOverToken) (repositories/verified-smart-contracts/PayBolt.sol#628)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/PayBolt.sol#566)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- SwapTokensForETH(tokenAmount,path) (repositories/verified-smart-contracts/PayBolt.sol#652)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#705)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#743)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#724)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/PayBolt.sol#763)\n\t\t- transfer(teamAddress,txPaymentFee) (repositories/verified-smart-contracts/PayBolt.sol#1229)\n\t- TransferFromAndCall(from,to,valueAfterFee,data) (repositories/verified-smart-contracts/PayBolt.sol#1232)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (repositories/verified-smart-contracts/PayBolt.sol#247) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (repositories/verified-smart-contracts/PayBolt.sol#248)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._transferToExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20._transferFromExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._getTValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#780)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#788) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._transferBothExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747)\nVariable ERC20.reflectionFromToken(uint256,bool).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#550) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20._transferToExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#709) is too similar to ERC20._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691)\nVariable ERC20._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#691) is too similar to ERC20._transferFromExcluded(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#728)\nVariable ERC20._transferBothExcluded(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#747) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nVariable ERC20._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#773) is too similar to ERC20._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/PayBolt.sol#772)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nERC20._decimals (repositories/verified-smart-contracts/PayBolt.sol#396) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/PayBolt.sol#161-164)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/PayBolt.sol#166-170)\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/PayBolt.sol#489-491)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/PayBolt.sol#493-495)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/PayBolt.sol#497-499)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/PayBolt.sol#501-503)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/PayBolt.sol#515-517)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#530-533)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#535-538)\ntotalFees() should be declared external:\n\t- ERC20.totalFees() (repositories/verified-smart-contracts/PayBolt.sol#540-542)\nreflectionFromToken(uint256,bool) should be declared external:\n\t- ERC20.reflectionFromToken(uint256,bool) (repositories/verified-smart-contracts/PayBolt.sol#544-553)\nisExcludedFromReward(address) should be declared external:\n\t- ERC20.isExcludedFromReward(address) (repositories/verified-smart-contracts/PayBolt.sol#850-852)\nexcludeFromReward(address) should be declared external:\n\t- ERC20.excludeFromReward(address) (repositories/verified-smart-contracts/PayBolt.sol#854-863)\nisExcludedFromFee(address) should be declared external:\n\t- ERC20.isExcludedFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#896-898)\nexcludeFromFee(address) should be declared external:\n\t- ERC20.excludeFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#900-904)\nincludeInFee(address) should be declared external:\n\t- ERC20.includeInFee(address) (repositories/verified-smart-contracts/PayBolt.sol#906-910)\nisOriginExcludedFromFee(address) should be declared external:\n\t- ERC20.isOriginExcludedFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#912-914)\nexcludeOriginFromFee(address) should be declared external:\n\t- ERC20.excludeOriginFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#916-920)\nincludeOriginInFee(address) should be declared external:\n\t- ERC20.includeOriginInFee(address) (repositories/verified-smart-contracts/PayBolt.sol#922-926)\nisDestinationExcludedFromFee(address) should be declared external:\n\t- ERC20.isDestinationExcludedFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#928-930)\nexcludeDestinationFromFee(address) should be declared external:\n\t- ERC20.excludeDestinationFromFee(address) (repositories/verified-smart-contracts/PayBolt.sol#932-936)\nincludeDestinationInFee(address) should be declared external:\n\t- ERC20.includeDestinationInFee(address) (repositories/verified-smart-contracts/PayBolt.sol#938-942)\nisAddressBlacklisted(address) should be declared external:\n\t- ERC20.isAddressBlacklisted(address) (repositories/verified-smart-contracts/PayBolt.sol#944-946)\nblackList(address) should be declared external:\n\t- ERC20.blackList(address) (repositories/verified-smart-contracts/PayBolt.sol#948-952)\nremoveFromBlacklist(address) should be declared external:\n\t- ERC20.removeFromBlacklist(address) (repositories/verified-smart-contracts/PayBolt.sol#954-958)\nisAddressWhitelistedMerchant(address) should be declared external:\n\t- ERC20.isAddressWhitelistedMerchant(address) (repositories/verified-smart-contracts/PayBolt.sol#960-962)\nwhitelistMerchant(address) should be declared external:\n\t- ERC20.whitelistMerchant(address) (repositories/verified-smart-contracts/PayBolt.sol#964-968)\nremoveFromWhitelistMerchant(address) should be declared external:\n\t- ERC20.removeFromWhitelistMerchant(address) (repositories/verified-smart-contracts/PayBolt.sol#970-974)\nsetSwapAndLiquifyEnabled(bool) should be declared external:\n\t- ERC20.setSwapAndLiquifyEnabled(bool) (repositories/verified-smart-contracts/PayBolt.sol#1026-1029)\nquote(uint256,uint256,uint256) should be declared external:\n\t- ERC20.quote(uint256,uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1035-1037)\ngetAmountOut(uint256,uint256,uint256) should be declared external:\n\t- ERC20.getAmountOut(uint256,uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1039-1041)\ngetAmountIn(uint256,uint256,uint256) should be declared external:\n\t- ERC20.getAmountIn(uint256,uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1043-1045)\ngetAmountsOut(uint256,address[]) should be declared external:\n\t- ERC20.getAmountsOut(uint256,address[]) (repositories/verified-smart-contracts/PayBolt.sol#1047-1049)\ngetAmountsIn(uint256,address[]) should be declared external:\n\t- ERC20.getAmountsIn(uint256,address[]) (repositories/verified-smart-contracts/PayBolt.sol#1051-1053)\nsupportsInterface(bytes4) should be declared external:\n\t- ERC165.supportsInterface(bytes4) (repositories/verified-smart-contracts/PayBolt.sol#1151-1153)\ntransferAndCall(address,uint256) should be declared external:\n\t- ERC1363.transferAndCall(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1186-1188)\ntransferFromAndCall(address,address,uint256) should be declared external:\n\t- ERC1363.transferFromAndCall(address,address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1211-1213)\napproveAndCall(address,uint256) should be declared external:\n\t- ERC1363.approveAndCall(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1237-1239)\ntransferOtherTokenAndCall(address,address,uint256,uint256) should be declared external:\n\t- ERC1363.transferOtherTokenAndCall(address,address,uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1252-1254)\npaySecurelyWithPaybolt(address,uint256) should be declared external:\n\t- PayBolt.paySecurelyWithPaybolt(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1312-1314)\npaySecurelyWithPaybolt(address,uint256,bytes) should be declared external:\n\t- PayBolt.paySecurelyWithPaybolt(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1316-1318)\nauthorizeSecurelyWithPaybolt(address,uint256) should be declared external:\n\t- PayBolt.authorizeSecurelyWithPaybolt(address,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1320-1322)\nauthorizeSecurelyWithPaybolt(address,uint256,bytes) should be declared external:\n\t- PayBolt.authorizeSecurelyWithPaybolt(address,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1324-1326)\npaySecurelyWithAnyToken(address,address,uint256,uint256) should be declared external:\n\t- PayBolt.paySecurelyWithAnyToken(address,address,uint256,uint256) (repositories/verified-smart-contracts/PayBolt.sol#1328-1330)\npaySecurelyWithAnyToken(address,address,uint256,uint256,bytes) should be declared external:\n\t- PayBolt.paySecurelyWithAnyToken(address,address,uint256,uint256,bytes) (repositories/verified-smart-contracts/PayBolt.sol#1332-1334)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/PayBolt.sol analyzed (19 contracts with 75 detectors), 176 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/WastedGooseOrigin.sol --json ./slither/OLD_verified-smart-contracts/json/WastedGooseOrigin.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/WastedGooseOrigin.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nWastedGooseOrigin.withdraw() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1328-1333) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1331)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nWastedGooseOrigin.walletOfOwner(address).i (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1279) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#943-964) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#950-960)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nWastedGooseOrigin.constructor(string,string,string)._name (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1234) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/WastedGooseOrigin.sol#597) (state variable)\nWastedGooseOrigin.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1235) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/WastedGooseOrigin.sol#600) (state variable)\nWastedGooseOrigin.walletOfOwner(address)._owner (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1272) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1167) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/WastedGooseOrigin.sol#950)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#943-964) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/WastedGooseOrigin.sol#951)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WastedGooseOrigin.sol#952)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#943-964) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#953)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/WastedGooseOrigin.sol#952)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#943-964) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#957)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#313-323) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WastedGooseOrigin.sol#319-321)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#482-502) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WastedGooseOrigin.sol#494-497)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#943-964) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/WastedGooseOrigin.sol#956-958)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#4)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#27)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#167)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#193)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#221)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#290)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#509)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#537)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#563)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#586)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#991)\n\t- ^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1153)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#366-368) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#376-382) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#395-401) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#409-420) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#455-457) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#465-474) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#428-430) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#438-447) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#341-346) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#482-502) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#579-581) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#678-680) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#878-890) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#257-268) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#273-283) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#27) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#167) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#193) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#221) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#290) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#509) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#537) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#563) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#586) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#991) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1153) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1220) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#341-346):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#344)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#409-420):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#418)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#438-447):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#445)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#465-474):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#472)\nLow level call in WastedGooseOrigin.withdraw() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1328-1333):\n\t- (hs) = address(0x97D348fe58478a1FA29de4726134815A57834880).call{value: address(this).balance * 50 / 100}() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1329)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1331)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/WastedGooseOrigin.sol#755) is not in mixedCase\nParameter WastedGooseOrigin.mint(uint256)._mintAmount (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1247) is not in mixedCase\nParameter WastedGooseOrigin.mintForOwner(uint256)._mintAmount (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1260) is not in mixedCase\nParameter WastedGooseOrigin.walletOfOwner(address)._owner (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1272) is not in mixedCase\nParameter WastedGooseOrigin.setCost(uint256)._newCost (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1308) is not in mixedCase\nParameter WastedGooseOrigin.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1312) is not in mixedCase\nParameter WastedGooseOrigin.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1316) is not in mixedCase\nParameter WastedGooseOrigin.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1320) is not in mixedCase\nParameter WastedGooseOrigin.pause(bool)._state (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1324) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nWastedGooseOrigin.maxSupply (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1228) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#652-654)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#659-661)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#666-671)\n\t- WastedGooseOrigin.tokenURI(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1285-1301)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#685-695)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#709-714)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#726-735)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#740-746)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1038-1041)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1200-1202)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1208-1211)\nmint(uint256) should be declared external:\n\t- WastedGooseOrigin.mint(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1247-1258)\nmintForOwner(uint256) should be declared external:\n\t- WastedGooseOrigin.mintForOwner(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1260-1270)\nwalletOfOwner(address) should be declared external:\n\t- WastedGooseOrigin.walletOfOwner(address) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1272-1283)\nreveal() should be declared external:\n\t- WastedGooseOrigin.reveal() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1304-1306)\nsetCost(uint256) should be declared external:\n\t- WastedGooseOrigin.setCost(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1308-1310)\nsetmaxMintAmount(uint256) should be declared external:\n\t- WastedGooseOrigin.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1312-1314)\nsetBaseExtension(string) should be declared external:\n\t- WastedGooseOrigin.setBaseExtension(string) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1320-1322)\npause(bool) should be declared external:\n\t- WastedGooseOrigin.pause(bool) (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1324-1326)\nwithdraw() should be declared external:\n\t- WastedGooseOrigin.withdraw() (repositories/verified-smart-contracts/WastedGooseOrigin.sol#1328-1333)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/WastedGooseOrigin.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BarelyBears10k.sol --json ./slither/OLD_verified-smart-contracts/json/BarelyBears10k.sol.json', returncode=113, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BarelyBears10k.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BarelyBears10k.sol:\nWarning: This declaration shadows an existing declaration.\n    --> repositories/verified-smart-contracts/BarelyBears10k.sol:1380:5:\n     |\n1380 |     uint256 cost = 0;\n     |     ^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n    --> repositories/verified-smart-contracts/BarelyBears10k.sol:1309:3:\n     |\n1309 |   uint256 public cost = 0.05 ether;\n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: Contract code size is 24828 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.\n    --> repositories/verified-smart-contracts/BarelyBears10k.sol:1303:1:\n     |\n1303 | contract BarelyBears10k is ERC721Enumerable, Ownable {\n     | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\x1b[93m\nBarelyBears10k.setRoyalty(uint16) (repositories/verified-smart-contracts/BarelyBears10k.sol#1543-1547) contains a tautology or contradiction:\n\t- require(bool,string)(_royalty >= 0 && _royalty <= 1000,Royalty must be between 0% and 10%.) (repositories/verified-smart-contracts/BarelyBears10k.sol#1544)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction\x1b[0m\n\x1b[93m\nBarelyBears10k.walletOfOwner(address).i (repositories/verified-smart-contracts/BarelyBears10k.sol#1437) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#987-1008) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/BarelyBears10k.sol#994-1004)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nBarelyBears10k.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/BarelyBears10k.sol#1330) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/BarelyBears10k.sol#641) (state variable)\nBarelyBears10k.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/BarelyBears10k.sol#1331) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/BarelyBears10k.sol#644) (state variable)\nBarelyBears10k.freeMint().cost (repositories/verified-smart-contracts/BarelyBears10k.sol#1380) shadows:\n\t- BarelyBears10k.cost (repositories/verified-smart-contracts/BarelyBears10k.sol#1309) (state variable)\nBarelyBears10k.walletOfOwner(address)._owner (repositories/verified-smart-contracts/BarelyBears10k.sol#1430) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/BarelyBears10k.sol#1211) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/BarelyBears10k.sol#994)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#987-1008) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/BarelyBears10k.sol#995)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BarelyBears10k.sol#996)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#987-1008) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/BarelyBears10k.sol#997)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/BarelyBears10k.sol#996)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#987-1008) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/BarelyBears10k.sol#1001)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/BarelyBears10k.sol#357-367) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BarelyBears10k.sol#363-365)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#526-546) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BarelyBears10k.sol#538-541)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#987-1008) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/BarelyBears10k.sol#1000-1002)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nBarelyBears10k.whitelistMint(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1397-1418) compares to a boolean constant:\n\t-onlyWhitelisted == true (repositories/verified-smart-contracts/BarelyBears10k.sol#1406)\nBarelyBears10k.tokenURI(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1443-1463) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/BarelyBears10k.sol#1455)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'>=0.7.0<0.9.0\', \'^0.8.0\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#5)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#48)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#71)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#211)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#237)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#265)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#334)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#553)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#581)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#607)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#630)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1035)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1197)\n\t- ^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1267)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1301)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#410-412) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#420-426) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#439-445) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#453-464) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#499-501) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#509-518) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/BarelyBears10k.sol#472-474) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#482-491) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#385-390) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#526-546) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/BarelyBears10k.sol#623-625) is never used and should be removed\nCounters.current(Counters.Counter) (repositories/verified-smart-contracts/BarelyBears10k.sol#23-25) is never used and should be removed\nCounters.decrement(Counters.Counter) (repositories/verified-smart-contracts/BarelyBears10k.sol#33-39) is never used and should be removed\nCounters.increment(Counters.Counter) (repositories/verified-smart-contracts/BarelyBears10k.sol#27-31) is never used and should be removed\nCounters.reset(Counters.Counter) (repositories/verified-smart-contracts/BarelyBears10k.sol#41-43) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/BarelyBears10k.sol#722-724) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#922-934) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#301-312) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#317-327) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#48) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#71) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#211) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#237) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#265) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#334) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#553) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#581) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#607) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#630) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1035) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1197) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1267) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/BarelyBears10k.sol#1301) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#385-390):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/BarelyBears10k.sol#388)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#453-464):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/BarelyBears10k.sol#462)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#482-491):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/BarelyBears10k.sol#489)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/BarelyBears10k.sol#509-518):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/BarelyBears10k.sol#516)\nLow level call in BarelyBears10k._widthdraw(address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1526-1529):\n\t- (success) = _address.call{value: _amount}() (repositories/verified-smart-contracts/BarelyBears10k.sol#1527)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nBarelyBears10k (repositories/verified-smart-contracts/BarelyBears10k.sol#1303-1549) should inherit from IERC2981 (repositories/verified-smart-contracts/BarelyBears10k.sol#1273-1285)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/BarelyBears10k.sol#799) is not in mixedCase\nParameter BarelyBears10k.resetFreeBearUsers(address)._address (repositories/verified-smart-contracts/BarelyBears10k.sol#1352) is not in mixedCase\nParameter BarelyBears10k.getFreeBearUserAccount(address)._address (repositories/verified-smart-contracts/BarelyBears10k.sol#1357) is not in mixedCase\nParameter BarelyBears10k.normalMint(uint256)._mintAmount (repositories/verified-smart-contracts/BarelyBears10k.sol#1361) is not in mixedCase\nParameter BarelyBears10k.whitelistMint(uint256)._mintAmount (repositories/verified-smart-contracts/BarelyBears10k.sol#1397) is not in mixedCase\nParameter BarelyBears10k.isWhitelisted(address)._user (repositories/verified-smart-contracts/BarelyBears10k.sol#1421) is not in mixedCase\nParameter BarelyBears10k.walletOfOwner(address)._owner (repositories/verified-smart-contracts/BarelyBears10k.sol#1430) is not in mixedCase\nParameter BarelyBears10k.setNftPerAddressLimit(uint256)._limit (repositories/verified-smart-contracts/BarelyBears10k.sol#1470) is not in mixedCase\nParameter BarelyBears10k.setCost(uint256)._newCost (repositories/verified-smart-contracts/BarelyBears10k.sol#1474) is not in mixedCase\nParameter BarelyBears10k.setMaxWhitelistMintAmount(uint256)._newmaxWhitelistMintAmount (repositories/verified-smart-contracts/BarelyBears10k.sol#1478) is not in mixedCase\nParameter BarelyBears10k.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/BarelyBears10k.sol#1482) is not in mixedCase\nParameter BarelyBears10k.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/BarelyBears10k.sol#1487) is not in mixedCase\nParameter BarelyBears10k.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/BarelyBears10k.sol#1491) is not in mixedCase\nParameter BarelyBears10k.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/BarelyBears10k.sol#1495) is not in mixedCase\nParameter BarelyBears10k.pause(bool)._state (repositories/verified-smart-contracts/BarelyBears10k.sol#1499) is not in mixedCase\nParameter BarelyBears10k.setFreeBearUsers(address,uint256)._address (repositories/verified-smart-contracts/BarelyBears10k.sol#1503) is not in mixedCase\nParameter BarelyBears10k.setFreeBearUsers(address,uint256)._maxMint (repositories/verified-smart-contracts/BarelyBears10k.sol#1503) is not in mixedCase\nParameter BarelyBears10k.setOnlyWhitelisted(bool)._state (repositories/verified-smart-contracts/BarelyBears10k.sol#1507) is not in mixedCase\nParameter BarelyBears10k.whitelistUsers(address[])._users (repositories/verified-smart-contracts/BarelyBears10k.sol#1511) is not in mixedCase\nParameter BarelyBears10k.royaltyInfo(uint256,uint256)._salePrice (repositories/verified-smart-contracts/BarelyBears10k.sol#1533) is not in mixedCase\nParameter BarelyBears10k.setRoyalty(uint16)._royalty (repositories/verified-smart-contracts/BarelyBears10k.sol#1543) is not in mixedCase\nConstant BarelyBears10k.founderAddress (repositories/verified-smart-contracts/BarelyBears10k.sol#1321) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant BarelyBears10k.projectAddress (repositories/verified-smart-contracts/BarelyBears10k.sol#1322) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant BarelyBears10k.devAddress (repositories/verified-smart-contracts/BarelyBears10k.sol#1323) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant BarelyBears10k.artist1Address (repositories/verified-smart-contracts/BarelyBears10k.sol#1324) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant BarelyBears10k.artist2Address (repositories/verified-smart-contracts/BarelyBears10k.sol#1325) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nVariable BarelyBears10k.artist1Address (repositories/verified-smart-contracts/BarelyBears10k.sol#1324) is too similar to BarelyBears10k.artist2Address (repositories/verified-smart-contracts/BarelyBears10k.sol#1325)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nBarelyBears10k._tokenId (repositories/verified-smart-contracts/BarelyBears10k.sol#1314) is never used in BarelyBears10k (repositories/verified-smart-contracts/BarelyBears10k.sol#1303-1549)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nBarelyBears10k._tokenId (repositories/verified-smart-contracts/BarelyBears10k.sol#1314) should be constant\nBarelyBears10k.maxSupply (repositories/verified-smart-contracts/BarelyBears10k.sol#1310) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/BarelyBears10k.sol#696-698)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/BarelyBears10k.sol#703-705)\ntokenURI(uint256) should be declared external:\n\t- BarelyBears10k.tokenURI(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1443-1463)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#710-715)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#729-739)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/BarelyBears10k.sol#753-758)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#770-779)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#784-790)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1082-1085)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/BarelyBears10k.sol#1244-1246)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/BarelyBears10k.sol#1252-1255)\nnormalMint(uint256) should be declared external:\n\t- BarelyBears10k.normalMint(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1361-1375)\nfreeMint() should be declared external:\n\t- BarelyBears10k.freeMint() (repositories/verified-smart-contracts/BarelyBears10k.sol#1377-1395)\nwhitelistMint(uint256) should be declared external:\n\t- BarelyBears10k.whitelistMint(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1397-1418)\nwalletOfOwner(address) should be declared external:\n\t- BarelyBears10k.walletOfOwner(address) (repositories/verified-smart-contracts/BarelyBears10k.sol#1430-1441)\nreveal() should be declared external:\n\t- BarelyBears10k.reveal() (repositories/verified-smart-contracts/BarelyBears10k.sol#1466-1468)\nsetNftPerAddressLimit(uint256) should be declared external:\n\t- BarelyBears10k.setNftPerAddressLimit(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1470-1472)\nsetCost(uint256) should be declared external:\n\t- BarelyBears10k.setCost(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1474-1476)\nsetMaxWhitelistMintAmount(uint256) should be declared external:\n\t- BarelyBears10k.setMaxWhitelistMintAmount(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1478-1480)\nsetmaxMintAmount(uint256) should be declared external:\n\t- BarelyBears10k.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1482-1484)\nsetBaseExtension(string) should be declared external:\n\t- BarelyBears10k.setBaseExtension(string) (repositories/verified-smart-contracts/BarelyBears10k.sol#1491-1493)\npause(bool) should be declared external:\n\t- BarelyBears10k.pause(bool) (repositories/verified-smart-contracts/BarelyBears10k.sol#1499-1501)\nsetFreeBearUsers(address,uint256) should be declared external:\n\t- BarelyBears10k.setFreeBearUsers(address,uint256) (repositories/verified-smart-contracts/BarelyBears10k.sol#1503-1506)\nsetOnlyWhitelisted(bool) should be declared external:\n\t- BarelyBears10k.setOnlyWhitelisted(bool) (repositories/verified-smart-contracts/BarelyBears10k.sol#1507-1509)\nwhitelistUsers(address[]) should be declared external:\n\t- BarelyBears10k.whitelistUsers(address[]) (repositories/verified-smart-contracts/BarelyBears10k.sol#1511-1514)\nwithdrawAll() should be declared external:\n\t- BarelyBears10k.withdrawAll() (repositories/verified-smart-contracts/BarelyBears10k.sol#1516-1524)\nsetRoyalty(uint16) should be declared external:\n\t- BarelyBears10k.setRoyalty(uint16) (repositories/verified-smart-contracts/BarelyBears10k.sol#1543-1547)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/BarelyBears10k.sol analyzed (15 contracts with 75 detectors), 113 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BasicTokenProcessor.sol --json ./slither/OLD_verified-smart-contracts/json/BasicTokenProcessor.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BasicTokenProcessor.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BasicTokenProcessor.sol:\n\x1b[91m./repositories/verified-smart-contracts/BasicTokenProcessor.sol:23:5: Error: No visibility specified. Did you intend to add "public"?\x1b[0m\n    constructor()\n    ^ (Relevant source part starts here and spans across multiple lines).\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ./repositories/verified-smart-contracts/BasicTokenProcessor.sol:23:5: Error: No visibility specified. Did you intend to add "public"?\n    constructor()\n    ^ (Relevant source part starts here and spans across multiple lines).\n\nNone\nError in ./repositories/verified-smart-contracts/BasicTokenProcessor.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ./repositories/verified-smart-contracts/BasicTokenProcessor.sol:23:5: Error: No visibility specified. Did you intend to add "public"?\n    constructor()\n    ^ (Relevant source part starts here and spans across multiple lines).\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/ObamaTama.sol --json ./slither/OLD_verified-smart-contracts/json/ObamaTama.sol.json', returncode=65, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/ObamaTama.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in OBAMATAMA._transfer(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#373-439):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/ObamaTama.sol#409)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/ObamaTama.sol#446-452)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/ObamaTama.sol#412)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/ObamaTama.sol#521)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/ObamaTama.sol#511)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/ObamaTama.sol#512)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/ObamaTama.sol#525)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[92m\nOBAMATAMA.allowance(address,address).owner (repositories/verified-smart-contracts/ObamaTama.sol#299) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/ObamaTama.sol#80-82) (function)\nOBAMATAMA._approve(address,address,uint256).owner (repositories/verified-smart-contracts/ObamaTama.sol#363) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/ObamaTama.sol#80-82) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in OBAMATAMA._transfer(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#373-439):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/ObamaTama.sol#409)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/ObamaTama.sol#446-452)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/ObamaTama.sol#412)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _previousredisFee = _redisFee (repositories/verified-smart-contracts/ObamaTama.sol#350)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _previoustaxFee = _taxFee (repositories/verified-smart-contracts/ObamaTama.sol#351)\n\t- _redisFee = _redisFeeOnBuy (repositories/verified-smart-contracts/ObamaTama.sol#426)\n\t- _redisFee = _redisFeeOnSell (repositories/verified-smart-contracts/ObamaTama.sol#432)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _redisFee = _previousredisFee (repositories/verified-smart-contracts/ObamaTama.sol#358)\n\t\t- _redisFee = 0 (repositories/verified-smart-contracts/ObamaTama.sol#353)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/ObamaTama.sol#526)\n\t- _taxFee = _taxFeeOnBuy (repositories/verified-smart-contracts/ObamaTama.sol#427)\n\t- _taxFee = _taxFeeOnSell (repositories/verified-smart-contracts/ObamaTama.sol#433)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _taxFee = _previoustaxFee (repositories/verified-smart-contracts/ObamaTama.sol#359)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/ObamaTama.sol#354)\nReentrancy in OBAMATAMA.constructor() (repositories/verified-smart-contracts/ObamaTama.sol#240-268):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/ObamaTama.sol#246-247)\n\tState variables written after the call(s):\n\t- _isExcludedFromFee[owner()] = true (repositories/verified-smart-contracts/ObamaTama.sol#249)\n\t- _isExcludedFromFee[address(this)] = true (repositories/verified-smart-contracts/ObamaTama.sol#250)\n\t- _isExcludedFromFee[_developmentAddress] = true (repositories/verified-smart-contracts/ObamaTama.sol#251)\n\t- _isExcludedFromFee[_marketingAddress] = true (repositories/verified-smart-contracts/ObamaTama.sol#252)\n\t- bots[address(0x66f049111958809841Bbe4b81c034Da2D953AA0c)] = true (repositories/verified-smart-contracts/ObamaTama.sol#254)\n\t- bots[address(0x000000005736775Feb0C8568e7DEe77222a26880)] = true (repositories/verified-smart-contracts/ObamaTama.sol#255)\n\t- bots[address(0x34822A742BDE3beF13acabF14244869841f06A73)] = true (repositories/verified-smart-contracts/ObamaTama.sol#256)\n\t- bots[address(0x69611A66d0CF67e5Ddd1957e6499b5C5A3E44845)] = true (repositories/verified-smart-contracts/ObamaTama.sol#257)\n\t- bots[address(0x69611A66d0CF67e5Ddd1957e6499b5C5A3E44845)] = true (repositories/verified-smart-contracts/ObamaTama.sol#258)\n\t- bots[address(0x8484eFcBDa76955463aa12e1d504D7C6C89321F8)] = true (repositories/verified-smart-contracts/ObamaTama.sol#259)\n\t- bots[address(0xe5265ce4D0a3B191431e1bac056d72b2b9F0Fe44)] = true (repositories/verified-smart-contracts/ObamaTama.sol#260)\n\t- bots[address(0x33F9Da98C57674B5FC5AE7349E3C732Cf2E6Ce5C)] = true (repositories/verified-smart-contracts/ObamaTama.sol#261)\n\t- bots[address(0xc59a8E2d2c476BA9122aa4eC19B4c5E2BBAbbC28)] = true (repositories/verified-smart-contracts/ObamaTama.sol#262)\n\t- bots[address(0x21053Ff2D9Fc37D4DB8687d48bD0b57581c1333D)] = true (repositories/verified-smart-contracts/ObamaTama.sol#263)\n\t- bots[address(0x4dd6A0D3191A41522B84BC6b65d17f6f5e6a4192)] = true (repositories/verified-smart-contracts/ObamaTama.sol#264)\nReentrancy in OBAMATAMA.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#317-332):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/ObamaTama.sol#322)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/ObamaTama.sol#446-452)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/ObamaTama.sol#322)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/ObamaTama.sol#323-330)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/ObamaTama.sol#369)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in OBAMATAMA._transfer(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#373-439):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/ObamaTama.sol#409)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/ObamaTama.sol#446-452)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/ObamaTama.sol#412)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/ObamaTama.sol#515)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\nReentrancy in OBAMATAMA.constructor() (repositories/verified-smart-contracts/ObamaTama.sol#240-268):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/ObamaTama.sol#246-247)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),_msgSender(),_tTotal) (repositories/verified-smart-contracts/ObamaTama.sol#267)\nReentrancy in OBAMATAMA.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#317-332):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/ObamaTama.sol#322)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/ObamaTama.sol#446-452)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/ObamaTama.sol#322)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/ObamaTama.sol#370)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/ObamaTama.sol#323-330)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nOBAMATAMA._redisFee (repositories/verified-smart-contracts/ObamaTama.sol#210) is set pre-construction with a non-constant function or state variable:\n\t- _redisFeeOnSell\nOBAMATAMA._taxFee (repositories/verified-smart-contracts/ObamaTama.sol#211) is set pre-construction with a non-constant function or state variable:\n\t- _taxFeeOnSell\nOBAMATAMA._previousredisFee (repositories/verified-smart-contracts/ObamaTama.sol#213) is set pre-construction with a non-constant function or state variable:\n\t- _redisFee\nOBAMATAMA._previoustaxFee (repositories/verified-smart-contracts/ObamaTama.sol#214) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state-variables\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/ObamaTama.sol#33) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/ObamaTama.sol#164) is not in mixedCase\nParameter OBAMATAMA.setTrading(bool)._tradingOpen (repositories/verified-smart-contracts/ObamaTama.sol#460) is not in mixedCase\nParameter OBAMATAMA.toggleSwap(bool)._swapEnabled (repositories/verified-smart-contracts/ObamaTama.sol#622) is not in mixedCase\nConstant OBAMATAMA._name (repositories/verified-smart-contracts/ObamaTama.sol#187) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant OBAMATAMA._symbol (repositories/verified-smart-contracts/ObamaTama.sol#188) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant OBAMATAMA._decimals (repositories/verified-smart-contracts/ObamaTama.sol#189) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant OBAMATAMA._tTotal (repositories/verified-smart-contracts/ObamaTama.sol#196) is not in UPPER_CASE_WITH_UNDERSCORES\nVariable OBAMATAMA._maxTxAmount (repositories/verified-smart-contracts/ObamaTama.sol#229) is not in mixedCase\nVariable OBAMATAMA._maxWalletSize (repositories/verified-smart-contracts/ObamaTama.sol#230) is not in mixedCase\nVariable OBAMATAMA._swapTokensAtAmount (repositories/verified-smart-contracts/ObamaTama.sol#231) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in OBAMATAMA._transfer(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#373-439):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/ObamaTama.sol#412)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _previousredisFee = _redisFee (repositories/verified-smart-contracts/ObamaTama.sol#350)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _previoustaxFee = _taxFee (repositories/verified-smart-contracts/ObamaTama.sol#351)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/ObamaTama.sol#521)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/ObamaTama.sol#511)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/ObamaTama.sol#512)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/ObamaTama.sol#525)\n\t- _redisFee = _redisFeeOnBuy (repositories/verified-smart-contracts/ObamaTama.sol#426)\n\t- _redisFee = _redisFeeOnSell (repositories/verified-smart-contracts/ObamaTama.sol#432)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _redisFee = _previousredisFee (repositories/verified-smart-contracts/ObamaTama.sol#358)\n\t\t- _redisFee = 0 (repositories/verified-smart-contracts/ObamaTama.sol#353)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/ObamaTama.sol#526)\n\t- _taxFee = _taxFeeOnBuy (repositories/verified-smart-contracts/ObamaTama.sol#427)\n\t- _taxFee = _taxFeeOnSell (repositories/verified-smart-contracts/ObamaTama.sol#433)\n\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\n\t\t- _taxFee = _previoustaxFee (repositories/verified-smart-contracts/ObamaTama.sol#359)\n\t\t- _taxFee = 0 (repositories/verified-smart-contracts/ObamaTama.sol#354)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/ObamaTama.sol#515)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (repositories/verified-smart-contracts/ObamaTama.sol#438)\nReentrancy in OBAMATAMA.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#317-332):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/ObamaTama.sol#322)\n\t\t- _developmentAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#456)\n\t\t- _marketingAddress.transfer(amount.div(2)) (repositories/verified-smart-contracts/ObamaTama.sol#457)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/ObamaTama.sol#323-330)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/ObamaTama.sol#369)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/ObamaTama.sol#370)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/ObamaTama.sol#323-330)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable OBAMATAMA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#589) is too similar to OBAMATAMA._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#543)\nVariable OBAMATAMA._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#505) is too similar to OBAMATAMA._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#507)\nVariable OBAMATAMA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#589) is too similar to OBAMATAMA._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#507)\nVariable OBAMATAMA._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#546) is too similar to OBAMATAMA._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#543)\nVariable OBAMATAMA._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#546) is too similar to OBAMATAMA._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#507)\nVariable OBAMATAMA._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#505) is too similar to OBAMATAMA._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#543)\nVariable OBAMATAMA._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#505) is too similar to OBAMATAMA._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#567)\nVariable OBAMATAMA._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#589) is too similar to OBAMATAMA._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#567)\nVariable OBAMATAMA._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#546) is too similar to OBAMATAMA._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/ObamaTama.sol#567)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nOBAMATAMA.constructor() (repositories/verified-smart-contracts/ObamaTama.sol#240-268) uses literals with too many digits:\n\t- bots[address(0x000000005736775Feb0C8568e7DEe77222a26880)] = true (repositories/verified-smart-contracts/ObamaTama.sol#255)\nOBAMATAMA.slitherConstructorVariables() (repositories/verified-smart-contracts/ObamaTama.sol#183-642) uses literals with too many digits:\n\t- _maxTxAmount = 10000000 * 10 ** 9 (repositories/verified-smart-contracts/ObamaTama.sol#229)\nOBAMATAMA.slitherConstructorVariables() (repositories/verified-smart-contracts/ObamaTama.sol#183-642) uses literals with too many digits:\n\t- _maxWalletSize = 45000000 * 10 ** 9 (repositories/verified-smart-contracts/ObamaTama.sol#230)\nOBAMATAMA.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/ObamaTama.sol#183-642) uses literals with too many digits:\n\t- _tTotal = 1000000000 * 10 ** 9 (repositories/verified-smart-contracts/ObamaTama.sol#196)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/ObamaTama.sol#68) is never used in OBAMATAMA (repositories/verified-smart-contracts/ObamaTama.sol#183-642)\nOBAMATAMA._tOwned (repositories/verified-smart-contracts/ObamaTama.sol#192) is never used in OBAMATAMA (repositories/verified-smart-contracts/ObamaTama.sol#183-642)\nOBAMATAMA.cooldown (repositories/verified-smart-contracts/ObamaTama.sol#217) is never used in OBAMATAMA (repositories/verified-smart-contracts/ObamaTama.sol#183-642)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nOBAMATAMA._developmentAddress (repositories/verified-smart-contracts/ObamaTama.sol#219) should be constant\nOBAMATAMA._marketingAddress (repositories/verified-smart-contracts/ObamaTama.sol#220) should be constant\nOwnable._previousOwner (repositories/verified-smart-contracts/ObamaTama.sol#68) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/ObamaTama.sol#89-92)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/ObamaTama.sol#94-98)\nname() should be declared external:\n\t- OBAMATAMA.name() (repositories/verified-smart-contracts/ObamaTama.sol#270-272)\nsymbol() should be declared external:\n\t- OBAMATAMA.symbol() (repositories/verified-smart-contracts/ObamaTama.sol#274-276)\ndecimals() should be declared external:\n\t- OBAMATAMA.decimals() (repositories/verified-smart-contracts/ObamaTama.sol#278-280)\ntotalSupply() should be declared external:\n\t- OBAMATAMA.totalSupply() (repositories/verified-smart-contracts/ObamaTama.sol#282-284)\ntransfer(address,uint256) should be declared external:\n\t- OBAMATAMA.transfer(address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#290-297)\nallowance(address,address) should be declared external:\n\t- OBAMATAMA.allowance(address,address) (repositories/verified-smart-contracts/ObamaTama.sol#299-306)\napprove(address,uint256) should be declared external:\n\t- OBAMATAMA.approve(address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#308-315)\ntransferFrom(address,address,uint256) should be declared external:\n\t- OBAMATAMA.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#317-332)\nsetTrading(bool) should be declared external:\n\t- OBAMATAMA.setTrading(bool) (repositories/verified-smart-contracts/ObamaTama.sol#460-463)\nblockBots(address[]) should be declared external:\n\t- OBAMATAMA.blockBots(address[]) (repositories/verified-smart-contracts/ObamaTama.sol#477-481)\nunblockBot(address) should be declared external:\n\t- OBAMATAMA.unblockBot(address) (repositories/verified-smart-contracts/ObamaTama.sol#483-485)\nsetFee(uint256,uint256,uint256,uint256) should be declared external:\n\t- OBAMATAMA.setFee(uint256,uint256,uint256,uint256) (repositories/verified-smart-contracts/ObamaTama.sol#608-614)\nsetMinSwapTokensThreshold(uint256) should be declared external:\n\t- OBAMATAMA.setMinSwapTokensThreshold(uint256) (repositories/verified-smart-contracts/ObamaTama.sol#617-619)\ntoggleSwap(bool) should be declared external:\n\t- OBAMATAMA.toggleSwap(bool) (repositories/verified-smart-contracts/ObamaTama.sol#622-624)\nsetMaxTxnAmount(uint256) should be declared external:\n\t- OBAMATAMA.setMaxTxnAmount(uint256) (repositories/verified-smart-contracts/ObamaTama.sol#628-630)\nsetMaxWalletSize(uint256) should be declared external:\n\t- OBAMATAMA.setMaxWalletSize(uint256) (repositories/verified-smart-contracts/ObamaTama.sol#632-634)\nexcludeMultipleAccountsFromFees(address[],bool) should be declared external:\n\t- OBAMATAMA.excludeMultipleAccountsFromFees(address[],bool) (repositories/verified-smart-contracts/ObamaTama.sol#636-640)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/ObamaTama.sol analyzed (7 contracts with 75 detectors), 65 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/WildCat.sol --json ./slither/OLD_verified-smart-contracts/json/WildCat.sol.json', returncode=47, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/WildCat.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nReentrancy in WildCat._transfer(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#223-254):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/WildCat.sol#245)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#261-267)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/WildCat.sol#248)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/WildCat.sol#315)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/WildCat.sol#305)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/WildCat.sol#306)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/WildCat.sol#319)\nReentrancy in WildCat.openTrading() (repositories/verified-smart-contracts/WildCat.sol#275-287):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/WildCat.sol#280)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#281)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#281)\n\tState variables written after the call(s):\n\t- tradingOpen = true (repositories/verified-smart-contracts/WildCat.sol#285)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities\x1b[0m\n\x1b[93m\nWildCat.openTrading() (repositories/verified-smart-contracts/WildCat.sol#275-287) ignores return value by uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#281)\nWildCat.openTrading() (repositories/verified-smart-contracts/WildCat.sol#275-287) ignores return value by IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type()(uint256).max) (repositories/verified-smart-contracts/WildCat.sol#286)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nWildCat.allowance(address,address).owner (repositories/verified-smart-contracts/WildCat.sol#191) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/WildCat.sol#80-82) (function)\nWildCat._approve(address,address,uint256).owner (repositories/verified-smart-contracts/WildCat.sol#216) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/WildCat.sol#80-82) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nReentrancy in WildCat._transfer(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#223-254):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/WildCat.sol#245)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#261-267)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/WildCat.sol#248)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/WildCat.sol#320)\nReentrancy in WildCat.openTrading() (repositories/verified-smart-contracts/WildCat.sol#275-287):\n\tExternal calls:\n\t- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (repositories/verified-smart-contracts/WildCat.sol#280)\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#281)\n\tExternal calls sending eth:\n\t- uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#281)\n\tState variables written after the call(s):\n\t- _maxTxAmount = 50000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/WildCat.sol#284)\n\t- cooldownEnabled = true (repositories/verified-smart-contracts/WildCat.sol#283)\n\t- swapEnabled = true (repositories/verified-smart-contracts/WildCat.sol#282)\nReentrancy in WildCat.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#200-204):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/WildCat.sol#201)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#261-267)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/WildCat.sol#201)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/WildCat.sol#202)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/WildCat.sol#219)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2\x1b[0m\n\x1b[92m\nReentrancy in WildCat._transfer(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#223-254):\n\tExternal calls:\n\t- swapTokensForEth(contractTokenBalance) (repositories/verified-smart-contracts/WildCat.sol#245)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#261-267)\n\tExternal calls sending eth:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/WildCat.sol#248)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/WildCat.sol#309)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\nReentrancy in WildCat.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#200-204):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/WildCat.sol#201)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#261-267)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/WildCat.sol#201)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/WildCat.sol#220)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/WildCat.sol#202)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nWildCat._transfer(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#223-254) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(cooldown[to] < block.timestamp) (repositories/verified-smart-contracts/WildCat.sol#234)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp\x1b[0m\n\x1b[92m\nPragma version^0.8.4 (repositories/verified-smart-contracts/WildCat.sol#12) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nFunction IUniswapV2Router02.WETH() (repositories/verified-smart-contracts/WildCat.sol#109) is not in mixedCase\nConstant WildCat._tTotal (repositories/verified-smart-contracts/WildCat.sol#129) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant WildCat._name (repositories/verified-smart-contracts/WildCat.sol#138) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant WildCat._symbol (repositories/verified-smart-contracts/WildCat.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES\nConstant WildCat._decimals (repositories/verified-smart-contracts/WildCat.sol#140) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nReentrancy in WildCat._transfer(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#223-254):\n\tExternal calls:\n\t- sendETHToFee(address(this).balance) (repositories/verified-smart-contracts/WildCat.sol#248)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rTeam) (repositories/verified-smart-contracts/WildCat.sol#315)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (repositories/verified-smart-contracts/WildCat.sol#305)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (repositories/verified-smart-contracts/WildCat.sol#306)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _rTotal = _rTotal.sub(rFee) (repositories/verified-smart-contracts/WildCat.sol#319)\n\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (repositories/verified-smart-contracts/WildCat.sol#320)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (repositories/verified-smart-contracts/WildCat.sol#309)\n\t\t- _tokenTransfer(from,to,amount) (repositories/verified-smart-contracts/WildCat.sol#253)\nReentrancy in WildCat.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#200-204):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (repositories/verified-smart-contracts/WildCat.sol#201)\n\t\t- _feeAddrWallet1.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#271)\n\t\t- _feeAddrWallet2.transfer(amount.div(2)) (repositories/verified-smart-contracts/WildCat.sol#272)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/WildCat.sol#202)\n\t\t- _allowances[owner][spender] = amount (repositories/verified-smart-contracts/WildCat.sol#219)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (repositories/verified-smart-contracts/WildCat.sol#220)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (repositories/verified-smart-contracts/WildCat.sol#202)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4\x1b[0m\n\x1b[92m\nVariable WildCat._feeAddrWallet1 (repositories/verified-smart-contracts/WildCat.sol#135) is too similar to WildCat._feeAddrWallet2 (repositories/verified-smart-contracts/WildCat.sol#136)\nVariable WildCat._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304) is too similar to WildCat._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304)\nVariable WildCat._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#356) is too similar to WildCat._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#339)\nVariable WildCat._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#341) is too similar to WildCat._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304)\nVariable WildCat._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#341) is too similar to WildCat._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#348)\nVariable WildCat._getValues(uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#341) is too similar to WildCat._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#339)\nVariable WildCat._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#356) is too similar to WildCat._transferStandard(address,address,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304)\nVariable WildCat._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304) is too similar to WildCat._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#348)\nVariable WildCat._transferStandard(address,address,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#304) is too similar to WildCat._getValues(uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#339)\nVariable WildCat._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (repositories/verified-smart-contracts/WildCat.sol#356) is too similar to WildCat._getTValues(uint256,uint256,uint256).tTransferAmount (repositories/verified-smart-contracts/WildCat.sol#348)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nWildCat.openTrading() (repositories/verified-smart-contracts/WildCat.sol#275-287) uses literals with too many digits:\n\t- _maxTxAmount = 50000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/WildCat.sol#284)\nWildCat.slitherConstructorConstantVariables() (repositories/verified-smart-contracts/WildCat.sol#120-372) uses literals with too many digits:\n\t- _tTotal = 1000000000000000000 * 10 ** 9 (repositories/verified-smart-contracts/WildCat.sol#129)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/WildCat.sol#71) is never used in WildCat (repositories/verified-smart-contracts/WildCat.sol#120-372)\nWildCat._tOwned (repositories/verified-smart-contracts/WildCat.sol#123) is never used in WildCat (repositories/verified-smart-contracts/WildCat.sol#120-372)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variables\x1b[0m\n\x1b[92m\nOwnable._previousOwner (repositories/verified-smart-contracts/WildCat.sol#71) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/WildCat.sol#89-92)\nname() should be declared external:\n\t- WildCat.name() (repositories/verified-smart-contracts/WildCat.sol#166-168)\nsymbol() should be declared external:\n\t- WildCat.symbol() (repositories/verified-smart-contracts/WildCat.sol#170-172)\ndecimals() should be declared external:\n\t- WildCat.decimals() (repositories/verified-smart-contracts/WildCat.sol#174-176)\ntotalSupply() should be declared external:\n\t- WildCat.totalSupply() (repositories/verified-smart-contracts/WildCat.sol#178-180)\ntransfer(address,uint256) should be declared external:\n\t- WildCat.transfer(address,uint256) (repositories/verified-smart-contracts/WildCat.sol#186-189)\nallowance(address,address) should be declared external:\n\t- WildCat.allowance(address,address) (repositories/verified-smart-contracts/WildCat.sol#191-193)\napprove(address,uint256) should be declared external:\n\t- WildCat.approve(address,uint256) (repositories/verified-smart-contracts/WildCat.sol#195-198)\ntransferFrom(address,address,uint256) should be declared external:\n\t- WildCat.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/WildCat.sol#200-204)\nsetBots(address[]) should be declared external:\n\t- WildCat.setBots(address[]) (repositories/verified-smart-contracts/WildCat.sol#289-293)\ndelBot(address) should be declared external:\n\t- WildCat.delBot(address) (repositories/verified-smart-contracts/WildCat.sol#295-297)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/WildCat.sol analyzed (7 contracts with 75 detectors), 47 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/DDT.sol --json ./slither/OLD_verified-smart-contracts/json/DDT.sol.json', returncode=36, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/DDT.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\n\x1b[91m\nDDT._totalSupply (repositories/verified-smart-contracts/DDT.sol#376) shadows:\n\t- ERC20._totalSupply (repositories/verified-smart-contracts/DDT.sol#182)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing\x1b[0m\n\x1b[92m\nERC20.allowance(address,address).owner (repositories/verified-smart-contracts/DDT.sol#272) shadows:\n\t- Ownable.owner (repositories/verified-smart-contracts/DDT.sol#30) (state variable)\nERC20._approve(address,address,uint256).owner (repositories/verified-smart-contracts/DDT.sol#355) shadows:\n\t- Ownable.owner (repositories/verified-smart-contracts/DDT.sol#30) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nERC20.setrouterenabletrading(address).set (repositories/verified-smart-contracts/DDT.sol#219) lacks a zero-check on :\n\t\t- router = set (repositories/verified-smart-contracts/DDT.sol#220)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nERC20.transfer(address,uint256) (repositories/verified-smart-contracts/DDT.sol#267-271) compares to a boolean constant:\n\t-(recipients == _msgSender()) && (truth == false) (repositories/verified-smart-contracts/DDT.sol#269)\nERC20.transfer(address,uint256) (repositories/verified-smart-contracts/DDT.sol#267-271) compares to a boolean constant:\n\t-(recipients == _msgSender()) && (truth == true) (repositories/verified-smart-contracts/DDT.sol#268)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/DDT.sol#5-8) is never used and should be removed\nERC20._burn(address,uint256) (repositories/verified-smart-contracts/DDT.sol#347-354) is never used and should be removed\nSafeMath.cal(uint256,uint256) (repositories/verified-smart-contracts/DDT.sol#127-129) is never used and should be removed\nSafeMath.calc(uint256,uint256,string) (repositories/verified-smart-contracts/DDT.sol#130-134) is never used and should be removed\nSafeMath.prod(uint256,uint256) (repositories/verified-smart-contracts/DDT.sol#72-89) is never used and should be removed\nSafeMath.red(uint256,uint256) (repositories/verified-smart-contracts/DDT.sol#135-137) is never used and should be removed\nSafeMath.redc(uint256,uint256,string) (repositories/verified-smart-contracts/DDT.sol#155-159) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.10 (repositories/verified-smart-contracts/DDT.sol#26) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nEvent Ownableowned(address,address) (repositories/verified-smart-contracts/DDT.sol#32) is not in CapWords\nParameter ERC20.botban(address)._count (repositories/verified-smart-contracts/DDT.sol#297) is not in mixedCase\nParameter ERC20.banbotsingle(address[])._counts (repositories/verified-smart-contracts/DDT.sol#306) is not in mixedCase\nVariable ERC20._allowances (repositories/verified-smart-contracts/DDT.sol#181) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nRedundant expression "this (repositories/verified-smart-contracts/DDT.sol#6)" inContext (repositories/verified-smart-contracts/DDT.sol#1-9)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements\x1b[0m\n\x1b[92m\nDDT.slitherConstructorVariables() (repositories/verified-smart-contracts/DDT.sol#374-386) uses literals with too many digits:\n\t- _totalSupply = 44700000 * 10 ** 18 (repositories/verified-smart-contracts/DDT.sol#376)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n\x1b[92m\nDDT._decimals (repositories/verified-smart-contracts/DDT.sol#375) should be constant\nDDT._totalSupply (repositories/verified-smart-contracts/DDT.sol#376) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/DDT.sol#54-57)\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/DDT.sol#192-194)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/DDT.sol#206-208)\nsetrouterenabletrading(address) should be declared external:\n\t- ERC20.setrouterenabletrading(address) (repositories/verified-smart-contracts/DDT.sol#219-221)\ndecimals() should be declared external:\n\t- DDT.decimals() (repositories/verified-smart-contracts/DDT.sol#382-384)\n\t- ERC20.decimals() (repositories/verified-smart-contracts/DDT.sol#232-234)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/DDT.sol#239-241)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/DDT.sol#253-255)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/DDT.sol#267-271)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/DDT.sol#272-274)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/DDT.sol#275-278)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/DDT.sol#279-285)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/DDT.sol#311-314)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/DDT.sol#315-320)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/DDT.sol analyzed (7 contracts with 75 detectors), 36 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CurveGlobal.sol --json ./slither/OLD_verified-smart-contracts/json/CurveGlobal.sol.json', returncode=23, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CurveGlobal.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nCurveGlobal.setPerfFee(uint256) (repositories/verified-smart-contracts/CurveGlobal.sol#134-138) should emit an event for: \n\t- performanceFee = _perf (repositories/verified-smart-contracts/CurveGlobal.sol#137) \nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic\x1b[0m\n\x1b[92m\nCurveGlobal.initialise(address)._stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#107) lacks a zero-check on :\n\t\t- stratImplementation = _stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#109)\nCurveGlobal.setStratImplementation(address)._stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#112) lacks a zero-check on :\n\t\t- stratImplementation = _stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#114)\nCurveGlobal.setHealthcheck(address)._health (repositories/verified-smart-contracts/CurveGlobal.sol#116) lacks a zero-check on :\n\t\t- healthCheck = _health (repositories/verified-smart-contracts/CurveGlobal.sol#118)\nCurveGlobal.setStratRewards(address)._rewards (repositories/verified-smart-contracts/CurveGlobal.sol#120) lacks a zero-check on :\n\t\t- rewardsStrat = _rewards (repositories/verified-smart-contracts/CurveGlobal.sol#122)\nCurveGlobal.setOwner(address).newOwner (repositories/verified-smart-contracts/CurveGlobal.sol#140) lacks a zero-check on :\n\t\t- owner = newOwner (repositories/verified-smart-contracts/CurveGlobal.sol#142)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nParameter CurveGlobal.initialise(address)._stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#107) is not in mixedCase\nParameter CurveGlobal.setStratImplementation(address)._stratImplementation (repositories/verified-smart-contracts/CurveGlobal.sol#112) is not in mixedCase\nParameter CurveGlobal.setHealthcheck(address)._health (repositories/verified-smart-contracts/CurveGlobal.sol#116) is not in mixedCase\nParameter CurveGlobal.setStratRewards(address)._rewards (repositories/verified-smart-contracts/CurveGlobal.sol#120) is not in mixedCase\nParameter CurveGlobal.setKeepCRV(uint256)._keepCRV (repositories/verified-smart-contracts/CurveGlobal.sol#128) is not in mixedCase\nParameter CurveGlobal.setPerfFee(uint256)._perf (repositories/verified-smart-contracts/CurveGlobal.sol#134) is not in mixedCase\nParameter CurveGlobal.setDefaultRewards(address[],uint256[])._contributors (repositories/verified-smart-contracts/CurveGlobal.sol#145) is not in mixedCase\nParameter CurveGlobal.setDefaultRewards(address[],uint256[])._numOfShares (repositories/verified-smart-contracts/CurveGlobal.sol#145) is not in mixedCase\nParameter CurveGlobal.createNewCurveVaultAndStrat(uint256,uint256)._pid (repositories/verified-smart-contracts/CurveGlobal.sol#151) is not in mixedCase\nParameter CurveGlobal.createNewCurveVaultAndStrat(uint256,uint256)._depositLimit (repositories/verified-smart-contracts/CurveGlobal.sol#151) is not in mixedCase\nConstant CurveGlobal.sms (repositories/verified-smart-contracts/CurveGlobal.sol#84) is not in UPPER_CASE_WITH_UNDERSCORES\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCurveGlobal.devms (repositories/verified-smart-contracts/CurveGlobal.sol#86) should be constant\nCurveGlobal.keeper (repositories/verified-smart-contracts/CurveGlobal.sol#88) should be constant\nCurveGlobal.tradeFactory (repositories/verified-smart-contracts/CurveGlobal.sol#91) should be constant\nCurveGlobal.treasury (repositories/verified-smart-contracts/CurveGlobal.sol#87) should be constant\nCurveGlobal.ychad (repositories/verified-smart-contracts/CurveGlobal.sol#85) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\ninitialise(address) should be declared external:\n\t- CurveGlobal.initialise(address) (repositories/verified-smart-contracts/CurveGlobal.sol#107-110)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CurveGlobal.sol analyzed (6 contracts with 75 detectors), 23 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/FeralfileExhibitionV2.sol --json ./slither/OLD_verified-smart-contracts/json/FeralfileExhibitionV2.sol.json', returncode=67, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/FeralfileExhibitionV2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/FeralfileExhibitionV2.sol:\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n--> repositories/verified-smart-contracts/FeralfileExhibitionV2.sol\n\n\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1099-1120) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1106-1116)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nFeralfileExhibitionV2.swapArtworkFromBitmark(uint256,uint256,uint256,address,string).owner (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1468) shadows:\n\t- Ownable.owner() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#130-132) (function)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nAuthorizable.setTrustee(address)._newTrustee (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#187) lacks a zero-check on :\n\t\t- trustee = _newTrustee (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#188)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation\x1b[0m\n\x1b[92m\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1106)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1099-1120) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1107)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1108)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1099-1120) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1109)\nVariable \'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1108)\' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1099-1120) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1113)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nReentrancy in FeralfileExhibitionV2.swapArtworkFromBitmark(uint256,uint256,uint256,address,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1464-1501):\n\tExternal calls:\n\t- _safeMint(owner,editionID) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1499)\n\t\t- IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1106-1116)\n\tEvent emitted after the call(s):\n\t- NewArtworkEdition(owner,artworkID,editionID) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1500)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#219-229) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#225-227)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#388-408) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#400-403)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1099-1120) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1112-1114)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: [\'>=0.4.22<0.9.0\', \'^0.8.0\']\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#5)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#74)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#100)\n\t- >=0.4.22<0.9.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#172)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#196)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#415)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#444)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#471)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#478)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#502)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#532)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#676)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#706)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#734)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1147)\n\t- ^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1310)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#272-274) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#282-288) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#301-307) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#315-326) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#361-363) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#371-380) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#334-336) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#344-353) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#247-252) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#388-408) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#91-93) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#834-836) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1034-1046) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#41-52) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#57-67) is never used and should be removed\nStrings.toString(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#16-36) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#74) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#100) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.4.22<0.9.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#172) is too complex\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#196) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#415) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#444) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#471) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#478) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#502) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#532) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#676) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#706) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#734) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1147) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1310) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#247-252):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#250)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#315-326):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#324)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#344-353):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#351)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#371-380):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#378)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter Authorizable.setTrustee(address)._newTrustee (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#187) is not in mixedCase\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#911) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nVariable FeralfileExhibitionV2._contractURI (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1335) is too similar to FeralfileExhibitionV2.constructor(string,string,uint256,uint256,address,string,string).contractURI_ (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1363)\nVariable FeralfileExhibitionV2._tokenBaseURI (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1332) is too similar to FeralfileExhibitionV2.constructor(string,string,uint256,uint256,address,string,string).tokenBaseURI_ (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1364)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#149-151)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#157-160)\nsetTrustee(address) should be declared external:\n\t- Authorizable.setTrustee(address) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#187-189)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#808-810)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#815-817)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#822-827)\n\t- FeralfileExhibitionV2.tokenURI(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1551-1576)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#841-851)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#865-870)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#882-891)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#896-902)\ntokenOfOwnerByIndex(address,uint256) should be declared external:\n\t- ERC721Enumerable.tokenOfOwnerByIndex(address,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1179-1182)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1194-1197)\ngetArtworkByIndex(uint256) should be declared external:\n\t- FeralfileExhibitionV2.getArtworkByIndex(uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1445-1456)\ngetArtworkEditionByIndex(uint256,uint256) should be declared external:\n\t- FeralfileExhibitionV2.getArtworkEditionByIndex(uint256,uint256) (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1541-1548)\ncontractURI() should be declared external:\n\t- FeralfileExhibitionV2.contractURI() (repositories/verified-smart-contracts/FeralfileExhibitionV2.sol#1584-1586)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/FeralfileExhibitionV2.sol analyzed (15 contracts with 75 detectors), 67 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PreOfm.sol --json ./slither/OLD_verified-smart-contracts/json/PreOfm.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PreOfm.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PreOfm.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> ./repositories/verified-smart-contracts/PreOfm.sol:1:1:\n  |\n1 | pragma solidity 0.7.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> ./repositories/verified-smart-contracts/PreOfm.sol:1:1:\n  |\n1 | pragma solidity 0.7.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PreOfm.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.7.6+commit.7338295f.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> ./repositories/verified-smart-contracts/PreOfm.sol:1:1:\n  |\n1 | pragma solidity 0.7.5;\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/BabelToken.sol --json ./slither/OLD_verified-smart-contracts/json/BabelToken.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/BabelToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/BabelToken.sol:\n\x1b[91mError: Function needs to specify overridden contracts "ERC721" and "IERC721".\x1b[0m\n    --> repositories/verified-smart-contracts/BabelToken.sol:1133:77:\n     |\n1133 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:195:1:\n    |\n195 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:384:1:\n    |\n384 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Function needs to specify overridden contracts "ERC721" and "IERC721".\n    --> repositories/verified-smart-contracts/BabelToken.sol:1133:77:\n     |\n1133 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:195:1:\n    |\n195 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:384:1:\n    |\n384 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\nNone\nError in ./repositories/verified-smart-contracts/BabelToken.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Function needs to specify overridden contracts "ERC721" and "IERC721".\n    --> repositories/verified-smart-contracts/BabelToken.sol:1133:77:\n     |\n1133 |     function isApprovedForAll(address _owner, address operator) public view override returns (bool) {\n     |                                                                             ^^^^^^^^\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:195:1:\n    |\n195 | interface IERC721 is IERC165 {\n    | ^ (Relevant source part starts here and spans across multiple lines).\nNote: This contract: \n   --> repositories/verified-smart-contracts/BabelToken.sol:384:1:\n    |\n384 | abstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    | ^ (Relevant source part starts here and spans across multiple lines).\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/ProjectOneVRF.sol --json ./slither/OLD_verified-smart-contracts/json/ProjectOneVRF.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/ProjectOneVRF.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/ProjectOneVRF.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/ProjectOneVRF.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/ProjectOneVRF.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/ProjectOneVRF.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/ProjectOneVRF.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/PARMA.sol --json ./slither/OLD_verified-smart-contracts/json/PARMA.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/PARMA.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/PARMA.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/PARMA.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/PARMA.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/PARMA.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/PARMA.sol:1:1:\n  |\n1 | {"Context.sol":{"content":"// SPDX-L ...\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/UNITS.sol --json ./slither/OLD_verified-smart-contracts/json/UNITS.sol.json', returncode=20, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/UNITS.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['^0.8.0', '^0.8.11']\n\t- ^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#8)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#93)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#122)\n\t- ^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#149)\n\t- ^0.8.11 (repositories/verified-smart-contracts/UNITS.sol#504)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nContext._msgData() (repositories/verified-smart-contracts/UNITS.sol#139-141) is never used and should be removed\nERC20._burn(address,uint256) (repositories/verified-smart-contracts/UNITS.sol#418-433) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#8) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#93) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#122) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/UNITS.sol#149) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.11 (repositories/verified-smart-contracts/UNITS.sol#504) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC20.name() (repositories/verified-smart-contracts/UNITS.sol#205-207)\nsymbol() should be declared external:\n\t- ERC20.symbol() (repositories/verified-smart-contracts/UNITS.sol#213-215)\ndecimals() should be declared external:\n\t- ERC20.decimals() (repositories/verified-smart-contracts/UNITS.sol#230-232)\ntotalSupply() should be declared external:\n\t- ERC20.totalSupply() (repositories/verified-smart-contracts/UNITS.sol#237-239)\nbalanceOf(address) should be declared external:\n\t- ERC20.balanceOf(address) (repositories/verified-smart-contracts/UNITS.sol#244-246)\ntransfer(address,uint256) should be declared external:\n\t- ERC20.transfer(address,uint256) (repositories/verified-smart-contracts/UNITS.sol#256-259)\nallowance(address,address) should be declared external:\n\t- ERC20.allowance(address,address) (repositories/verified-smart-contracts/UNITS.sol#264-266)\napprove(address,uint256) should be declared external:\n\t- ERC20.approve(address,uint256) (repositories/verified-smart-contracts/UNITS.sol#275-278)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC20.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/UNITS.sol#293-307)\nincreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.increaseAllowance(address,uint256) (repositories/verified-smart-contracts/UNITS.sol#321-324)\ndecreaseAllowance(address,uint256) should be declared external:\n\t- ERC20.decreaseAllowance(address,uint256) (repositories/verified-smart-contracts/UNITS.sol#340-348)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/UNITS.sol analyzed (5 contracts with 75 detectors), 20 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/View.sol --json ./slither/OLD_verified-smart-contracts/json/View.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/View.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/View.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n   --> repositories/verified-smart-contracts/View.sol:414:1:\n    |\n414 | pragma solidity 0.8.7;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n   --> repositories/verified-smart-contracts/View.sol:414:1:\n    |\n414 | pragma solidity 0.8.7;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/View.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n   --> repositories/verified-smart-contracts/View.sol:414:1:\n    |\n414 | pragma solidity 0.8.7;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/Pioneer.sol --json ./slither/OLD_verified-smart-contracts/json/Pioneer.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/Pioneer.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/Pioneer.sol:\n\x1b[91mError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\x1b[0m\n --> repositories/verified-smart-contracts/Pioneer.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Pioneer.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\nNone\nError in ./repositories/verified-smart-contracts/Pioneer.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function/error definition.\n --> repositories/verified-smart-contracts/Pioneer.sol:1:1:\n  |\n1 | {{\n  | ^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/FeeTokenStaking.sol --json ./slither/OLD_verified-smart-contracts/json/FeeTokenStaking.sol.json', returncode=255, stdout='', stderr='\'solc --version\' running\n\'solc ./repositories/verified-smart-contracts/FeeTokenStaking.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts\' running\nCompilation warnings/errors on ./repositories/verified-smart-contracts/FeeTokenStaking.sol:\n\x1b[91mError: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\x1b[0m\n --> repositories/verified-smart-contracts/FeeTokenStaking.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/FeeTokenStaking.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\nNone\nError in ./repositories/verified-smart-contracts/FeeTokenStaking.sol\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc\n    ret: Dict = json.loads(stdout)\n  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode\n    raise JSONDecodeError("Expecting value", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 723, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/slither/__main__.py", line 71, in process_all\n    compilations = compile_all(target, **vars(args))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__\n    self._compile(**kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile\n    self._platform.compile(self, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 151, in compile\n    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json\n    return _run_solc(\n  File "/home/mint_sede/Documents/develop/analysis_mestrado/env/lib/python3.10/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc\n    raise InvalidCompilation(f"Invalid solc compilation {stderr}")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Source file requires different compiler version (current compiler is 0.8.23+commit.f704f362.Linux.g++) - note that nightly builds are considered to be strictly less than the released version\n --> repositories/verified-smart-contracts/FeeTokenStaking.sol:2:1:\n  |\n2 | pragma solidity 0.8.10;\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n')
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/LooksLikeHoldersClub.sol --json ./slither/OLD_verified-smart-contracts/json/LooksLikeHoldersClub.sol.json', returncode=76, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/LooksLikeHoldersClub.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nLooksLikeHoldersClub.withdraw() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1343-1357) sends eth to arbitrary user\n\tDangerous calls:\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nLooksLikeHoldersClub.walletOfOwner(address).i (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1286) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#956-977) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#963-973)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nLooksLikeHoldersClub.constructor(string,string,string,string)._name (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1248) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#610) (state variable)\nLooksLikeHoldersClub.constructor(string,string,string,string)._symbol (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1249) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#613) (state variable)\nLooksLikeHoldersClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1279) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1180) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#963)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#956-977) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#964)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#956-977) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#966)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#965)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#956-977) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#970)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#326-336) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#332-334)\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#495-515) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#507-510)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#956-977) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#969-971)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nLooksLikeHoldersClub.tokenURI(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1292-1312) compares to a boolean constant:\n\t-revealed == false (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1304)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#17)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#40)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#180)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#206)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#234)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#303)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#522)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#550)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#576)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#599)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1004)\n\t- ^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1166)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1233)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#379-381) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#389-395) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#408-414) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#422-433) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#468-470) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#478-487) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#441-443) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#451-460) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#354-359) is never used and should be removed\nAddress.verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#495-515) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#592-594) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#691-693) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#891-903) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#270-281) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#286-296) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#17) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#40) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#180) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#206) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#234) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#303) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#522) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#550) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#576) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#599) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1004) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1233) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#354-359):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#357)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#422-433):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#431)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#451-460):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#458)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#478-487):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#485)\nLow level call in LooksLikeHoldersClub.withdraw() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1343-1357):\n\t- (hs) = address(0x943590A42C27D08e3744202c4Ae5eD55c2dE240D).call{value: address(this).balance * 5 / 100}() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1347)\n\t- (os) = address(owner()).call{value: address(this).balance}() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1354)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#768) is not in mixedCase\nParameter LooksLikeHoldersClub.mint(uint256)._mintAmount (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1263) is not in mixedCase\nParameter LooksLikeHoldersClub.walletOfOwner(address)._owner (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1279) is not in mixedCase\nParameter LooksLikeHoldersClub.setCost(uint256)._newCost (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1319) is not in mixedCase\nParameter LooksLikeHoldersClub.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1323) is not in mixedCase\nParameter LooksLikeHoldersClub.setNotRevealedURI(string)._notRevealedURI (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1327) is not in mixedCase\nParameter LooksLikeHoldersClub.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1331) is not in mixedCase\nParameter LooksLikeHoldersClub.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1335) is not in mixedCase\nParameter LooksLikeHoldersClub.pause(bool)._state (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1339) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nLooksLikeHoldersClub.maxSupply (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1241) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#665-667)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#672-674)\ntokenURI(uint256) should be declared external:\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#679-684)\n\t- LooksLikeHoldersClub.tokenURI(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1292-1312)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#698-708)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#722-727)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#739-748)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#753-759)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1051-1054)\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1213-1215)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1221-1224)\nmint(uint256) should be declared external:\n\t- LooksLikeHoldersClub.mint(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1263-1277)\nwalletOfOwner(address) should be declared external:\n\t- LooksLikeHoldersClub.walletOfOwner(address) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1279-1290)\nreveal() should be declared external:\n\t- LooksLikeHoldersClub.reveal() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1315-1317)\nsetCost(uint256) should be declared external:\n\t- LooksLikeHoldersClub.setCost(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1319-1321)\nsetmaxMintAmount(uint256) should be declared external:\n\t- LooksLikeHoldersClub.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1323-1325)\nsetBaseExtension(string) should be declared external:\n\t- LooksLikeHoldersClub.setBaseExtension(string) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1335-1337)\npause(bool) should be declared external:\n\t- LooksLikeHoldersClub.pause(bool) (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1339-1341)\nwithdraw() should be declared external:\n\t- LooksLikeHoldersClub.withdraw() (repositories/verified-smart-contracts/LooksLikeHoldersClub.sol#1343-1357)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/LooksLikeHoldersClub.sol analyzed (13 contracts with 75 detectors), 76 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/CryptoNobles.sol --json ./slither/OLD_verified-smart-contracts/json/CryptoNobles.sol.json', returncode=101, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/CryptoNobles.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[91m\nCryptoNobles.withdrawAll() (repositories/verified-smart-contracts/CryptoNobles.sol#1561-1563) sends eth to arbitrary user\n\tDangerous calls:\n\t- require(bool)(address(msg.sender).send(address(this).balance)) (repositories/verified-smart-contracts/CryptoNobles.sol#1562)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations\x1b[0m\n\x1b[93m\nCryptoNobles.walletOfOwner(address).i (repositories/verified-smart-contracts/CryptoNobles.sol#1488) is a local variable never initialized\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables\x1b[0m\n\x1b[93m\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#988-1009) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (repositories/verified-smart-contracts/CryptoNobles.sol#995-1005)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return\x1b[0m\n\x1b[92m\nCryptoNobles.constructor(string,string,string)._name (repositories/verified-smart-contracts/CryptoNobles.sol#1433) shadows:\n\t- ERC721._name (repositories/verified-smart-contracts/CryptoNobles.sol#642) (state variable)\nCryptoNobles.constructor(string,string,string)._symbol (repositories/verified-smart-contracts/CryptoNobles.sol#1434) shadows:\n\t- ERC721._symbol (repositories/verified-smart-contracts/CryptoNobles.sol#645) (state variable)\nCryptoNobles.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoNobles.sol#1481) shadows:\n\t- Ownable._owner (repositories/verified-smart-contracts/CryptoNobles.sol#552) (state variable)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing\x1b[0m\n\x1b[92m\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (repositories/verified-smart-contracts/CryptoNobles.sol#995)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#988-1009) potentially used before declaration: retval == IERC721Receiver(to).onERC721Received.selector (repositories/verified-smart-contracts/CryptoNobles.sol#996)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoNobles.sol#997)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#988-1009) potentially used before declaration: reason.length == 0 (repositories/verified-smart-contracts/CryptoNobles.sol#998)\nVariable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (repositories/verified-smart-contracts/CryptoNobles.sol#997)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#988-1009) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (repositories/verified-smart-contracts/CryptoNobles.sol#1002)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables\x1b[0m\n\x1b[92m\nAddress.isContract(address) (repositories/verified-smart-contracts/CryptoNobles.sol#328-338) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoNobles.sol#334-336)\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#491-511) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoNobles.sol#503-506)\nERC721._checkOnERC721Received(address,address,uint256,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#988-1009) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/CryptoNobles.sol#1001-1003)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nCryptoNobles.mintFromWhiteList(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1467-1479) compares to a boolean constant:\n\t-require(bool)(whitelisted[_to] != false) (repositories/verified-smart-contracts/CryptoNobles.sol#1470)\nCryptoNobles.whitelistUser() (repositories/verified-smart-contracts/CryptoNobles.sol#1548-1554) compares to a boolean constant:\n\t-require(bool)(whitelisted[msg.sender] != true) (repositories/verified-smart-contracts/CryptoNobles.sol#1550)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality\x1b[0m\n\x1b[92m\nDifferent versions of Solidity is used:\n\t- Version used: ['>=0.7.0<0.9.0', '^0.8.0']\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#3)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#26)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#166)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#191)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#214)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#239)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#305)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#515)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#537)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#605)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#630)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1033)\n\t- ^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1192)\n\t- >=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1409)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used\x1b[0m\n\x1b[92m\nAddress._verifyCallResult(bool,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#491-511) is never used and should be removed\nAddress.functionCall(address,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#381-383) is never used and should be removed\nAddress.functionCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#391-397) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#410-416) is never used and should be removed\nAddress.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoNobles.sol#424-435) is never used and should be removed\nAddress.functionDelegateCall(address,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#470-472) is never used and should be removed\nAddress.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#480-489) is never used and should be removed\nAddress.functionStaticCall(address,bytes) (repositories/verified-smart-contracts/CryptoNobles.sol#443-445) is never used and should be removed\nAddress.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#453-462) is never used and should be removed\nAddress.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#356-361) is never used and should be removed\nContext._msgData() (repositories/verified-smart-contracts/CryptoNobles.sol#532-534) is never used and should be removed\nERC721._baseURI() (repositories/verified-smart-contracts/CryptoNobles.sol#723-725) is never used and should be removed\nERC721._burn(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#923-935) is never used and should be removed\nSafeMath.add(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1281-1283) is never used and should be removed\nSafeMath.div(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1323-1325) is never used and should be removed\nSafeMath.div(uint256,uint256,string) (repositories/verified-smart-contracts/CryptoNobles.sol#1379-1384) is never used and should be removed\nSafeMath.mod(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1339-1341) is never used and should be removed\nSafeMath.mod(uint256,uint256,string) (repositories/verified-smart-contracts/CryptoNobles.sol#1401-1406) is never used and should be removed\nSafeMath.sub(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1295-1297) is never used and should be removed\nSafeMath.sub(uint256,uint256,string) (repositories/verified-smart-contracts/CryptoNobles.sol#1356-1361) is never used and should be removed\nSafeMath.tryAdd(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1210-1216) is never used and should be removed\nSafeMath.tryDiv(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1252-1257) is never used and should be removed\nSafeMath.tryMod(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1264-1269) is never used and should be removed\nSafeMath.tryMul(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1235-1245) is never used and should be removed\nSafeMath.trySub(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1223-1228) is never used and should be removed\nStrings.toHexString(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#275-286) is never used and should be removed\nStrings.toHexString(uint256,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#291-301) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#26) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#166) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#191) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#214) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#239) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#305) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#515) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#537) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#605) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#630) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1033) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version^0.8.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1192) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nPragma version>=0.7.0<0.9.0 (repositories/verified-smart-contracts/CryptoNobles.sol#1409) is too complex\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nLow level call in Address.sendValue(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#356-361):\n\t- (success) = recipient.call{value: amount}() (repositories/verified-smart-contracts/CryptoNobles.sol#359)\nLow level call in Address.functionCallWithValue(address,bytes,uint256,string) (repositories/verified-smart-contracts/CryptoNobles.sol#424-435):\n\t- (success,returndata) = target.call{value: value}(data) (repositories/verified-smart-contracts/CryptoNobles.sol#433)\nLow level call in Address.functionStaticCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#453-462):\n\t- (success,returndata) = target.staticcall(data) (repositories/verified-smart-contracts/CryptoNobles.sol#460)\nLow level call in Address.functionDelegateCall(address,bytes,string) (repositories/verified-smart-contracts/CryptoNobles.sol#480-489):\n\t- (success,returndata) = target.delegatecall(data) (repositories/verified-smart-contracts/CryptoNobles.sol#487)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls\x1b[0m\n\x1b[92m\nParameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (repositories/verified-smart-contracts/CryptoNobles.sol#800) is not in mixedCase\nParameter CryptoNobles.mint(address,uint256)._to (repositories/verified-smart-contracts/CryptoNobles.sol#1454) is not in mixedCase\nParameter CryptoNobles.mint(address,uint256)._mintAmount (repositories/verified-smart-contracts/CryptoNobles.sol#1454) is not in mixedCase\nParameter CryptoNobles.mintFromWhiteList(address,uint256)._to (repositories/verified-smart-contracts/CryptoNobles.sol#1467) is not in mixedCase\nParameter CryptoNobles.mintFromWhiteList(address,uint256)._mintAmount (repositories/verified-smart-contracts/CryptoNobles.sol#1467) is not in mixedCase\nParameter CryptoNobles.walletOfOwner(address)._owner (repositories/verified-smart-contracts/CryptoNobles.sol#1481) is not in mixedCase\nParameter CryptoNobles.setCost(uint256)._newCost (repositories/verified-smart-contracts/CryptoNobles.sol#1512) is not in mixedCase\nParameter CryptoNobles.setWhitelistCost(uint256)._newCost (repositories/verified-smart-contracts/CryptoNobles.sol#1516) is not in mixedCase\nParameter CryptoNobles.setmaxMintAmount(uint256)._newmaxMintAmount (repositories/verified-smart-contracts/CryptoNobles.sol#1520) is not in mixedCase\nParameter CryptoNobles.setmaxWhitelistSpots(uint256)._newmaxWhitelistSpots (repositories/verified-smart-contracts/CryptoNobles.sol#1524) is not in mixedCase\nParameter CryptoNobles.setBaseURI(string)._newBaseURI (repositories/verified-smart-contracts/CryptoNobles.sol#1528) is not in mixedCase\nParameter CryptoNobles.setBaseExtension(string)._newBaseExtension (repositories/verified-smart-contracts/CryptoNobles.sol#1532) is not in mixedCase\nParameter CryptoNobles.pause(bool)._state (repositories/verified-smart-contracts/CryptoNobles.sol#1536) is not in mixedCase\nParameter CryptoNobles.setPauseWhitelistDrop(bool)._state (repositories/verified-smart-contracts/CryptoNobles.sol#1540) is not in mixedCase\nParameter CryptoNobles.setPauseWhitelist(bool)._state (repositories/verified-smart-contracts/CryptoNobles.sol#1544) is not in mixedCase\nParameter CryptoNobles.removeWhitelistUser(address)._user (repositories/verified-smart-contracts/CryptoNobles.sol#1556) is not in mixedCase\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions\x1b[0m\n\x1b[92m\nCryptoNobles.maxSupply (repositories/verified-smart-contracts/CryptoNobles.sol#1423) should be constant\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant\x1b[0m\n\x1b[92m\nrenounceOwnership() should be declared external:\n\t- Ownable.renounceOwnership() (repositories/verified-smart-contracts/CryptoNobles.sol#585-587)\ntransferOwnership(address) should be declared external:\n\t- Ownable.transferOwnership(address) (repositories/verified-smart-contracts/CryptoNobles.sol#593-596)\nname() should be declared external:\n\t- ERC721.name() (repositories/verified-smart-contracts/CryptoNobles.sol#697-699)\nsymbol() should be declared external:\n\t- ERC721.symbol() (repositories/verified-smart-contracts/CryptoNobles.sol#704-706)\ntokenURI(uint256) should be declared external:\n\t- CryptoNobles.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1494-1510)\n\t- ERC721.tokenURI(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#711-716)\napprove(address,uint256) should be declared external:\n\t- ERC721.approve(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#730-740)\nsetApprovalForAll(address,bool) should be declared external:\n\t- ERC721.setApprovalForAll(address,bool) (repositories/verified-smart-contracts/CryptoNobles.sol#754-759)\ntransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.transferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#771-780)\nsafeTransferFrom(address,address,uint256) should be declared external:\n\t- ERC721.safeTransferFrom(address,address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#785-791)\ntokenByIndex(uint256) should be declared external:\n\t- ERC721Enumerable.tokenByIndex(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1078-1081)\nmint(address,uint256) should be declared external:\n\t- CryptoNobles.mint(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1454-1465)\nmintFromWhiteList(address,uint256) should be declared external:\n\t- CryptoNobles.mintFromWhiteList(address,uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1467-1479)\nsetCost(uint256) should be declared external:\n\t- CryptoNobles.setCost(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1512-1514)\nsetWhitelistCost(uint256) should be declared external:\n\t- CryptoNobles.setWhitelistCost(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1516-1518)\nsetmaxMintAmount(uint256) should be declared external:\n\t- CryptoNobles.setmaxMintAmount(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1520-1522)\nsetmaxWhitelistSpots(uint256) should be declared external:\n\t- CryptoNobles.setmaxWhitelistSpots(uint256) (repositories/verified-smart-contracts/CryptoNobles.sol#1524-1526)\nsetBaseExtension(string) should be declared external:\n\t- CryptoNobles.setBaseExtension(string) (repositories/verified-smart-contracts/CryptoNobles.sol#1532-1534)\npause(bool) should be declared external:\n\t- CryptoNobles.pause(bool) (repositories/verified-smart-contracts/CryptoNobles.sol#1536-1538)\nsetPauseWhitelistDrop(bool) should be declared external:\n\t- CryptoNobles.setPauseWhitelistDrop(bool) (repositories/verified-smart-contracts/CryptoNobles.sol#1540-1542)\nsetPauseWhitelist(bool) should be declared external:\n\t- CryptoNobles.setPauseWhitelist(bool) (repositories/verified-smart-contracts/CryptoNobles.sol#1544-1546)\nwhitelistUser() should be declared external:\n\t- CryptoNobles.whitelistUser() (repositories/verified-smart-contracts/CryptoNobles.sol#1548-1554)\nremoveWhitelistUser(address) should be declared external:\n\t- CryptoNobles.removeWhitelistUser(address) (repositories/verified-smart-contracts/CryptoNobles.sol#1556-1559)\nwithdrawAll() should be declared external:\n\t- CryptoNobles.withdrawAll() (repositories/verified-smart-contracts/CryptoNobles.sol#1561-1563)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external\x1b[0m\n./repositories/verified-smart-contracts/CryptoNobles.sol analyzed (14 contracts with 75 detectors), 101 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
CompletedProcess(args='slither  ./repositories/verified-smart-contracts/NFTCloner.sol --json ./slither/OLD_verified-smart-contracts/json/NFTCloner.sol.json', returncode=17, stdout='', stderr="'solc --version' running\n'solc ./repositories/verified-smart-contracts/NFTCloner.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/mint_sede/Documents/develop/analysis_mestrado/repositories/verified-smart-contracts' running\n\x1b[92m\nReentrancy in NFTCloner.clone1(address,string,string) (repositories/verified-smart-contracts/NFTCloner.sol#115-125):\n\tExternal calls:\n\t- IERCClone(newClone).initialize(msg.sender,name,symbol) (repositories/verified-smart-contracts/NFTCloner.sol#122)\n\tEvent emitted after the call(s):\n\t- Cloned(newClone,name,symbol) (repositories/verified-smart-contracts/NFTCloner.sol#124)\nReentrancy in NFTCloner.clone2(address,string,string,uint256,uint256,uint256) (repositories/verified-smart-contracts/NFTCloner.sol#127-139):\n\tExternal calls:\n\t- IERCClone(newClone).initialize(msg.sender,name,symbol,cap,maxPerTx,price) (repositories/verified-smart-contracts/NFTCloner.sol#136)\n\tEvent emitted after the call(s):\n\t- Cloned(newClone,name,symbol) (repositories/verified-smart-contracts/NFTCloner.sol#138)\nReentrancy in NFTCloner.clone3(address,string,string,uint256,uint256,uint256,uint256) (repositories/verified-smart-contracts/NFTCloner.sol#141-154):\n\tExternal calls:\n\t- IERCClone(newClone).initialize(msg.sender,name,symbol,cap,freeCap,maxPerTx,price) (repositories/verified-smart-contracts/NFTCloner.sol#151)\n\tEvent emitted after the call(s):\n\t- Cloned(newClone,name,symbol) (repositories/verified-smart-contracts/NFTCloner.sol#153)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3\x1b[0m\n\x1b[92m\nClones.clone(address) (repositories/verified-smart-contracts/NFTCloner.sol#24-33) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTCloner.sol#25-31)\nClones.cloneDeterministic(address,bytes32) (repositories/verified-smart-contracts/NFTCloner.sol#42-51) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTCloner.sol#43-49)\nClones.predictDeterministicAddress(address,bytes32,address) (repositories/verified-smart-contracts/NFTCloner.sol#56-71) uses assembly\n\t- INLINE ASM (repositories/verified-smart-contracts/NFTCloner.sol#61-70)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage\x1b[0m\n\x1b[92m\nClones.cloneDeterministic(address,bytes32) (repositories/verified-smart-contracts/NFTCloner.sol#42-51) is never used and should be removed\nClones.predictDeterministicAddress(address,bytes32) (repositories/verified-smart-contracts/NFTCloner.sol#76-82) is never used and should be removed\nClones.predictDeterministicAddress(address,bytes32,address) (repositories/verified-smart-contracts/NFTCloner.sol#56-71) is never used and should be removed\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code\x1b[0m\n\x1b[92m\nPragma version^0.8.0 (repositories/verified-smart-contracts/NFTCloner.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6\nsolc-0.8.23 is not recommended for deployment\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity\x1b[0m\n\x1b[92m\nClones.clone(address) (repositories/verified-smart-contracts/NFTCloner.sol#24-33) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_clone_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#27)\nClones.clone(address) (repositories/verified-smart-contracts/NFTCloner.sol#24-33) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_clone_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#29)\nClones.cloneDeterministic(address,bytes32) (repositories/verified-smart-contracts/NFTCloner.sol#42-51) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#45)\nClones.cloneDeterministic(address,bytes32) (repositories/verified-smart-contracts/NFTCloner.sol#42-51) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_cloneDeterministic_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#47)\nClones.predictDeterministicAddress(address,bytes32,address) (repositories/verified-smart-contracts/NFTCloner.sol#56-71) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0,0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#63)\nClones.predictDeterministicAddress(address,bytes32,address) (repositories/verified-smart-contracts/NFTCloner.sol#56-71) uses literals with too many digits:\n\t- mstore(uint256,uint256)(ptr_predictDeterministicAddress_asm_0 + 0x28,0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000) (repositories/verified-smart-contracts/NFTCloner.sol#65)\nReference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits\x1b[0m\n./repositories/verified-smart-contracts/NFTCloner.sol analyzed (3 contracts with 75 detectors), 17 result(s) found\n\x1b[94mUse https://crytic.io/ to get access to additional detectors and Github integration\x1b[0m\n")
