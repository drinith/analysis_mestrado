CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/modifier_reentrancy.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 10507310867, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b506102c7806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634d5f327c14610051578063f55332ab14610084575b600080fd5b34801561005d57600080fd5b506100666100c7565b60405180826000191660001916815260200191505060405180910390f35b34801561009057600080fd5b506100c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021c565b005b60008060009054906101000a900460ff1615156101755760016000806101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff1663ca5d08806040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b505050505b60405160200180807f4e7520546f6b656e00000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156101ea57805182526020820191506020810190506020830392506101c5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905090565b8073ffffffffffffffffffffffffffffffffffffffff1663ca5d08806040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50505050505600a165627a7a72305820d2d08d6a0ab514ea208a902fef099eb095f119feb646012654d65036aec891100029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xf55332abdededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xf55332abdededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "call(address)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "643:1:6"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 12462718725, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b506102c7806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634d5f327c14610051578063f55332ab14610084575b600080fd5b34801561005d57600080fd5b506100666100c7565b60405180826000191660001916815260200191505060405180910390f35b34801561009057600080fd5b506100c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021c565b005b60008060009054906101000a900460ff1615156101755760016000806101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff1663ca5d08806040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b505050505b60405160200180807f4e7520546f6b656e00000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156101ea57805182526020820191506020810190506020830392506101c5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905090565b8073ffffffffffffffffffffffffffffffffffffffff1663ca5d08806040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b50505050505600a165627a7a72305820d2d08d6a0ab514ea208a902fef099eb095f119feb646012654d65036aec891100029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x4d5f327c", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x4d5f327c", "name": "supportsToken()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "351:1:6"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}], "meta": {"mythril_execution_info": {"analysis_duration": 19569879055}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/modifier_reentrancy.sol", "./repositories/smartbugs-curated/modifier_reentrancy.sol", "./repositories/smartbugs-curated/modifier_reentrancy.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/multiowned_vulnerable.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 91321870565, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x20000002fdf", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10fefef3529d0efdf", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106ad806101136000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063022914a71461006f578063853828b6146100f25780638595245414610109578063cd5c4c7014610164578063ebf0c717146101bf575b005b34801561007b57600080fd5b506100b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610216565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100fe57600080fd5b50610107610249565b005b34801561011557600080fd5b5061014a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032e565b604051808215151515815260200191505060405180910390f35b34801561017057600080fd5b506101a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103dc565b604051808215151515815260200191505060405180910390f35b3480156101cb57600080fd5b506101d461065c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156102ce57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561032b573d6000803e3d6000fd5b50565b6000808273ffffffffffffffffffffffffffffffffffffffff161415151561035557600080fd5b33600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561046257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105c957506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156105c857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b15156105d457600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820efda62e7b02e89b8cf1567aa6e9cbf99599dddb9635f4ac161c0b5108e2c921d0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x85952454000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x85952454000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "newOwner(address)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x853828b6", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x853828b6", "name": "withdrawAll()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "789:1:4"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}], "meta": {"mythril_execution_info": {"analysis_duration": 102795137405}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/multiowned_vulnerable.sol", "./repositories/smartbugs-curated/multiowned_vulnerable.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/mycontract.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Use of tx.origin as a part of authorization control.", "tail": "The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead."}, "extra": {"discoveryTime": 960279464, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610165806100606000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680639e1a00aa14610046575b600080fd5b34801561005257600080fd5b50610091600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610093565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415156100ee57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610134573d6000803e3d6000fd5b5050505600a165627a7a723058206612abd47af1b2200e7919c1aa2c10bac3faa7e801e5635b53eabe124be03cf10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x9e1a00aa", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x9e1a00aa", "name": "sendTo(address,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "233:1:2"}], "severity": "Low", "swcID": "SWC-115", "swcTitle": "Authorization through tx.origin"}], "meta": {"mythril_execution_info": {"analysis_duration": 4610316038}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/mycontract.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/name_registrar.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 6481312752}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/name_registrar.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/odds_and_evens.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2832480907, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5033600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061050f806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063679dffb41461005c5780636898f82b14610073578063f71d96cb14610093575b600080fd5b34801561006857600080fd5b50610071610107565b005b610091600480360381019080803590602001909291905050506101b6565b005b34801561009f57600080fd5b506100be600480360381019080803590602001909291905050506102c9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6000600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050905050565b670de0b6b3a7640000341415156101cc57600080fd5b60408051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001828152506000600460009054906101000a900460ff1660ff1660028110151561021857fe5b6002020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506004600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506002600460009054906101000a900460ff1660ff1614156102c6576102c5610312565b5b50565b6000816002811015156102d857fe5b600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000806000600160028110151561032557fe5b600202016001015460008060028110151561033c57fe5b6002020160010154019050600060028281151561035557fe5b0614156103d65760008060028110151561036b57fe5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6718fae27693b400009081150290604051600060405180830381858888f19350505050915061044d565b600060016002811015156103e657fe5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6718fae27693b400009081150290604051600060405180830381858888f1935050505091505b60008061045a919061047a565b6000600460006101000a81548160ff021916908360ff1602179055505050565b50600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550505600a165627a7a7230582047b6a5cbf8537c8caed2cfceb17b52cd60d859b531bdfcdad91bf34a375fb0810029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xf71d96cb01", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xf71d96cb01", "name": "players(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "727:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 11178201913, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x1df00013a7640001", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5033600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061050f806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063679dffb41461005c5780636898f82b14610073578063f71d96cb14610093575b600080fd5b34801561006857600080fd5b50610071610107565b005b610091600480360381019080803590602001909291905050506101b6565b005b34801561009f57600080fd5b506100be600480360381019080803590602001909291905050506102c9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6000600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050905050565b670de0b6b3a7640000341415156101cc57600080fd5b60408051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001828152506000600460009054906101000a900460ff1660ff1660028110151561021857fe5b6002020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506004600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506002600460009054906101000a900460ff1660ff1614156102c6576102c5610312565b5b50565b6000816002811015156102d857fe5b600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000806000600160028110151561032557fe5b600202016001015460008060028110151561033c57fe5b6002020160010154019050600060028281151561035557fe5b0614156103d65760008060028110151561036b57fe5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6718fae27693b400009081150290604051600060405180830381858888f19350505050915061044d565b600060016002811015156103e657fe5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6718fae27693b400009081150290604051600060405180830381858888f1935050505091505b60008061045a919061047a565b6000600460006101000a81548160ff021916908360ff1602179055505050565b50600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550505600a165627a7a7230582047b6a5cbf8537c8caed2cfceb17b52cd60d859b531bdfcdad91bf34a375fb0810029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x6898f82b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6898f82b", "name": "play(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x679dffb4", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x679dffb4", "name": "getProfit()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "428:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 12175563812}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/odds_and_evens.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/old_blockhash.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.number environment variable.", "tail": "The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 2739018917, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2001080440040002", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052670de0b6b3a76400003414151561001a57600080fd5b610335806100296000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311da60b414610051578063ed7f559c14610068575b600080fd5b34801561005d57600080fd5b5061006661008c565b005b61008a600480360381019080803560001916906020019092919050505061020d565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154431115156100dd57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015440905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600019166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460001916141561020a573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b505b50565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151561025d57600080fd5b670de0b6b3a76400003414151561027357600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018160001916905550600143016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550505600a165627a7a72305820530da5ca0273c58920be24ffe3207891054349d33478e66922cb1c2ef49ea3380029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x11da60b4", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x11da60b4", "name": "settle()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "216:1:2"}], "severity": "Low", "swcID": "SWC-120", "swcTitle": "Weak Sources of Randomness from Chain Attributes"}, {"description": {"head": "A control flow decision is made based on The block hash of a previous block.", "tail": "The block hash of a previous block is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 4899739265, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2001080440040002", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052670de0b6b3a76400003414151561001a57600080fd5b610335806100296000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311da60b414610051578063ed7f559c14610068575b600080fd5b34801561005d57600080fd5b5061006661008c565b005b61008a600480360381019080803560001916906020019092919050505061020d565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154431115156100dd57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015440905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600019166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460001916141561020a573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b505b50565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151561025d57600080fd5b670de0b6b3a76400003414151561027357600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018160001916905550600143016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550505600a165627a7a72305820530da5ca0273c58920be24ffe3207891054349d33478e66922cb1c2ef49ea3380029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x11da60b4", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x11da60b4", "name": "settle()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "442:1:2"}], "severity": "Low", "swcID": "SWC-120", "swcTitle": "Weak Sources of Randomness from Chain Attributes"}, {"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 6772124767, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2000000000000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052670de0b6b3a76400003414151561001a57600080fd5b610335806100296000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311da60b414610051578063ed7f559c14610068575b600080fd5b34801561005d57600080fd5b5061006661008c565b005b61008a600480360381019080803560001916906020019092919050505061020d565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154431115156100dd57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015440905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600019166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460001916141561020a573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b505b50565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151561025d57600080fd5b670de0b6b3a76400003414151561027357600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018160001916905550600143016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550505600a165627a7a72305820530da5ca0273c58920be24ffe3207891054349d33478e66922cb1c2ef49ea3380029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xed7f559c", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xed7f559c", "name": "lockInGuess(bytes32)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640000"}]}]}, "locations": [{"sourceMap": "705:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 31305722713}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/old_blockhash.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/open_address_lottery.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 1006217521191}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/open_address_lottery.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/overflow_simple_add.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "sourceType": "", "sourceFormat": "", "sourceList": [], "meta": {"logs": [{"level": "error", "hidden": true, "msg": "Solc experienced a fatal error.\\n\\n./repositories/smartbugs-curated/overflow_simple_add.sol:7:1: SyntaxError: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\\npragma solidity 0.4.25;\\n^---------------------^\\n\\nSolidityVersionMismatch: Try adding the option \\"--solv 0.4.25\\"\\n"}]}}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/overflow_single_tx.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 2262081146, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600160005534801561001557600080fd5b50610250806100256000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630642f32a1461008857806306661abd146100b55780634c4f50f3146100e05780635c68bc061461010d57806369fb0f5d1461013a578063def92d6814610167578063e6dca5ea14610194575b600080fd5b34801561009457600080fd5b506100b3600480360381019080803590602001909291905050506101c1565b005b3480156100c157600080fd5b506100ca6101ce565b6040518082815260200191505060405180910390f35b3480156100ec57600080fd5b5061010b600480360381019080803590602001909291905050506101d4565b005b34801561011957600080fd5b50610138600480360381019080803590602001909291905050506101e6565b005b34801561014657600080fd5b50610165600480360381019080803590602001909291905050506101f8565b005b34801561017357600080fd5b5061019260048036038101908080359060200190929190505050610205565b005b3480156101a057600080fd5b506101bf60048036038101908080359060200190929190505050610217565b005b6000816000540190505050565b60005481565b80600080828254039250508190555050565b80600080828254029250508190555050565b6000816000540390505050565b80600080828254019250508190555050565b60008160005402905050505600a165627a7a723058202ca660bfc8f09cebcbcee39e25d5ed3411c6b3a91a3d1b0794d2557392a8db150029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x4c4f50f301", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x4c4f50f301", "name": "underflowtostate(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "476:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 33690730095}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/overflow_single_tx.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/parity_wallet_bug_1.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "sourceType": "", "sourceFormat": "", "sourceList": [], "meta": {"logs": [{"level": "error", "hidden": true, "msg": "Traceback (most recent call last):\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/mythril/interfaces/cli.py\\", line 924, in parse_args_and_execute\\n    address = load_code(disassembler, args)\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/mythril/interfaces/cli.py\\", line 685, in load_code\\n    address, _ = disassembler.load_from_solidity(\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/mythril/mythril/mythril_disassembler.py\\", line 169, in load_from_solidity\\n    solc_binary = self.solc_binary or util.extract_binary(file)\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/mythril/ethereum/util.py\\", line 162, in extract_binary\\n    version = extract_version(f.read())\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/mythril/ethereum/util.py\\", line 153, in extract_version\\n    version_constraint = NpmSpec(version_line)\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/semantic_version/base.py\\", line 647, in __init__\\n    self.clause = self._parse_to_clause(expression)\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/semantic_version/base.py\\", line 1254, in _parse_to_clause\\n    return cls.Parser.parse(expression)\\n  File \\"/mnt/develop/develop/analysis_mestrado/env/lib/python3.10/site-packages/semantic_version/base.py\\", line 1294, in parse\\n    raise ValueError(\\"Invalid NPM block in %r: %r\\" % (expression, block))\\nValueError: Invalid NPM block in \\"0.4.9; /* originally ^0.4.9, but doesn\'t compile with ^0.4.11 */\\": \'0.4.9;\'\\n"}]}}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/parity_wallet_bug_2.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 27186856985}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/parity_wallet_bug_2.sol", "./repositories/smartbugs-curated/parity_wallet_bug_2.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/phishable.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Use of tx.origin as a part of authorization control.", "tail": "The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead."}, "extra": {"discoveryTime": 1522120237, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060405160208061027883398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f5806100836000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b1461004e578063fa09e630146100a5575b005b34801561005a57600080fd5b506100636100e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b157600080fd5b506100e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061010d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561016857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101c5573d6000803e3d6000fd5b50505600a165627a7a72305820130efb8059669c0fd14681b6466fda18f583d069e0caf20503ebd16a51ec52310029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xfa09e630", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xfa09e630", "name": "withdrawAll(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "355:1:2"}], "severity": "Low", "swcID": "SWC-115", "swcTitle": "Authorization through tx.origin"}, {"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 22207051515, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "090909090909090909090909deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060405160208061027883398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f5806100836000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b1461004e578063fa09e630146100a5575b005b34801561005a57600080fd5b506100636100e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b157600080fd5b506100e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061010d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561016857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101c5573d6000803e3d6000fd5b50505600a165627a7a72305820130efb8059669c0fd14681b6466fda18f583d069e0caf20503ebd16a51ec52310029090909090909090909090909deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x00000000", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xfa09e630090909090909090909090909deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xfa09e630090909090909090909090909deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "withdrawAll(address)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "431:1:2"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}], "meta": {"mythril_execution_info": {"analysis_duration": 23518285036}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/phishable.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/proxy.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The contract delegates execution to another contract with a user-supplied address.", "tail": "The smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf."}, "extra": {"discoveryTime": 11061708450, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061018f806100606000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636fadcf7214610046575b600080fd5b34801561005257600080fd5b506100cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506100cf565b005b8173ffffffffffffffffffffffffffffffffffffffff168160405180828051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af4915050151561015f57600080fd5b50505600a165627a7a72305820982b828c54a6a970c94f5293dd1e37736dc8af31d0ad32f1d993c791a6cce1830029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x6fadcf72010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef10", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6fadcf72010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef10", "name": "forward(address,bytes)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "337:1:2"}], "severity": "High", "swcID": "SWC-112", "swcTitle": "Delegatecall to Untrusted Callee"}], "meta": {"mythril_execution_info": {"analysis_duration": 13973932743}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/proxy.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/random_number_generator.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 179149866}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/random_number_generator.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/reentrance.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 7306763410, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610313806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a951461006357806327e235e3146100995780632e1a7d4d146100f057806370a082311461011d575b005b610097600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610174565b005b3480156100a557600080fd5b506100da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c3565b6040518082815260200191505060405180910390f35b3480156100fc57600080fd5b5061011b600480360381019080803590602001909291905050506101db565b005b34801561012957600080fd5b5061015e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061029f565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561029c573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af19250505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820a71f56777e3259d3140c548c6dda58017c74fa929f77d3730e6358dbf11dbb6e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "586:1:2"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Read of persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 7945417165, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610313806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a951461006357806327e235e3146100995780632e1a7d4d146100f057806370a082311461011d575b005b610097600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610174565b005b3480156100a557600080fd5b506100da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c3565b6040518082815260200191505060405180910390f35b3480156100fc57600080fd5b5061011b600480360381019080803590602001909291905050506101db565b005b34801561012957600080fd5b5061015e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061029f565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561029c573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af19250505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820a71f56777e3259d3140c548c6dda58017c74fa929f77d3730e6358dbf11dbb6e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "659:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Write to persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 7960607767, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610313806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a951461006357806327e235e3146100995780632e1a7d4d146100f057806370a082311461011d575b005b610097600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610174565b005b3480156100a557600080fd5b506100da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c3565b6040518082815260200191505060405180910390f35b3480156100fc57600080fd5b5061011b600480360381019080803590602001909291905050506101db565b005b34801561012957600080fd5b5061015e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061029f565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561029c573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af19250505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820a71f56777e3259d3140c548c6dda58017c74fa929f77d3730e6358dbf11dbb6e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "666:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 86775452613, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610313806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a951461006357806327e235e3146100995780632e1a7d4d146100f057806370a082311461011d575b005b610097600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610174565b005b3480156100a557600080fd5b506100da600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c3565b6040518082815260200191505060405180910390f35b3480156100fc57600080fd5b5061011b600480360381019080803590602001909291905050506101db565b005b34801561012957600080fd5b5061015e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061029f565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561029c573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af19250505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820a71f56777e3259d3140c548c6dda58017c74fa929f77d3730e6358dbf11dbb6e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "586:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 86892523527}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/reentrance.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/incorrect_constructor_name2.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 6604430914}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/incorrect_constructor_name2.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/incorrect_constructor_name3.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 7455128908}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/incorrect_constructor_name3.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_1.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 6764525890, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60806040526000805534801561001457600080fd5b5060c8806100236000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631003e2d2146044575b600080fd5b348015604f57600080fd5b50606c600480360381019080803590602001909291905050506086565b604051808215151515815260200191505060405180910390f35b60008160008082825401925050819055509190505600a165627a7a7230582063a85530e3254bca1337a3c12e0a654da117e7be6651342f8a48b14e0553aeec0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x1003e2d2f9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x1003e2d2f9", "name": "add(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x1003e2d210", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x1003e2d210", "name": "add(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "144:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 6799428940}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_1.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_add.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 2300973176, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600160005534801561001557600080fd5b5060e4806100246000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b806000808282540192505081905550505600a165627a7a723058206215ed76183e25dab6f3bcbd0f2c88a9154752205e2e875892748615d96776000029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "name": "run(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "174:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 2938834667}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_add.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_benign_1.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 1100877762}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_benign_1.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_mapping_sym_1.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 3222606658, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060c88061001f6000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a5843f08146044575b600080fd5b348015604f57600080fd5b50607660048036038101908080359060200190929190803590602001909291905050506078565b005b806000808481526020019081526020016000206000828254039250508190555050505600a165627a7a72305820d56411add9b2c831e3123e4ad5a3aacc808b09ddb28ca9265795fffcb6c879f80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa5843f08000000000000000400028010400200020210000100000808010000010200080101", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa5843f08000000000000000400028010400200020210000100000808010000010200080101", "name": "init(uint256,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "145:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 3782779694}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_mapping_sym_1.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_minimal.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 2003517389, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600160005534801561001557600080fd5b5060e4806100246000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b806000808282540392505081905550505600a165627a7a723058208140b8dcca6e6434a38c8000aaf4618b975b4e3abff02c1ecfe232b0b0a6ea4d0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e901", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e901", "name": "run(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "174:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 2417606354}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_minimal.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_mul.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 2444182634, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600260005534801561001557600080fd5b5060e4806100246000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b806000808282540292505081905550505600a165627a7a72305820b6b40ae8c9e682f59663a6381b70915146eff0b897c29764685df4e2ab67d1740029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e980", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e980", "name": "run(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "174:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 2930978298}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_mul.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_multitx_multifunc_feasible.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 3998630762, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600080556001805534801561001857600080fd5b5061011b806100286000396000f3006080604052600436106053576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd146058578063a444f5e9146080578063e1c7392a1460aa575b600080fd5b348015606357600080fd5b50606a60be565b6040518082815260200191505060405180910390f35b348015608b57600080fd5b5060a86004803603810190808035906020019092919050505060c4565b005b34801560b557600080fd5b5060bc60e5565b005b60015481565b60008054141560d15760e2565b806001600082825403925050819055505b50565b60016000819055505600a165627a7a7230582084b560786dc24bba2a7a240db03a86659ea0574e51dc82e5cd3c8e4057b8bdbd0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xe1c7392a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xe1c7392a", "name": "init()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e901", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e901", "name": "run(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "218:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 4015726805}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_multitx_multifunc_feasible.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/integer_overflow_multitx_onefunc_feasible.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 3786770343, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600080556001805534801561001857600080fd5b5060fb806100276000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd14604e578063a444f5e9146076575b600080fd5b348015605957600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50609e6004803603810190808035906020019092919050505060a6565b005b60015481565b60008054141560bb57600160008190555060cc565b806001600082825403925050819055505b505600a165627a7a723058202790c7f9fd0ffcf6f2f3124e714094748d0d622ba80f56376e9d88e9835605fa0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e9", "name": "run(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa444f5e901", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa444f5e901", "name": "run(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "196:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 3800617218}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/integer_overflow_multitx_onefunc_feasible.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/king_of_the_ether_throne.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 623605251}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/king_of_the_ether_throne.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/list_dos.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 6952879190, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a72305820a93c18957d59796fc94caf78e0fda18bfc970db0037de42abe24b6d641dee1300029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "1188:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 8157617568, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a72305820a93c18957d59796fc94caf78e0fda18bfc970db0037de42abe24b6d641dee1300029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "1264:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 8333061218, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a72305820a93c18957d59796fc94caf78e0fda18bfc970db0037de42abe24b6d641dee1300029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "1182:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}, {"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 11179377079, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b503460028190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610fb68061006f6000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309f32957146100ea578063146ca531146101215780633beea6951461015257806345941a38146101a95780634a1f0bf6146101d45780634f013184146102175780636831c1691461022e578063719874da1461025957806381064e2d14610284578063ce43b0c0146102f0578063d3edcb5b1461035d578063d95a2d42146103c9578063f42d1d3014610424578063fc7b9c1814610465575b3480156100dc57600080fd5b506100e76000610490565b50005b3480156100f657600080fd5b506100ff610b4d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b50610136610b62565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015e57600080fd5b50610167610b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b557600080fd5b506101be610b9b565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b005b34801561022357600080fd5b5061022c610c3c565b005b34801561023a57600080fd5b50610243610c4e565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610ca4565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b50610299610caa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dc5780820151818401526020810190506102c1565b505050509050019250505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b50610372610d40565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103b557808201518184015260208101905061039a565b505050509050019250505060405180910390f35b3480156103d557600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050610dce565b6040518082815260200191505060405180910390f35b34801561047157600080fd5b5061047a610df1565b6040518082815260200191505060405180910390f35b6000803490504261a8c06001540110156106b7573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060036001600380549050038154811015156104f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff16021790555042600181905550600060028190555060006040519080825280602002602001820160405280156106225781602001602082028038833980820191505090505b5060039080519060200190610638929190610e4b565b5060006040519080825280602002602001820160405280156106695781602001602082028038833980820191505090505b506004908051906020019061067f929190610ed5565b506001600760008282829054906101000a900460ff160192506101000a81548160ff021916908360ff16021790555060009150610b47565b670de0b6b3a764000081101515610b0c574260018190555060033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060046064606e830281151561074657fe5b049080600181540180825580915050906001820390600052602060002001600090919290919091505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600584028115156107bb57fe5b049081150290604051600060405180830381858888f193505050505069021e19e0c9bab2400000600254101561080b576064600582028115156107fa57fe5b046002600082825401925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610899578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005840281151561087c57fe5b049081150290604051600060405180830381858888f19350505050505b6064606e82028115156108a857fe5b04600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002543073ffffffffffffffffffffffffffffffffffffffff16310360046000809054906101000a900463ffffffff1663ffffffff1681548110151561093757fe5b9060005260206000200154111515610b035760036000809054906101000a900463ffffffff1663ffffffff1681548110151561096f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000809054906101000a900463ffffffff1663ffffffff168154811015156109d957fe5b90600052602060002001549081150290604051600060405180830381858888f193505050505060046000809054906101000a900463ffffffff1663ffffffff16815481101515610a2557fe5b90600052602060002001546006600060036000809054906101000a900463ffffffff1663ffffffff16815481101515610a5a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055505b60019150610b47565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600091505b50919050565b6000809054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c395780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b34600260008282540192505081905550565b600080600090505b6000809054906101000a900463ffffffff1663ffffffff16811015610ca057600481815481101515610c8457fe5b9060005260206000200154820191508080600101915050610c56565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610cf857602002820191906000526020600020905b815481526020019060010190808311610ce4575b5050505050905090565b600381815481101515610d1157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d7a575b5050505050905090565b600481815481101515610ddd57fe5b906000526020600020016000915090505481565b6000806000809054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610e4757600481815481101515610e2b57fe5b9060005260206000200154820191508080600101915050610e0f565b5090565b828054828255906000526020600020908101928215610ec4579160200282015b82811115610ec35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6b565b5b509050610ed19190610f22565b5090565b828054828255906000526020600020908101928215610f11579160200282015b82811115610f10578251825591602001919060010190610ef5565b5b509050610f1e9190610f65565b5090565b610f6291905b80821115610f5e57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610f28565b5090565b90565b610f8791905b80821115610f83576000816000905550600101610f6b565b5090565b905600a165627a7a72305820a93c18957d59796fc94caf78e0fda18bfc970db0037de42abe24b6d641dee1300029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "2876:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 11356682062}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/list_dos.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/lottery.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.number environment variable.", "tail": "The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 2249130964, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610385806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063561e91a11461006957806383197ef014610080578063a6afd5fd14610097575b34801561006357600080fd5b50600080fd5b34801561007557600080fd5b5061007e6100ae565b005b34801561008c57600080fd5b5061009561018d565b005b3480156100a357600080fd5b506100ac610222565b005b6000806002438115156100bd57fe5b06149050600160606040519081016040528034815260200143815260200183151581525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505050801561018a573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050151561018957600080fd5b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101e857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027f57600080fd5b600090505b600180549050811015610356577f963de4d21b88c245c33046460072c6286e7f96ba9d57b9a77b3d89ce01f093716001828154811015156102c157fe5b9060005260206000209060030201600001546001838154811015156102e257fe5b90600052602060002090600302016001015460018481548110151561030357fe5b906000526020600020906003020160020160009054906101000a900460ff166040518084815260200183815260200182151515158152602001935050505060405180910390a18080600101915050610284565b505600a165627a7a7230582087cf0edc1ec434ee3de91ed63329d9bfe7c91dd99119d1c78158e7f87d2e50840029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x561e91a1", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x561e91a1", "name": "makeBet()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "329:1:2"}], "severity": "Low", "swcID": "SWC-120", "swcTitle": "Weak Sources of Randomness from Chain Attributes"}], "meta": {"mythril_execution_info": {"analysis_duration": 5553366661}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/lottery.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/lotto.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 2397771596, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506102b58061003a6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631846f51a146100725780638f1c058514610089578063decb3a90146100a0578063dfbf53ae146100cb578063ff15a45214610122575b600080fd5b34801561007e57600080fd5b50610087610151565b005b34801561009557600080fd5b5061009e6101ba565b005b3480156100ac57600080fd5b506100b561024b565b6040518082815260200191505060405180910390f35b3480156100d757600080fd5b506100e0610251565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012e57600080fd5b50610137610277565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900460ff16151561016b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505050565b6000809054906101000a900460ff161515156101d557600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050505060016000806101000a81548160ff021916908315150217905550565b60015481565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff16815600a165627a7a723058207fe86bb823154434351cf83ecdbeb6a44d889c731e5d3cd3c9c46b3c86e80fd30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x8f1c0585", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x8f1c0585", "name": "sendToWinner()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "553:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}, {"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 4671553850, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506102b58061003a6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631846f51a146100725780638f1c058514610089578063decb3a90146100a0578063dfbf53ae146100cb578063ff15a45214610122575b600080fd5b34801561007e57600080fd5b50610087610151565b005b34801561009557600080fd5b5061009e6101ba565b005b3480156100ac57600080fd5b506100b561024b565b6040518082815260200191505060405180910390f35b3480156100d757600080fd5b506100e0610251565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012e57600080fd5b50610137610277565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900460ff16151561016b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505050565b6000809054906101000a900460ff161515156101d557600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050505060016000806101000a81548160ff021916908315150217905550565b60015481565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff16815600a165627a7a723058207fe86bb823154434351cf83ecdbeb6a44d889c731e5d3cd3c9c46b3c86e80fd30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x8f1c0585", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x8f1c0585", "name": "sendToWinner()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x1846f51a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x1846f51a", "name": "withdrawLeftOver()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "434:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 4713270426}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/lotto.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/lucky_doubler.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 15204175710, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260006001556005600255607d60035534801561001f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111cd8061006f6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806330677b83146100a55780636a1db1bf1461013c5780637fef036e146101695780638a65d87414610200578063a6f9dae1146102ca578063ced926701461030d578063da3c300d1461033a578063f67abd87146103d1575b34801561009a57600080fd5b506100a36104bc565b005b3480156100b157600080fd5b506100ba610512565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101005780820151818401526020810190506100e5565b50505050905090810190601f16801561012d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561014857600080fd5b50610167600480360381019080803590602001909291905050506105a4565b005b34801561017557600080fd5b5061017e610614565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101c45780820151818401526020810190506101a9565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561020c57600080fd5b50610241600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065c565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561028d578082015181840152602081019050610272565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102d657600080fd5b5061030b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ea565b005b34801561031957600080fd5b5061033860048036038101908080359060200190929190505050610883565b005b34801561034657600080fd5b5061034f6108fc565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561039557808201518184015260208101905061037a565b50505050905090810190601f1680156103c25780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103dd57600080fd5b506103fc6004803603810190808035906020019092919050505061098e565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561047e578082015181840152602081019050610463565b50505050905090810190601f1680156104ab5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b670de0b6b3a7640000341015610507573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505050610510565b61050f610ad7565b5b565b600060606003549150608060405190810160405280604381526020017f5468652063757272656e74206d756c7469706c696572206170706c696564207481526020017f6f20616c6c206465706f736974732e204d696e20313130252c206d617820313581526020017f30252e000000000000000000000000000000000000000000000000000000000081525090509091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610611576005600254111561060957600080fd5b806002819055505b50565b6000606060058054905091506040805190810160405280601781526020017f546865206e756d626572206f66206465706f736974732e00000000000000000081525090509091565b6000806060600073ffffffffffffffffffffffffffffffffffffffff16600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107e357600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549150606060405190810160405280602e81526020017f55736572732073746174733a20746f74616c206465706f736974732c2070617981526020017f6f7574732072656365697665642e00000000000000000000000000000000000081525090505b9193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561088057806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108f957606e8110806108e75750609681115b156108f157600080fd5b806003819055505b50565b600060606002549150608060405190810160405280605481526020017f546865206665652070657263656e74616765206170706c69656420746f20616c81526020017f6c206465706f736974732e2049742063616e206368616e676520746f2073706581526020017f6564207061796f75747320286d6178203525292e00000000000000000000000081525090509091565b60008060006060600580549050851015610ad0576005858154811015156109b157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935066038d7ea4c680006005868154811015156109fc57fe5b906000526020600020906004020160020154811515610a1757fe5b049250600585815481101515610a2957fe5b906000526020600020906004020160030160009054906101000a900460ff169150608060405190810160405280604481526020017f456e74727920696e666f3a207573657220616464726573732c2065787065637481526020017f6564207061796f757420696e2046696e6e6579732c207061796f75742073746181526020017f7475732e0000000000000000000000000000000000000000000000000000000081525090505b9193509193565b6000806000806000670de0b6b3a76400009450670de0b6b3a7640000341115610b46573373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000034039081150290604051600060405180830381858888f1935050505050670de0b6b3a764000094505b600073ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cef5733600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b60056080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200160646003548902811515610d2f57fe5b048152602001600015158152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550505050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600081548092919060010191905055506006600160058054905003908060018154018082558091505090600182039060005260206000200160009091929091909150555060646002546064038602811515610e7e57fe5b04600160008282540192505081905550600160068054905011610ea2576000610eb1565b610eb06006805490506110ea565b5b93506005600685815481101515610ec457fe5b9060005260206000200154815481101515610edb57fe5b906000526020600020906004020192508260020154600154111561106457826002015491508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050505060018360030160006101000a81548160ff021916908315150217905550600460008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600081548092919060010191905055508160016000828254039250508190555060016006805490500384101561104d57600660016006805490500381548110151561102457fe5b906000526020600020015460068581548110151561103e57fe5b90600052602060002001819055505b60068054809190600190036110629190611150565b505b6001543073ffffffffffffffffffffffffffffffffffffffff163103905060008111156110e3576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050505b5050505050565b6000806000808460647f028f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f0281151561111e57fe5b049250600143039150814060019004905084838281151561113b57fe5b0481151561114557fe5b069350505050919050565b81548183558181111561117757818360005260206000209182019101611176919061117c565b5b505050565b61119e91905b8082111561119a576000816000905550600101611182565b5090565b905600a165627a7a723058203ecf346f45697183a29c5561e101f2d83adf857e0a1c3d2314ae157aac334b470029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x6a1db1bf", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6a1db1bf", "name": "changeFee(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "1276:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 18275168180}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/lucky_doubler.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/blackjack.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 33595758438}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/blackjack.sol", "./repositories/smartbugs-curated/blackjack.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/crypto_roulette.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 3446841955, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405267016345785d8a000060025534801561001c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007561007a640100000000026401000000009004565b6100c5565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156100b857fe5b060160ff16600081905550565b6104db806100d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063382cf0a61461007a57806341c0e1b5146100ee5780636898f82b146101055780639c675eaa14610125578063c53391321461017c578063cfd8a175146101a7575b005b34801561008657600080fd5b506100a5600480360381019080803590602001909291905050506101d2565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100fa57600080fd5b50610103610225565b005b610123600480360381019080803590602001909291905050506102a8565b005b34801561013157600080fd5b5061013a610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b50610191610458565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc61045e565b6040518082815260200191505060405180910390f35b6004818154811015156101e157fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102885750620151806001540142115b156102a6573373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060025434101580156102bd5750600a8211155b15156102c857600080fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550600481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015550505060005482141561041f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b505b610427610464565b426001819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156104a257fe5b060160ff166000819055505600a165627a7a7230582011c6539d1b827009de0e51cc07e8c968a842f98e45b392418c35bfa39333fdeb0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x41c0e1b5", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x41c0e1b5", "name": "kill()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "653:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 3001490592, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405267016345785d8a000060025534801561001c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007561007a640100000000026401000000009004565b6100c5565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156100b857fe5b060160ff16600081905550565b6104db806100d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063382cf0a61461007a57806341c0e1b5146100ee5780636898f82b146101055780639c675eaa14610125578063c53391321461017c578063cfd8a175146101a7575b005b34801561008657600080fd5b506100a5600480360381019080803590602001909291905050506101d2565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100fa57600080fd5b50610103610225565b005b610123600480360381019080803590602001909291905050506102a8565b005b34801561013157600080fd5b5061013a610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b50610191610458565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc61045e565b6040518082815260200191505060405180910390f35b6004818154811015156101e157fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156102885750620151806001540142115b156102a6573373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600060025434101580156102bd5750600a8211155b15156102c857600080fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010181905550600481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015550505060005482141561041f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b505b610427610464565b426001819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b600160144260014303406040518083815260200182600019166000191681526020019250505060405180910390206001900460ff168115156104a257fe5b060160ff166000819055505600a165627a7a7230582011c6539d1b827009de0e51cc07e8c968a842f98e45b392418c35bfa39333fdeb0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x382cf0a6", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x382cf0a6", "name": "gamesPlayed(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "480:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 11895690680}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/crypto_roulette.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/dos_address.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 1796498775}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/dos_address.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/dos_number.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 1789141655}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/dos_number.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/dos_simple.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 1119528055}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/dos_simple.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/ERC20.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 13815771103}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/ERC20.sol", "./repositories/smartbugs-curated/ERC20.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/etheraffle.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 9115853548}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/etheraffle.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/etherpot_lotto.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 7106783628}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/etherpot_lotto.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/etherstore.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 3239035606, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052670de0b6b3a764000060005534801561001c57600080fd5b506103b08061002c6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631031ec3114610072578063155dd5ee146100c957806327e235e3146100f65780637ddfe78d1461014d578063e2c41dbc14610178575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610182565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b506100f46004803603810190808035906020019092919050505061019a565b005b34801561010257600080fd5b50610137600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610317565b6040518082815260200191505060405180910390f35b34801561015957600080fd5b5061016261032f565b6040518082815260200191505060405180910390f35b610180610335565b005b60016020528060005260406000206000915090505481565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156101e857600080fd5b60005481111515156101f957600080fd5b62093a80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401421015151561024c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af192505050151561028357600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60026020528060005260406000206000915090505481565b60005481565b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820d24d77e2f347bd4fa26bf7e8e00351283b369ab30c264b49c87d6b4d6bf8ce010029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x155dd5ee", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x155dd5ee", "name": "withdrawFunds(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "583:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}], "meta": {"mythril_execution_info": {"analysis_duration": 24042702675}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/etherstore.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/ether_lotto.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 2190363407, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024e806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba2363a1461005c57806376cdb03b1461008757806393e84cd9146100de575b600080fd5b34801561006857600080fd5b506100716100e8565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c6100ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e6610113565b005b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a3414151561012157fe5b346001600082825401925050819055506002426040518082815260200191505060405180910390206001900481151561015657fe5b069050600081141561021f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156101ca573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610215573d6000803e3d6000fd5b5060006001819055505b505600a165627a7a72305820add8acf340d5e00f7b1d26c447ad06bec4b7d2917fb98a5cf1906217fcdaca940029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x93e84cd9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x93e84cd9", "name": "play()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xa"}]}]}, "locations": [{"sourceMap": "354:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 1490727186, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2002", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024e806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba2363a1461005c57806376cdb03b1461008757806393e84cd9146100de575b600080fd5b34801561006857600080fd5b506100716100e8565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c6100ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e6610113565b005b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a3414151561012157fe5b346001600082825401925050819055506002426040518082815260200191505060405180910390206001900481151561015657fe5b069050600081141561021f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156101ca573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610215573d6000803e3d6000fd5b5060006001819055505b505600a165627a7a72305820add8acf340d5e00f7b1d26c447ad06bec4b7d2917fb98a5cf1906217fcdaca940029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x93e84cd9", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x93e84cd9", "name": "play()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "288:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 2583765984}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/ether_lotto.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/eth_tx_order_dependence_minimal.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 7215133190}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/eth_tx_order_dependence_minimal.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/FibonacciBalance.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The contract delegates execution to another contract with a user-supplied address.", "tail": "The smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf."}, "extra": {"discoveryTime": 3642361879, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x400000000000008", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260036002556040516020806103fb83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103808061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100e457806320d786b51461013b5780633ccfd60b14610166578063bbe1d75b1461017d578063be9a6555146101a8575b34801561007957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505015156100e257600080fd5b005b3480156100f057600080fd5b506100f96101d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b506101506101f8565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101fe565b005b34801561018957600080fd5b50610192610348565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd61034e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505015156102f357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b50565b60015481565b600254815600a165627a7a7230582053a64078675ee9902f3556c003386212d265c70c7d1cd2aa78e7e9a5af5014220029dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "212:1:4"}], "severity": "High", "swcID": "SWC-112", "swcTitle": "Delegatecall to Untrusted Callee"}, {"description": {"head": "The contract delegates execution to another contract with a user-supplied address.", "tail": "The smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf."}, "extra": {"discoveryTime": 7623383522, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x40000000021", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260036002556040516020806103fb83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103808061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100e457806320d786b51461013b5780633ccfd60b14610166578063bbe1d75b1461017d578063be9a6555146101a8575b34801561007957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505015156100e257600080fd5b005b3480156100f057600080fd5b506100f96101d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b506101506101f8565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101fe565b005b34801561018957600080fd5b50610192610348565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd61034e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505015156102f357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b50565b60015481565b600254815600a165627a7a7230582053a64078675ee9902f3556c003386212d265c70c7d1cd2aa78e7e9a5af5014220029dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ccfd60b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "740:1:4"}], "severity": "High", "swcID": "SWC-112", "swcTitle": "Delegatecall to Untrusted Callee"}, {"description": {"head": "Multiple calls are executed in the same transaction.", "tail": "This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\\u2019re part of your own codebase)."}, "extra": {"discoveryTime": 6154182672, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x40000002", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260036002556040516020806103fb83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103808061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100e457806320d786b51461013b5780633ccfd60b14610166578063bbe1d75b1461017d578063be9a6555146101a8575b34801561007957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505015156100e257600080fd5b005b3480156100f057600080fd5b506100f96101d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b506101506101f8565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101fe565b005b34801561018957600080fd5b50610192610348565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd61034e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505015156102f357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b50565b60015481565b600254815600a165627a7a7230582053a64078675ee9902f3556c003386212d265c70c7d1cd2aa78e7e9a5af5014220029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ccfd60b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "815:1:4"}], "severity": "Low", "swcID": "SWC-113", "swcTitle": "DoS with Failed Call"}, {"description": {"head": "Read of persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 8369972705, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260036002556040516020806103fb83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103808061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100e457806320d786b51461013b5780633ccfd60b14610166578063bbe1d75b1461017d578063be9a6555146101a8575b34801561007957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505015156100e257600080fd5b005b3480156100f057600080fd5b506100f96101d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b506101506101f8565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101fe565b005b34801561018957600080fd5b50610192610348565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd61034e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505015156102f357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b50565b60015481565b600254815600a165627a7a7230582053a64078675ee9902f3556c003386212d265c70c7d1cd2aa78e7e9a5af5014220029dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ccfd60b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "793:1:4"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Write to persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 8388862609, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405260036002556040516020806103fb83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103808061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100e457806320d786b51461013b5780633ccfd60b14610166578063bbe1d75b1461017d578063be9a6555146101a8575b34801561007957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505015156100e257600080fd5b005b3480156100f057600080fd5b506100f96101d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b506101506101f8565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101fe565b005b34801561018957600080fd5b50610192610348565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b506101bd61034e565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505015156102f357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b50565b60015481565b600254815600a165627a7a7230582053a64078675ee9902f3556c003386212d265c70c7d1cd2aa78e7e9a5af5014220029dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ccfd60b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "815:1:4"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}], "meta": {"mythril_execution_info": {"analysis_duration": 17032323837}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/FibonacciBalance.sol", "./repositories/smartbugs-curated/FibonacciBalance.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/FindThisHash.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 4409082651}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/FindThisHash.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/governmental_survey.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 4760509967, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610220806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806352fba25c14610046575b600080fd5b34801561005257600080fd5b50610091600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610093565b005b806000111580156100a557506103ff81105b15610173573073ffffffffffffffffffffffffffffffffffffffff166352fba25c6107d05a0384600185016040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600088803b15801561015557600080fd5b5087f1158015610169573d6000803e3d6000fd5b50505050506101f0565b8173ffffffffffffffffffffffffffffffffffffffff166351294de76040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b505050505b50505600a165627a7a723058205b265e8f1fc0f378caafa80d0b256689a1cff62b7b9f1879835d2869e462fcb40029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x52fba25c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x52fba25c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80", "name": "attack(address,uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "474:1:4"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}], "meta": {"mythril_execution_info": {"analysis_duration": 22690479040}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/governmental_survey.sol", "./repositories/smartbugs-curated/governmental_survey.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/guess_the_random_number.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 23435271024, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x318007c400040002", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2040000002040001", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052670de0b6b3a76400003414151561001a57600080fd5b600143034042604051808360001916600019168152602001828152602001925050506040518091039020600190046000806101000a81548160ff021916908360ff160217905550610175806100706000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba4c16b14610051578063b2fa1c9e14610074575b600080fd5b610072600480360381019080803560ff1690602001909291905050506100a3565b005b34801561008057600080fd5b50610089610128565b604051808215151515815260200191505060405180910390f35b670de0b6b3a7640000341415156100b957600080fd5b6000809054906101000a900460ff1660ff168160ff161415610125573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050158015610123573d6000803e3d6000fd5b505b50565b6000803073ffffffffffffffffffffffffffffffffffffffff1631149050905600a165627a7a723058205c3423768b2603c6269341ef086bd3f50863aba58bf3e0bdde3ef840c2a9ed770029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x4ba4c16b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x4ba4c16b", "name": "guess(uint8)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x4ba4c16b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b80", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x4ba4c16b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b80", "name": "guess(uint8)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640000"}]}]}, "locations": [{"sourceMap": "269:1:2"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}], "meta": {"mythril_execution_info": {"analysis_duration": 23474310398}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/guess_the_random_number.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/BECToken.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 46857389688}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol", "./repositories/smartbugs-curated/BECToken.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/incorrect_constructor_name1.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 3246851921}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/incorrect_constructor_name1.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/mapping_write.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 1884450912, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610310806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ab06ee5146100675780633ccfd60b1461009e5780638da5cb5b146100b55780639507d39a1461010c575b600080fd5b34801561007357600080fd5b5061009c600480360381019080803590602001909291908035906020019092919050505061014d565b005b3480156100aa57600080fd5b506100b3610190565b005b3480156100c157600080fd5b506100ca61024b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061013760048036038101908080359060200190929190505050610270565b6040518082815260200191505060405180910390f35b8160018054905011151561016e576001820160018161016c9190610293565b505b8060018381548110151561017e57fe5b90600052602060002001819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101eb57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610248573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018281548110151561028157fe5b90600052602060002001549050919050565b8154818355818111156102ba578183600052602060002091820191016102b991906102bf565b5b505050565b6102e191905b808211156102dd5760008160009055506001016102c5565b5090565b905600a165627a7a723058208d3dcf1a3ae00e13ac8dcbe1ac03b855d99399644a1e3939da897067bbb84ab80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x9507d39a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x9507d39a", "name": "get(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "640:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code."}, "extra": {"discoveryTime": 3003748178, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610310806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ab06ee5146100675780633ccfd60b1461009e5780638da5cb5b146100b55780639507d39a1461010c575b600080fd5b34801561007357600080fd5b5061009c600480360381019080803590602001909291908035906020019092919050505061014d565b005b3480156100aa57600080fd5b506100b3610190565b005b3480156100c157600080fd5b506100ca61024b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061013760048036038101908080359060200190929190505050610270565b6040518082815260200191505060405180910390f35b8160018054905011151561016e576001820160018161016c9190610293565b505b8060018381548110151561017e57fe5b90600052602060002001819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101eb57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610248573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018281548110151561028157fe5b90600052602060002001549050919050565b8154818355818111156102ba578183600052602060002091820191016102b991906102bf565b5b505050565b6102e191905b808211156102dd5760008160009055506001016102c5565b5090565b905600a165627a7a723058208d3dcf1a3ae00e13ac8dcbe1ac03b855d99399644a1e3939da897067bbb84ab80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x1ab06ee5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x1ab06ee5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "name": "set(uint256,uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "381:1:2"}], "severity": "Low", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 3051893473}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/mapping_write.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/reentrancy_dao.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 18823353052, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10000000000000000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b506101dc806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063853828b614610051578063d0e30db014610068575b600080fd5b34801561005d57600080fd5b50610066610072565b005b610070610152565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600082111561014e57816001600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af192505050905080151561010957600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550346001600082825401925050819055505600a165627a7a723058202ed6616dcaf6ba4850e8317bb36c81dc482238b20e342c1c080d2768330328ba0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x853828b6", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x853828b6", "name": "withdrawAll()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "247:1:2"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Write to persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 21877180814, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x40000000000000000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b506101dc806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063853828b614610051578063d0e30db014610068575b600080fd5b34801561005d57600080fd5b50610066610072565b005b610070610152565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600082111561014e57816001600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af192505050905080151561010957600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550346001600082825401925050819055505600a165627a7a723058202ed6616dcaf6ba4850e8317bb36c81dc482238b20e342c1c080d2768330328ba0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x853828b6", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x853828b6", "name": "withdrawAll()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "332:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}], "meta": {"mythril_execution_info": {"analysis_duration": 21884296656}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/reentrancy_dao.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/reentrancy_simple.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 3360306739, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610251806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635fd8c7101461005c578063c0e317fb14610073578063f8b2cb4f1461007d575b600080fd5b34801561006857600080fd5b506100716100d4565b005b61007b61018f565b005b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101dd565b6040518082815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405160006040518083038185875af192505050151561014957600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a723058207a2df03d832baceb1a8d70540c38015fc7f1d365131a4e979c6c38638dc013150029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x5fd8c710", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x5fd8c710", "name": "withdrawBalance()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "314:1:2"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Write to persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 3891987562, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50610251806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635fd8c7101461005c578063c0e317fb14610073578063f8b2cb4f1461007d575b600080fd5b34801561006857600080fd5b506100716100d4565b005b61007b61018f565b005b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101dd565b6040518082815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405160006040518083038185875af192505050151561014957600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a723058207a2df03d832baceb1a8d70540c38015fc7f1d365131a4e979c6c38638dc013150029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x5fd8c710", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x5fd8c710", "name": "withdrawBalance()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "396:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}], "meta": {"mythril_execution_info": {"analysis_duration": 17389734983}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/reentrancy_simple.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/roulette.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 1009002208, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0xc000000000001f", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052610142806100136000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806358d02b09146100e5575b678ac7230489e800003414151561005757600080fd5b600054421415151561006857600080fd5b426000819055506000600f4281151561007d57fe5b0614156100e3573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b505b005b3480156100f157600080fd5b506100fa610110565b6040518082815260200191505060405180910390f35b600054815600a165627a7a72305820c4dac8156ff40481ce91754f83e77853cb6747b03557df02709c314a6e57cd560029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x8ac7230489e80000"}]}]}, "locations": [{"sourceMap": "99:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 1529401540, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x110", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052610142806100136000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806358d02b09146100e5575b678ac7230489e800003414151561005757600080fd5b600054421415151561006857600080fd5b426000819055506000600f4281151561007d57fe5b0614156100e3573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b505b005b3480156100f157600080fd5b506100fa610110565b6040518082815260200191505060405180910390f35b600054815600a165627a7a72305820c4dac8156ff40481ce91754f83e77853cb6747b03557df02709c314a6e57cd560029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x8ac7230489e80000"}]}]}, "locations": [{"sourceMap": "132:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 41940931558, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x8400000503", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x40040000000000000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052610142806100136000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806358d02b09146100e5575b678ac7230489e800003414151561005757600080fd5b600054421415151561006857600080fd5b426000819055506000600f4281151561007d57fe5b0614156100e3573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b505b005b3480156100f157600080fd5b506100fa610110565b6040518082815260200191505060405180910390f35b600054815600a165627a7a72305820c4dac8156ff40481ce91754f83e77853cb6747b03557df02709c314a6e57cd560029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x00000000", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x8ac7230489e80000"}]}]}, "locations": [{"sourceMap": "203:1:2"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}], "meta": {"mythril_execution_info": {"analysis_duration": 463506830454}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/roulette.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/rubixi.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 7381107807, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600080556000600155600a60025561012c600355600060045534801561002957600080fd5b50611046806100396000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309dfdc71146100f2578063253459e3146101895780634229616d146101b457806357d4021b146101e157806367f809e91461020c578063686f2c90146102235780636fbaaa1e1461023a5780638a5fb3ca146102d15780639dbc4f9b14610368578063a26dbf26146103dc578063a6f9dae114610407578063b40229501461044a578063ced9267014610477578063d11f13df146104a4578063fae14192146104cf575b3480156100e757600080fd5b506100f06104fc565b005b3480156100fe57600080fd5b50610107610557565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561019557600080fd5b5061019e610594565b6040518082815260200191505060405180910390f35b3480156101c057600080fd5b506101df600480360381019080803590602001909291905050506105b1565b005b3480156101ed57600080fd5b506101f66106a4565b6040518082815260200191505060405180910390f35b34801561021857600080fd5b506102216106e1565b005b34801561022f57600080fd5b50610238610724565b005b34801561024657600080fd5b5061024f6107ef565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561029557808201518184015260208101905061027a565b50505050905090810190601f1680156102c25780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156102dd57600080fd5b506102e661081b565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561032c578082015181840152602081019050610311565b50505050905090810190601f1680156103595780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561037457600080fd5b5061039360048036038101908080359060200190929190505050610844565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156103e857600080fd5b506103f16108d4565b6040518082815260200191505060405180910390f35b34801561041357600080fd5b50610448600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e1565b005b34801561045657600080fd5b506104756004803603810190808035906020019092919050505061097c565b005b34801561048357600080fd5b506104a260048036038101908080359060200190929190505050610a6e565b005b3480156104b057600080fd5b506104b9610ae9565b6040518082815260200191505060405180910390f35b3480156104db57600080fd5b506104fa60048036038101908080359060200190929190505050610afa565b005b6000670de0b6b3a76400003410156105235734600160008282540192505081905550610554565b60025490506802b5e3af16b18800003410151561054a5760028181151561054657fe5b0490505b61055381610b69565b5b50565b60006060670de0b6b3a764000060005481151561057057fe5b0491506101006040519081016040528060ca8152602001610e3260ca913990509091565b6000670de0b6b3a76400006001548115156105ab57fe5b04905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106a0576000600154148061061a5750606482115b1561062457600080fd5b81606460015481151561063357fe5b04029050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050806001600082825403925050819055505b5050565b6000670de0b6b3a764000060066004548154811015156106c057fe5b9060005260206000209060020201600101548115156106db57fe5b04905090565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107ed576000600154141561078a57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050505060006001819055505b565b6000606060035491506101406040519081016040528061011f8152602001610efc61011f913990509091565b60006060600254915060c06040519081016040528060848152602001610dae6084913990509091565b600080600680549050831115156108cf5760068381548110151561086457fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150670de0b6b3a76400006006848154811015156108b057fe5b9060005260206000209060020201600101548115156108cb57fe5b0490505b915091565b6000600680549050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156109795780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a6b57670de0b6b3a7640000810290506001548111156109f2576109f1610724565b5b60006001541415610a0257600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050806001600082825403925050819055505b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ae65761012c811180610ad45750607881105b15610ade57600080fd5b806003819055505b50565b600060045460068054905003905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b6657600a811115610b5e57600080fd5b806002819055505b50565b6000600660408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160646003543402811515610ba457fe5b048152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050600a6006805490501415610c425760c8600381905550610c5a565b60196006805490501415610c595760966003819055505b5b6064826064033402811515610c6b57fe5b0460008082825401925050819055506064823402811515610c8857fe5b046001600082825401925050819055505b6006600454815481101515610caa57fe5b9060005260206000209060020201600101546000541115610da9576006600454815481101515610cd657fe5b90600052602060002090600202016001015490506006600454815481101515610cfb57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506006600454815481101515610d7357fe5b90600052602060002090600202016001015460008082825403925050819055506001600460008282540192505081905550610c99565b5050560053686f776e20696e202520666f726d2e204665652069732068616c766564283530252920666f7220616d6f756e747320657175616c206f722067726561746572207468616e203530206574686572732e2028466565206d6179206368616e67652c206275742069732063617070656420746f2061206d6178696d756d206f662031302529416c6c2062616c616e63652076616c75657320617265206d6561737572656420696e204574686572732c206e6f746520746861742064756520746f206e6f20646563696d616c20706c6163696e672c2074686573652076616c7565732073686f7720757020617320696e746567657273206f6e6c792c2077697468696e2074686520636f6e747261637420697473656c6620796f752077696c6c206765742074686520657861637420646563696d616c2076616c756520796f752061726520737570706f73656420746f54686973206d756c7469706c696572206170706c69657320746f20796f7520617320736f6f6e206173207472616e73616374696f6e2069732072656365697665642c206d6179206265206c6f776572656420746f2068617374656e207061796f757473206f7220696e63726561736564206966207061796f75747320617265206661737420656e6f7567682e2044756520746f206e6f20666c6f6174206f7220646563696d616c732c206d756c7469706c696572206973207831303020666f722061206672616374696f6e616c206d756c7469706c69657220652e672e203235302069732061637475616c6c79206120322e3578206d756c7469706c6965722e20436170706564206174203378206d617820616e6420312e3278206d696e2ea165627a7a723058203a1359eb3ff26825f834cbae5c84a8ffb93678ba51f5dd95534f8eb4cea36d900029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x57d4021b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x57d4021b", "name": "nextPayoutWhenPyramidBalanceTotalsApproximately()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "1727:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 10417357922}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/rubixi.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/send_loop.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "sourceType": "", "sourceFormat": "", "sourceList": [], "meta": {"logs": [{"level": "error", "hidden": true, "msg": "Solc experienced a fatal error.\\n\\n./repositories/smartbugs-curated/send_loop.sol:8:1: SyntaxError: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\\npragma solidity 0.4.24;\\n^---------------------^\\n\\nSolidityVersionMismatch: Try adding the option \\"--solv 0.4.24\\"\\n"}]}}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/short_address_example.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 4019853830}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/short_address_example.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/simple_dao.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 28222196578, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x50a4212000880000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061031a806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a95146100665780632e1a7d4d1461009c57806359f1286d146100c9578063d5d44d8014610120575b600080fd5b61009a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610177565b005b3480156100a857600080fd5b506100c7600480360381019080803590602001909291905050506101c6565b005b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028e565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d6565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561028a573373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060205280600052604060002060009150905054815600a165627a7a723058203c150fb28ce39f3a8e20d833301e766ad0eb6ee017552045dac9f6fb1cb0beaf0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x00362a95000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x00362a95000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "donate(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "567:1:2"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}, {"description": {"head": "A call to a user-supplied address is executed.", "tail": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."}, "extra": {"discoveryTime": 5424189329, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061031a806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a95146100665780632e1a7d4d1461009c57806359f1286d146100c9578063d5d44d8014610120575b600080fd5b61009a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610177565b005b3480156100a857600080fd5b506100c7600480360381019080803590602001909291905050506101c6565b005b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028e565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d6565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561028a573373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060205280600052604060002060009150905054815600a165627a7a723058203c150fb28ce39f3a8e20d833301e766ad0eb6ee017552045dac9f6fb1cb0beaf0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "567:1:2"}], "severity": "Low", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Read of persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 5926854610, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061031a806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a95146100665780632e1a7d4d1461009c57806359f1286d146100c9578063d5d44d8014610120575b600080fd5b61009a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610177565b005b3480156100a857600080fd5b506100c7600480360381019080803590602001909291905050506101c6565b005b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028e565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d6565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561028a573373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060205280600052604060002060009150905054815600a165627a7a723058203c150fb28ce39f3a8e20d833301e766ad0eb6ee017552045dac9f6fb1cb0beaf0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "641:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "Write to persistent state following external call", "tail": "The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."}, "extra": {"discoveryTime": 5939519405, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061031a806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a95146100665780632e1a7d4d1461009c57806359f1286d146100c9578063d5d44d8014610120575b600080fd5b61009a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610177565b005b3480156100a857600080fd5b506100c7600480360381019080803590602001909291905050506101c6565b005b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028e565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d6565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561028a573373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060205280600052604060002060009150905054815600a165627a7a723058203c150fb28ce39f3a8e20d833301e766ad0eb6ee017552045dac9f6fb1cb0beaf0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "648:1:2"}], "severity": "Medium", "swcID": "SWC-107", "swcTitle": "Reentrancy"}, {"description": {"head": "The return value of a message call is not checked.", "tail": "External calls return a boolean value. If the callee halts with an exception, \'false\' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."}, "extra": {"discoveryTime": 34144188404, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061031a806100206000396000f300608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062362a95146100665780632e1a7d4d1461009c57806359f1286d146100c9578063d5d44d8014610120575b600080fd5b61009a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610177565b005b3480156100a857600080fd5b506100c7600480360381019080803590602001909291905050506101c6565b005b3480156100d557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028e565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d6565b6040518082815260200191505060405180910390f35b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561028a573373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060205280600052604060002060009150905054815600a165627a7a723058203c150fb28ce39f3a8e20d833301e766ad0eb6ee017552045dac9f6fb1cb0beaf0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "567:1:2"}], "severity": "Medium", "swcID": "SWC-104", "swcTitle": "Unchecked Call Return Value"}], "meta": {"mythril_execution_info": {"analysis_duration": 34177609921}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/simple_dao.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/simple_suicide.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Any sender can cause the contract to self-destruct.", "tail": "Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access."}, "extra": {"discoveryTime": 647058486, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052348015600f57600080fd5b50609d8061001e6000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a56a3b5a146044575b600080fd5b348015604f57600080fd5b5060566058565b005b3373ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a723058205f754ad8550a6eea2b5659205f22d50b0a720a514ed33c29fd79dfb37dddd9840029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa56a3b5a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa56a3b5a", "name": "sudicideAnyone()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "112:1:2"}], "severity": "High", "swcID": "SWC-106", "swcTitle": "Unprotected SELFDESTRUCT Instruction"}], "meta": {"mythril_execution_info": {"analysis_duration": 652546644}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/simple_suicide.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/smart_billions.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 75433981418, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6080604052600060075560016008556000600955692a5a058fc295ed000000600a556001600b556000600d556000600e556000600f5560006010556000601155674563918244f40000601255600060145534801561005c57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b5460056000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a6101000a81548161ffff021916908361ffff160217905550600c60009080600181540180825580915050906001820390600052602060002001600090919290919091505550600c60009080600181540180825580915050906001820390600052602060002001600090919290919091505550614abb806101c96000396000f30060806040526004361061029e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303f9c7931461035c57806306fdde03146103925780630751076d14610422578063095ea7b31461044f57806312c8052f1461049c57806313e4b51f146104b357806316d190e3146104e257806318160ddd1461050d57806323b872dd146105385780632406e9fa146105a557806326699576146105ef578063313ce5671461064357806331c2b6e61461066e57806337c43088146106c5578063380f3087146106f05780633de8d340146107315780633e43b6521461075c57806340c73d17146107b3578063413e90e7146107f65780634288d7591461082357806343146f361461087a578063501895ae1461089157806366ce3bd2146108d25780636b4868181461092957806370a082311461095457806370ccd928146109ab5780637227c7ce146109d6578063785ce7ca14610a01578063814b3fe014610a585780638da5cb5b14610a995780638eecddcf14610af0578063904d224814610b4757806393e84cd914610b9e57806395d89b4114610bbc5780639ce962ca14610c4c578063a367d99a14610c63578063a6f9dae114610c8e578063a9059cbb14610cd1578063b3470e9714610d1e578063bc85171814610d49578063be1eefbf14610d74578063bfba902914610d7e578063c27509cf14610da9578063c416436514610db3578063cd0a314b14610dde578063cd88333e14610e09578063d6d2500814610e36578063d9fa933514610e61578063dd62ed3e14610e78578063de46907114610eef578063de88a34214610f1a578063df12b94e14610f31578063df1ead8214610f5c578063e4cc98a514610f73578063e73cc2eb14610f9e578063e76ece0114610ff5575b60003411156102f157600160085411156102e2576102dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611022565b6102ec565b6102ea611823565b505b61035a565b600060085414801561034257506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156103515761035033611891565b5b610359611bd8565b5b005b610390600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611022565b005b34801561039e57600080fd5b506103a76124cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e75780820151818401526020810190506103cc565b50505050905090810190601f1680156104145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561042e57600080fd5b5061044d60048036038101908080359060200190929190505050612506565b005b34801561045b57600080fd5b5061049a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612569565b005b3480156104a857600080fd5b506104b1611bd8565b005b3480156104bf57600080fd5b506104c86126ea565b604051808215151515815260200191505060405180910390f35b3480156104ee57600080fd5b506104f76127af565b6040518082815260200191505060405180910390f35b34801561051957600080fd5b506105226127b5565b6040518082815260200191505060405180910390f35b34801561054457600080fd5b506105a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506127bb565b005b6105d9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a8c565b6040518082815260200191505060405180910390f35b61062d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612afb565b6040518082815260200191505060405180910390f35b34801561064f57600080fd5b50610658612e8a565b6040518082815260200191505060405180910390f35b34801561067a57600080fd5b50610683612e8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d157600080fd5b506106da612eb5565b6040518082815260200191505060405180910390f35b3480156106fc57600080fd5b5061071b60048036038101908080359060200190929190505050612ebb565b6040518082815260200191505060405180910390f35b34801561073d57600080fd5b50610746612fa3565b6040518082815260200191505060405180910390f35b34801561076857600080fd5b5061079d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613007565b6040518082815260200191505060405180910390f35b3480156107bf57600080fd5b506107f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613091565b005b34801561080257600080fd5b5061082160048036038101908080359060200190929190505050613179565b005b34801561082f57600080fd5b50610864600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131ac565b6040518082815260200191505060405180910390f35b34801561088657600080fd5b5061088f6133d4565b005b34801561089d57600080fd5b506108bc60048036038101908080359060200190929190505050613441565b6040518082815260200191505060405180910390f35b3480156108de57600080fd5b50610913600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613464565b6040518082815260200191505060405180910390f35b34801561093557600080fd5b5061093e6134f2565b6040518082815260200191505060405180910390f35b34801561096057600080fd5b50610995600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134f8565b6040518082815260200191505060405180910390f35b3480156109b757600080fd5b506109c0613541565b6040518082815260200191505060405180910390f35b3480156109e257600080fd5b506109eb61354e565b6040518082815260200191505060405180910390f35b348015610a0d57600080fd5b50610a42600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613554565b6040518082815260200191505060405180910390f35b348015610a6457600080fd5b50610a83600480360381019080803590602001909291905050506135b6565b6040518082815260200191505060405180910390f35b348015610aa557600080fd5b50610aae6135d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610afc57600080fd5b50610b31600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135ff565b6040518082815260200191505060405180910390f35b348015610b5357600080fd5b50610b88600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613661565b6040518082815260200191505060405180910390f35b610ba6611823565b6040518082815260200191505060405180910390f35b348015610bc857600080fd5b50610bd16136c3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c11578082015181840152602081019050610bf6565b50505050905090810190601f168015610c3e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c5857600080fd5b50610c616136fc565b005b348015610c6f57600080fd5b50610c78613920565b6040518082815260200191505060405180910390f35b348015610c9a57600080fd5b50610ccf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613926565b005b348015610cdd57600080fd5b50610d1c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613a0e565b005b348015610d2a57600080fd5b50610d33613d8e565b6040518082815260200191505060405180910390f35b348015610d5557600080fd5b50610d5e613d9f565b6040518082815260200191505060405180910390f35b610d7c613da5565b005b348015610d8a57600080fd5b50610d93613daf565b6040518082815260200191505060405180910390f35b610db1613db5565b005b348015610dbf57600080fd5b50610dc8613de2565b6040518082815260200191505060405180910390f35b348015610dea57600080fd5b50610df3613de8565b6040518082815260200191505060405180910390f35b348015610e1557600080fd5b50610e3460048036038101908080359060200190929190505050613dee565b005b348015610e4257600080fd5b50610e4b613f47565b6040518082815260200191505060405180910390f35b348015610e6d57600080fd5b50610e76613f4d565b005b348015610e8457600080fd5b50610ed9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614021565b6040518082815260200191505060405180910390f35b348015610efb57600080fd5b50610f046140a8565b6040518082815260200191505060405180910390f35b348015610f2657600080fd5b50610f2f6140ae565b005b348015610f3d57600080fd5b50610f466140d2565b6040518082815260200191505060405180910390f35b348015610f6857600080fd5b50610f716140d8565b005b348015610f7f57600080fd5b50610f88614308565b6040518082815260200191505060405180910390f35b348015610faa57600080fd5b50610fdf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061430e565b6040518082815260200191505060405180910390f35b34801561100157600080fd5b506110206004803603810190808035906020019092919050505061436c565b005b600080600080600160085411801561104257506005614000026008540143105b80156110515750600a54600954105b151561105c57600080fd5b349350600954600a54038411156110e557600954600a54039350600a5460098190555060006008819055503373ffffffffffffffffffffffffffffffffffffffff166108fc6110b486346143f990919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156110df573d6000803e3d6000fd5b506110f6565b836009600082825401925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061117e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b1561128a57600a8481151561118f57fe5b04600760008282540192505081905550600a848115156111ab57fe5b0460056000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555061145d565b600260646005860281151561129b57fe5b04026007600082825401925050819055506064600585028115156112bb57fe5b0460056000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506064600585028115156113a457fe5b04600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055505b600b54600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a6101000a81548161ffff021916908361ffff16021790555066038d7ea4c68000848115156114ce57fe5b04925067016345785d8a0000601085028115156114e757fe5b04915067016345785d8a0000600a850281151561150057fe5b04905082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508160036000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508060036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808284010160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a38473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f36a013c86c271c703c54dee591bc768e347954a0a9a1937dd17f5a29e9a8e645866040518082815260200191505060405180910390a35050505050565b600061188c3343604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040518091039020600190046000612afb565b905090565b6000806000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900461ffff1661ffff1692506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054148061193b5750600083145b156119a457600b54600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a6101000a81548161ffff021916908361ffff160217905550611bd2565b600b548314156119b357611bd2565b60005463ffffffff600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205402811515611a0557fe5b049150600090505b600b54831015611a4457600c83815481101515611a2657fe5b90600052602060002001548202810190508280600101935050611a0d565b63ffffffff81811515611a5357fe5b0490508060076000828254019250508190555080600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555082600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a6101000a81548161ffff021916908361ffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167fe1e87f40e4de2a6b68365d854f85940aad44d84933d399007702c6d340da445f8285604051808381526020018281526020019250505060405180910390a25b50505050565b611be06149f6565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020606060405190810160405290816000820160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505092506000836040015163ffffffff161415611e1a57606060405190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600163ffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055509050506124c8565b6000836000015177ffffffffffffffffffffffffffffffffffffffffffffffff161480611e5157506001836040015163ffffffff16145b15611e6357611e5e6136fc565b6124c8565b826040015163ffffffff1643111515611e7b57600080fd5b43614000600a02846040015163ffffffff160111151561201e573373ffffffffffffffffffffffffffffffffffffffff167f770d64c654906ebab085526dd881064f61f0e5990caa94c94167eb29bc4645c6846040015143604051808363ffffffff1681526020018281526020019250505060405180910390a2606060405190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600163ffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055509050506124c8565b600091506000905061010083604001510163ffffffff1643101561206457826040015163ffffffff16406001900462ffffff16905061205d8382614412565b9150612258565b6000600e5411156120ce57612082836040015163ffffffff166145f5565b905063010000008163ffffffff1614156120bc57826000015177ffffffffffffffffffffffffffffffffffffffffffffffff1691506120c9565b6120c68382614412565b91505b612257565b3373ffffffffffffffffffffffffffffffffffffffff167f770d64c654906ebab085526dd881064f61f0e5990caa94c94167eb29bc4645c6846040015143604051808363ffffffff1681526020018281526020019250505060405180910390a2606060405190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600163ffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055509050506124c8565b5b606060405190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600163ffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055509050506000821115612460573373ffffffffffffffffffffffffffffffffffffffff167e362509948ea59afac5c6fa93fea5327b624bc705a6574f4e9f26e9d8bd7ccc846020015163ffffffff168363ffffffff168560405180848152602001838152602001828152602001935050505060405180910390a2600d548211156124525781600d819055503373ffffffffffffffffffffffffffffffffffffffff167f955214d16f858518f04c701d01a6e2f5668548b6be3c6f2f0f8981f77f2cfc06836040518082815260200191505060405180910390a25b61245b8261468f565b6124c7565b3373ffffffffffffffffffffffffffffffffffffffff167f7375ed8230669ea9d64a9db629d7ce9501779604a67c95c0111377cf09f5b9b9846020015163ffffffff168363ffffffff16604051808381526020018281526020019250505060405180910390a25b5b505050565b6040805190810160405280601381526020017f536d61727442696c6c696f6e7320546f6b656e0000000000000000000000000081525081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561255f57fe5b8060128190555050565b600081141580156125f757506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15151561260057fe5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b6000806000806000600f54935060008414806127095750600a84014311155b1561271757600094506127a8565b61010043101561272a5760009250612732565b610100430392505b8284101561275257829150600a8281151561274957fe5b06820191508193505b600a600e54850381151561276257fe5b04905061276f84826148a5565b60136140008381151561277e57fe5b0681548110151561278b57fe5b9060005260206000200181905550600a8401600f81905550600194505b5050505090565b600d5481565b60005481565b60006060600481016000369050101515156127d257fe5b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061285a85611891565b61286384611891565b6128b583600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546149d890919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061294a83600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546143f990919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506129a083836143f990919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35050505050565b6000612af43343604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018281526020019250505060405180910390206001900483612afb565b9050919050565b6000806000612b08611bd8565b849150670de0b6b3a76400003411158015612b24575060125434105b1515612b2f57600080fd5b6000341115612e745760006008541415612b7957601434811515612b4f57fe5b04600c600b54815481101515612b6157fe5b90600052602060002001600082825401925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515612c8757606434811515612bbb57fe5b0490508060076000828254019250508190555080600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055505b600343016010541015612caa576003430160108190555034601181905550612ce6565b6012546011541115612cd45760106000815480929190600101919050555034601181905550612ce5565b346011600082825401925050819055505b5b6060604051908101604052803477ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff1663ffffffff16815260200160105463ffffffff16815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f063f4540040cf99a22f577ef321c170763020e6277e47275ed9b3d17ec14e13d8362ffffff166010543460405180848152602001838152602001828152602001935050505060405180910390a25b612e7c6126ea565b506010549250505092915050565b600081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61400081565b6000806000600e54148015612ed05750600083115b8015612ede57506140008311155b1515612ee957600080fd5b60138054905090506140008382011115612f1357614000601381612f0d9190614a3e565b50612f2c565b82601381818054905001915081612f2a9190614a3e565b505b5b601380549050811015612f66576001601382815481101515612f4b57fe5b90600052602060002001819055508080600101915050612f2d565b614000601380549050101515612f9557600a43811515612f8257fe5b064303600e81905550600e54600f819055505b601380549050915050919050565b60008060006008541115612fba5760009150613003565b614000600a02600e544303811515612fce57fe5b049050600b54811115612fe45760009150613003565b614000600a02600e544303811515612ff857fe5b06614000600a020391505b5090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156130ea57fe5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561312357fe5b61312c33611891565b61313581611891565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008090505b818110156131a75761318f6126ea565b151561319a576131a8565b808060010191505061317f565b5b5050565b60006131b66149f6565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020606060405190810160405290816000820160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505091506000826000015177ffffffffffffffffffffffffffffffffffffffffffffffff1614806132eb57506001826040015163ffffffff1611155b806132ff5750816040015163ffffffff1643105b8061331b5750614000600a02826040015163ffffffff16014310155b1561332957600092506133cd565b61010082604001510163ffffffff1643101561335f5761335882836040015163ffffffff164060019004614412565b92506133cd565b6000600e5411156133c85761337d826040015163ffffffff166145f5565b905063010000008163ffffffff1614156133b757816000015177ffffffffffffffffffffffffffffffffffffffffffffffff1692506133cd565b6133c18282614412565b92506133cd565b600092505b5050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561342d57fe5b600343016010819055506000601181905550565b60138181548110151561345057fe5b906000526020600020016000915090505481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b600e5481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000601380549050905090565b60105481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c9054906101000a900463ffffffff1663ffffffff169050919050565b600c818154811015156135c557fe5b906000526020600020016000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c9054906101000a900463ffffffff1663ffffffff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff169050919050565b6040805190810160405280600481526020017f504c41590000000000000000000000000000000000000000000000000000000081525081565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff161180156137e9575043600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c9054906101000a900463ffffffff1663ffffffff1611155b1561391d57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1690506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055508060076000828254039250508190555061391c8161468f565b5b50565b60085481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561397f57fe5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156139b857fe5b6139c133611891565b6139ca81611891565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b604060048101600036905010151515613a2357fe5b613a2c33611891565b613a7e82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546143f990919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415613c8557613b20600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611891565b613b948260036000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546149d890919063ffffffff16565b60036000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3613d89565b613c8e83611891565b613ce082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546149d890919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b505050565b6000613d9a6080612ebb565b905090565b600f5481565b613dad613f4d565b565b60125481565b613de0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611022565b565b600a5481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613e4757fe5b613e4f613f4d565b600081118015613e8c575080600754600a6009805402811515613e6e57fe5b0401013073ffffffffffffffffffffffffffffffffffffffff163110155b1515613e9757600080fd5b6002600a54811515613ea557fe5b04600954101515613ef6576101903073ffffffffffffffffffffffffffffffffffffffff1631811515613ed457fe5b048111158015613eea575043619d806014540111155b1515613ef557600080fd5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015613f3c573d6000803e3d6000fd5b504360148190555050565b60145481565b60006001600854118015613f6a5750600561400002600854014310155b15613f7c57600060088190555061401e565b6000600e54111561401d57614000600a02600e544303811515613f9b57fe5b0490506002600c8054905003811115613fdc57600c600090806001815401808255809150509060018203906000526020600020016000909192909190915055505b600b5481118015613fef57506000600854145b801561400457506001600c8054905003600b54105b1561401c57600b600081548092919060010191905055505b5b5b50565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60115481565b60006008541415156140bf57600080fd5b6140c833611891565b6140d06136fc565b565b60095481565b6000806008541415156140ea57600080fd5b6140f333611891565b66038d7ea4c68000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054029050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580600960008282540392505081905550600a6009820281151561424557fe5b04600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506143056136fc565b50565b600b5481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900461ffff1661ffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156143c557fe5b60016008541480156143d957506000600e54115b80156143e457508043105b15156143ef57600080fd5b8060088190555050565b600082821115151561440757fe5b818303905092915050565b600080600080856020015192508483189150600062f00000831662ffffff161461443d576000614440565b60015b6000620f0000841662ffffff161461445957600061445c565b60015b600061f000851662ffffff1614614474576000614477565b60015b6000610f00861662ffffff161461448f576000614492565b60015b600060f0871662ffffff16146144a95760006144ac565b60015b6000600f881662ffffff16146144c35760006144c6565b60015b010101010160ff16905060068162ffffff16141561450957626acfc0866000015177ffffffffffffffffffffffffffffffffffffffffffffffff160293506145ec565b60058162ffffff16141561454157614e20866000015177ffffffffffffffffffffffffffffffffffffffffffffffff160293506145ec565b60048162ffffff161415614579576101f4866000015177ffffffffffffffffffffffffffffffffffffffffffffffff160293506145ec565b60038162ffffff1614156145b0576019866000015177ffffffffffffffffffffffffffffffffffffffffffffffff160293506145ec565b60028162ffffff1614156145e7576003866000015177ffffffffffffffffffffffffffffffffffffffffffffffff160293506145ec565b600093505b50505092915050565b600080600080600a600e54860381151561460b57fe5b04925060136140008481151561461d57fe5b0681548110151561462a57fe5b9060005260206000200154915060f0829060020a90046140008481151561464d57fe5b041415156146615763010000009350614687565b600a600e54860381151561467157fe5b06905062ffffff81601802839060020a90041693505b505050919050565b60008060023073ffffffffffffffffffffffffffffffffffffffff16318115156146b557fe5b0491508282101515614725573373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015614707573d6000803e3d6000fd5b5066038d7ea4c680008311156147205761471f613f4d565b5b6148a0565b81830390508060076000828254019250508190555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506202a3004301600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c6101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561489e573d6000803e3d6000fd5b505b505050565b600060f06140008363ffffffff168115156148bc57fe5b049060020a0260d862ffffff6009860163ffffffff164060019004169060020a0260c062ffffff6008870163ffffffff164060019004169060020a0260a862ffffff6007880163ffffffff164060019004169060020a02609062ffffff6006890163ffffffff164060019004169060020a02607862ffffff60058a0163ffffffff164060019004169060020a02606062ffffff60048b0163ffffffff164060019004169060020a02604862ffffff60038c0163ffffffff164060019004169060020a02603062ffffff60028d0163ffffffff164060019004169060020a02601862ffffff60018e0163ffffffff164060019004169060020a0262ffffff8d63ffffffff1640600190041617171717171717171717905092915050565b60008082840190508381101515156149ec57fe5b8091505092915050565b606060405190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff1681525090565b815481835581811115614a6557818360005260206000209182019101614a649190614a6a565b5b505050565b614a8c91905b80821115614a88576000816000905550600101614a70565b5090565b905600a165627a7a72305820af8e01f4922323911316508c65f41dbc68b1d02d365bd188e4d7b8677815a8bb0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x0751076d", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x0751076d", "name": "setBetMax(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "9566:1:4"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 87101537466}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/smart_billions.sol", "./repositories/smartbugs-curated/smart_billions.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/spank_chain_payment.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 15556300163, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x38b025b2", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x38b025b2", "name": "parseInt16Char(string)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "2330:1:8"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 230066963911}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/spank_chain_payment.sol", "./repositories/smartbugs-curated/spank_chain_payment.sol", "./repositories/smartbugs-curated/spank_chain_payment.sol", "./repositories/smartbugs-curated/spank_chain_payment.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/timed_crowdsale.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 471153021}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/timed_crowdsale.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/timelock.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don\'t use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 12905987977, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061041b806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146100725780633ccfd60b146100c957806379af55e4146100e0578063a4beda631461010d578063d0e30db014610164575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061016e565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b506100de610186565b005b3480156100ec57600080fd5b5061010b600480360381019080803590602001909291905050506102f0565b005b34801561011957600080fd5b5061014e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610340565b6040518082815260200191505060405180910390f35b61016c610358565b005b60006020528060005260406000206000915090505481565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156101d457600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211151561022157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102ec573d6000803e3d6000fd5b5050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60016020528060005260406000206000915090505481565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555062093a804201600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505600a165627a7a72305820bb879cf83fe7775d7712e65f5ccfe3ff6b08c35b7caeadac34df68b29cd8164b0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ccfd60b", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "540:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 3326418399, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061041b806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146100725780633ccfd60b146100c957806379af55e4146100e0578063a4beda631461010d578063d0e30db014610164575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061016e565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b506100de610186565b005b3480156100ec57600080fd5b5061010b600480360381019080803590602001909291905050506102f0565b005b34801561011957600080fd5b5061014e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610340565b6040518082815260200191505060405180910390f35b61016c610358565b005b60006020528060005260406000206000915090505481565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156101d457600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211151561022157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102ec573d6000803e3d6000fd5b5050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60016020528060005260406000206000915090505481565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555062093a804201600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505600a165627a7a72305820bb879cf83fe7775d7712e65f5ccfe3ff6b08c35b7caeadac34df68b29cd8164b0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "938:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}, {"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 22471828699, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x40024", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5061041b806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146100725780633ccfd60b146100c957806379af55e4146100e0578063a4beda631461010d578063d0e30db014610164575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061016e565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b506100de610186565b005b3480156100ec57600080fd5b5061010b600480360381019080803590602001909291905050506102f0565b005b34801561011957600080fd5b5061014e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610340565b6040518082815260200191505060405180910390f35b61016c610358565b005b60006020528060005260406000206000915090505481565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156101d457600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211151561022157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102ec573d6000803e3d6000fd5b5050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60016020528060005260406000206000915090505481565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555062093a804201600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505600a165627a7a72305820bb879cf83fe7775d7712e65f5ccfe3ff6b08c35b7caeadac34df68b29cd8164b0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x79af55e4ff", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x79af55e4ff", "name": "increaseLockTime(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "822:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 34476573229}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/timelock.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/token.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 4244480609, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060405160208061033b833981018060405281019080805190602001909291905050508060018190556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506102b08061008b6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610149565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610191565b604051808215151515815260200191505060405180910390f35b60015481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403101515156101e257600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060019050929150505600a165627a7a72305820accedb78bcf1e98d8b172ebdeb2ba73a3260c6e26848e21e559a713113a464200029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa9059cbb00000000000000000000000040000040400200002004010100400240010408800a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa9059cbb00000000000000000000000040000040400200002004010100400240010408800a", "name": "transfer(address,uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "469:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}, {"description": {"head": "The arithmetic operator can overflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 6650839328, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060405160208061033b833981018060405281019080805190602001909291905050508060018190556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506102b08061008b6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610149565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610191565b604051808215151515815260200191505060405180910390f35b60015481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403101515156101e257600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060019050929150505600a165627a7a72305820accedb78bcf1e98d8b172ebdeb2ba73a3260c6e26848e21e559a713113a464200029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa9059cbb000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffef8", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa9059cbb000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffef8", "name": "transfer(address,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "627:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}, {"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 6727863550, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b5060405160208061033b833981018060405281019080805190602001909291905050508060018190556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506102b08061008b6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610149565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610191565b604051808215151515815260200191505060405180910390f35b60015481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403101515156101e257600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060019050929150505600a165627a7a72305820accedb78bcf1e98d8b172ebdeb2ba73a3260c6e26848e21e559a713113a464200029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xa9059cbb00000000000000000000000040000040400200002004010100400240010408800a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xa9059cbb00000000000000000000000040000040400200002004010100400240010408800a", "name": "transfer(address,uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}]}, "locations": [{"sourceMap": "551:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 8269212723}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/token.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/tokensalechallenge.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 88507971525}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/tokensalechallenge.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/unchecked_return_value.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "sourceType": "", "sourceFormat": "", "sourceList": [], "meta": {"logs": [{"level": "error", "hidden": true, "msg": "Solc experienced a fatal error.\\n\\n./repositories/smartbugs-curated/unchecked_return_value.sol:7:1: SyntaxError: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\\npragma solidity 0.4.25;\\n^---------------------^\\n\\nSolidityVersionMismatch: Try adding the option \\"--solv 0.4.25\\"\\n"}]}}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/unprotected0.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 740660429}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/unprotected0.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/wallet_02_refund_nosub.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2803362369, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x8", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610427806100606000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d146100675780634ddaf8f214610094578063590e1ae3146100d7578063d0e30db0146100ee575b600080fd5b34801561007357600080fd5b50610092600480360381019080803590602001909291905050506100f8565b005b3480156100a057600080fd5b506100d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101dd565b005b3480156100e357600080fd5b506100ec610299565b005b6100f6610321565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561014657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561018c573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561023857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610295573d6000803e3d6000fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561031e573d6000803e3d6000fd5b50565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205434600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156103ac57fe5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a723058207ce142a103ccb897412796bbc9530be1662fb00254f0ac7aa08579b7ad6bebe00029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "939:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 65759263515}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/wallet_02_refund_nosub.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/wallet_03_wrong_constructor.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2349119186, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b506103e1806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d146100675780633e326048146100945780634ddaf8f2146100ab578063d0e30db0146100ee575b600080fd5b34801561007357600080fd5b50610092600480360381019080803590602001909291905050506100f8565b005b3480156100a057600080fd5b506100a96101dd565b005b3480156100b757600080fd5b506100ec600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021f565b005b6100f66102db565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561014657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561018c573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156102d7573d6000803e3d6000fd5b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205434600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561036657fe5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a723058203a33ffc2e5fa15d3f1264250976bf983e2b60a0173665287763eb8eac142fa740029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "869:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"mythril_execution_info": {"analysis_duration": 34626368284}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/wallet_03_wrong_constructor.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/wallet_04_confused_sign.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [{"description": {"head": "Any sender can withdraw Ether from the contract account.", "tail": "Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds."}, "extra": {"discoveryTime": 40770632266, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x3ffffffff", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061037d806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d1461005c5780634ddaf8f214610089578063d0e30db0146100cc575b600080fd5b34801561006857600080fd5b50610087600480360381019080803590602001909291905050506100d6565b005b34801561009557600080fd5b506100ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101bb565b005b6100d4610277565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015151561012457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561016a573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561021657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610273573d6000803e3d6000fd5b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205434600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561030257fe5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820f221eec4e2335ef5f861b62d9a830da8a41c78453b5b2ec1f0e89a465f884d7f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "name": "withdraw(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}]}, "locations": [{"sourceMap": "340:1:2"}], "severity": "High", "swcID": "SWC-105", "swcTitle": "Unprotected Ether Withdrawal"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2277896881, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x10", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061037d806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d1461005c5780634ddaf8f214610089578063d0e30db0146100cc575b600080fd5b34801561006857600080fd5b50610087600480360381019080803590602001909291905050506100d6565b005b34801561009557600080fd5b506100ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101bb565b005b6100d4610277565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015151561012457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561016a573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561021657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610273573d6000803e3d6000fd5b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205434600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561030257fe5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820f221eec4e2335ef5f861b62d9a830da8a41c78453b5b2ec1f0e89a465f884d7f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "769:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "The arithmetic operator can underflow.", "tail": "It is possible to cause an integer overflow or underflow in the arithmetic operation. "}, "extra": {"discoveryTime": 30844517230, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061037d806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d1461005c5780634ddaf8f214610089578063d0e30db0146100cc575b600080fd5b34801561006857600080fd5b50610087600480360381019080803590602001909291905050506100d6565b005b34801561009557600080fd5b506100ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101bb565b005b6100d4610277565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015151561012457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561016a573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561021657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610273573d6000803e3d6000fd5b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205434600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561030257fe5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505600a165627a7a72305820f221eec4e2335ef5f861b62d9a830da8a41c78453b5b2ec1f0e89a465f884d7f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0xd0e30db0", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0xd0e30db0", "name": "deposit()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000001", "name": "withdraw(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "433:1:2"}], "severity": "High", "swcID": "SWC-101", "swcTitle": "Integer Overflow and Underflow"}], "meta": {"mythril_execution_info": {"analysis_duration": 45908629894}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/wallet_04_confused_sign.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/arbitrary_location_write_simple.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 285189152}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/arbitrary_location_write_simple.sol"], "sourceType": "solidity-file"}]\n', stderr='')
CompletedProcess(args='myth analyze ./repositories/smartbugs-curated/auction.sol -o jsonv2 --max-depth 10', returncode=0, stdout='[{"issues": [], "meta": {"mythril_execution_info": {"analysis_duration": 14443143129}}, "sourceFormat": "text", "sourceList": ["./repositories/smartbugs-curated/auction.sol"], "sourceType": "solidity-file"}]\n', stderr='')
