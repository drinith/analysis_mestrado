==== Write to an arbitrary storage location ====
SWC ID: 124
Severity: High
Contract: Wallet
Function name: UpdateBonusCodeAt(uint256,uint256)
PC address: 294
Estimated Gas Usage: 6957 - 27147
The caller can write to arbitrary storage locations.
It is possible to write to arbitrary storage locations. By modifying the values of storage variables, attackers may bypass security controls or manipulate the business logic of the smart contract.
--------------------
In file: ./repositories/smartbugs-curated/arbitrary_location_write_simple.sol:33

bonusCodes[idx] = c

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0
Caller: [ATTACKER], function: UpdateBonusCodeAt(uint256,uint256), txdata: 0x4f798da7d6f21326ab749d5729fcba5677c79037b459436ab7bff709c9d06d35758a88b8, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Wallet
Function name: PopBonusCode()
PC address: 331
Estimated Gas Usage: 7692 - 27787
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./repositories/smartbugs-curated/arbitrary_location_write_simple.sol:28

bonusCodes.length--

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Wallet
Function name: PushBonusCode(uint256)
PC address: 471
Estimated Gas Usage: 11188 - 51378
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0
Caller: [ATTACKER], function: PushBonusCode(uint256), txdata: 0xfd10d655, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Wallet
Function name: PopBonusCode()
PC address: 534
Estimated Gas Usage: 12901 - 53091
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0
Caller: [CREATOR], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Wallet
Function name: PopBonusCode()
PC address: 536
Estimated Gas Usage: 12901 - 53091
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0
Caller: [CREATOR], function: PopBonusCode(), txdata: 0x7adde4ef, value: 0x0


