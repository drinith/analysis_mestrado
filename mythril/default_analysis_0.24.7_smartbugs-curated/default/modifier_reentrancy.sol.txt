==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: attack
Function name: supportsToken()
PC address: 351
Estimated Gas Usage: 8779 - 65457
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./repositories/smartbugs-curated/modifier_reentrancy.sol:42

ModifierEntrancy(msg.sender).airDrop()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: supportsToken(), txdata: 0x4d5f327c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ModifierEntrancy
Function name: airDrop()
PC address: 371
Estimated Gas Usage: 8935 - 65238
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./repositories/smartbugs-curated/modifier_reentrancy.sol:21

Bank(msg.sender).supportsToken()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: airDrop(), txdata: 0xca5d0880, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: attack
Function name: call(address)
PC address: 643
Estimated Gas Usage: 1760 - 36136
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./repositories/smartbugs-curated/modifier_reentrancy.sol:47

ModifierEntrancy(token).airDrop()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: call(address), txdata: 0xf55332abdededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ModifierEntrancy
Function name: airDrop()
PC address: 678
Estimated Gas Usage: 8935 - 65238
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./repositories/smartbugs-curated/modifier_reentrancy.sol:16

tokenBalance[msg.sender] += 20

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: airDrop(), txdata: 0xca5d0880, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ModifierEntrancy
Function name: airDrop()
PC address: 685
Estimated Gas Usage: 8935 - 65238
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./repositories/smartbugs-curated/modifier_reentrancy.sol:16

tokenBalance[msg.sender] += 20

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: airDrop(), txdata: 0xca5d0880, value: 0x0


